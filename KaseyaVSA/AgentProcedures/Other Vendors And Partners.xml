<?xml version="1.0" encoding="utf-8"?>
<ScriptExport xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.kaseya.com/vsa/2008/12/Scripting">
  <Folder name="Other Vendors And Partners 2018-10-26" treePres="3">
    <Folder name="Auvik" treePres="3">
      <Folder name="Windows" treePres="3">
        <Procedure name="Auvik - Windows - Install Collector Service" treePres="3" id="1201187772" folderId="637503220391228" treeFullPath="Upstream Kaseya Power Pack.Other Vendors And Partners 2018-10-26.Auvik.Windows">
          <Body description="">
            <Statement description="Procedure description: Use Kaseya to install Auvik network collector. Read more here: https://support.auvik.com/hc/en-us/articles/208219653-How-to-install-the-Auvik-collector-using-the-Windows-service#topic_install&#xD;&#xA;Kaseya customer value: Procedure to speed up the delivery of Auvik network monitorng services.&#xD;&#xA;End user value:&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Run Now.&#xD;&#xA;Report options: Agent Procedure log and &quot;C:\Auvik\install.log&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-05-04&#xD;&#xA;------------------------------------------------------------------------------------------------------------" name="GetVariable" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="Your Auvik User Name (email)" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="auvik_account_name" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="Your Auvik Password" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="auvik_password" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="Teant Name (&quot;tenantname&quot;.my.auvik.com)" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="auvik_tenant_name" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="md c:\Auvik" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement description="You can always manage your own files if you want. For convenience we have created a shared link." name="GetURL" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/z8ioMnudahsqRh0/download" />
              <Parameter xsi:type="StringParameter" name="ResponseFileName" value="c:\Auvik\AuvikService.exe" />
              <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="c:\Auvik\AuvikService.exe -install -dir c:\auvik  -user #auvik_account_name# -password #auvik_password# -tenant https://#auvik_tenant_name#.my.auvik.com &gt;&gt;c:\auvik\install.log" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="c:\Auvik\install.log" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="auvik-install-log" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Auvik install log: #auvik-install-log#" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Auvik - Windows - Uninstall Collector Service" treePres="3" id="1230902649" folderId="637503220391228" treeFullPath="Upstream Kaseya Power Pack.Other Vendors And Partners 2018-10-26.Auvik.Windows">
          <Body description="">
            <If description="Procedure description: Use Kaseya to uninstall Auvik network collector. Read more here: https://support.auvik.com/hc/en-us/articles/208219653-How-to-install-the-Auvik-collector-using-the-Windows-service#topic_uninstall&#xD;&#xA;Kaseya customer value: Procedure to speed up the removal of Auvik network monitorng services.&#xD;&#xA;End user value:&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Run Now.&#xD;&#xA;Report options: Agent Procedure log and &quot;C:\Auvik\install.log&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-05-04&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="c:\Auvik\AuvikService.exe" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="GetURL" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/z8ioMnudahsqRh0/download" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="c:\Auvik\AuvikService.exe" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
              </Then>
            </If>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="c:\Auvik\AuvikService -remove &gt;&gt;c:\auvik\uninstall.log" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <If description="">
              <Condition name="Windows 32 or 64 Bit Check">
                <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
              </Condition>
              <Then>
                <Statement name="DeleteRegistryKey" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="HKEY_LOCAL_MACHINE\Software\Auvik\Agent\1.0" />
                </Statement>
              </Then>
              <Else>
                <Statement name="DeleteRegistryKey64" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="HKEY_LOCAL_MACHINE\Software\WOW6432Node\Auvik\Agent\1.0" />
                </Statement>
              </Else>
            </If>
            <Statement name="GetVariable" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="c:\auvik\uninstall.log" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="auvik-uninstall-log" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="rd c:\auvik /s /q" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Auvik uninstall log: #auvik-uninstall-log#" />
            </Statement>
          </Body>
        </Procedure>
      </Folder>
    </Folder>
    <Folder name="IT Glue" treePres="3">
      <Folder name="Mac" treePres="3">
        <Procedure name="IT Glue - Mac OS X - Install IT Glue API Module" treePres="3" id="1780785402" folderId="304867375271798" treeFullPath="Upstream Kaseya Power Pack.Other Vendors And Partners 2018-10-26.IT Glue.Mac">
          <Body description="">
            <Statement description="Procedure description: Enable the IT Glue Chrome plug-in ona computer.&#xD;&#xA;Kaseya customer value: Speeds up password related tech supprot.&#xD;&#xA;End user value: Speeds up password related tech supprot.&#xD;&#xA;Dependencies: Windows OS, Chrome installed.&#xD;&#xA;Usage: Run Once.&#xD;&#xA;Report options: None.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------" name="ExecuteShellCommand" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="Command" value="brew cask install powershell" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement description="Enter your IT Glue API key. Read more here: https://kb.itglue.com/hc/en-us/articles/236404927-Getting-started-with-the-IT-Glue-API" name="GetVariable" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="Enter your ITGlue API key here" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="ITGlueAPIkey" />
            </Statement>
            <Statement description="Enter you IT Glue base URI. It's EU or US depending on you geograhical location. We defaulted to EU." name="GetVariable" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="EU" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="ITGlueURI" />
            </Statement>
            <If description="------------------------------------------------------------------------------------------------------------">
              <Condition name="Windows 32 or 64 Bit Check">
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              </Condition>
              <Then>
                <Statement name="Execute Powershell Command (64-bit, Run As System)" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                  <Parameter xsi:type="StringParameter" name="Parameter2" value="Install-Module -Name ITGlueAPI -data_center #ITGlueURI# -apikey #ITGlueAPIkey#" />
                  <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
                </Statement>
              </Then>
            </If>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="None">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Install IT Glue Chrome Plug-In: The Agent Procedure hit the last row and will now exit." />
            </Statement>
          </Body>
        </Procedure>
      </Folder>
      <Folder name="Windows" treePres="3">
        <Folder name="API Integrations" treePres="3">
          <Procedure name="IT Glue - API - Install Module" treePres="3" id="26100608" folderId="579583834428146" treeFullPath="Upstream Kaseya Power Pack.Other Vendors And Partners 2018-10-26.IT Glue.Windows.API Integrations">
            <Body description="">
              <If description="">
                <Condition name="Windows 32 or 64 Bit Check">
                  <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                </Condition>
                <Then>
                  <Statement name="Execute Powershell Command (64-bit, Run As System)" continueOnFail="false">
                    <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                    <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-ExecutionPolicy" />
                    <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
                  </Statement>
                  <Statement name="GetVariable" continueOnFail="false">
                    <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
                    <Parameter xsi:type="StringParameter" name="SourceContent" value="#global:psresult#" />
                    <Parameter xsi:type="StringParameter" name="VariableName" value="ExecutionPolicy" />
                  </Statement>
                  <Statement name="Execute Powershell Command (64-bit, Run As System)" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                    <Parameter xsi:type="StringParameter" name="Parameter2" value="if(!(Get-PackageProvider|? name -eq 'nuget'|select -expand name)){Install-PackageProvider nuget -Force}" />
                    <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                  </Statement>
                  <Statement name="Execute Powershell Command (64-bit, Run As System)" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                    <Parameter xsi:type="StringParameter" name="Parameter2" value="if((Get-PSRepository -name PSGallery |select -expand installationPolicy) -eq 'untrusted'){Set-PSRepository -Name PSGallery -InstallationPolicy 'Trusted'}" />
                    <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                  </Statement>
                  <Statement name="Execute Powershell Command (64-bit, Run As System)" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                    <Parameter xsi:type="StringParameter" name="Parameter2" value="Install-Module itglueapi" />
                    <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                  </Statement>
                  <Statement name="Execute Powershell Command (64-bit, Run As System)" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                    <Parameter xsi:type="StringParameter" name="Parameter2" value="Set-ExecutionPolicy Bypass -Force" />
                    <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                  </Statement>
                  <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="false">
                    <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                    <Parameter xsi:type="StringParameter" name="Parameter2" value="Import-Module ITGlueAPI;Set-ITGlueAPIKey &lt;ITGlueAPIKey&gt;;Add-ITGlueBaseURI -data_center eu;Export-ITGlueModuleSettings" />
                    <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                  </Statement>
                  <Statement name="Execute Powershell Command (64-bit, Run As System)" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                    <Parameter xsi:type="StringParameter" name="Parameter2" value="Set-ExecutionPolicy #ExecutionPolicy# -Force" />
                    <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                  </Statement>
                </Then>
                <Else>
                  <Statement name="Execute Powershell Command (32-bit, Run As System)" continueOnFail="false">
                    <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                    <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-ExecutionPolicy" />
                    <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                  </Statement>
                  <Statement name="GetVariable" continueOnFail="false">
                    <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
                    <Parameter xsi:type="StringParameter" name="SourceContent" value="#global:psresult#" />
                    <Parameter xsi:type="StringParameter" name="VariableName" value="ExecutionPolicy" />
                  </Statement>
                  <Statement name="Execute Powershell Command (32-bit, Run As System)" continueOnFail="false">
                    <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                    <Parameter xsi:type="StringParameter" name="Parameter2" value="if(!(Get-PackageProvider|? name -eq 'nuget'|select -expand name)){Install-PackageProvider nuget -Force}" />
                    <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                  </Statement>
                  <Statement name="Execute Powershell Command (32-bit, Run As System)" continueOnFail="false">
                    <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                    <Parameter xsi:type="StringParameter" name="Parameter2" value="if((Get-PSRepository -name PSGallery |select -expand installationPolicy) -eq 'untrusted'){Set-PSRepository -Name PSGallery -InstallationPolicy 'Trusted'}" />
                    <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                  </Statement>
                  <Statement name="Execute Powershell Command (32-bit, Run As System)" continueOnFail="false">
                    <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                    <Parameter xsi:type="StringParameter" name="Parameter2" value="Install-Module itglueapi" />
                    <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                  </Statement>
                  <Statement name="Execute Powershell Command (32-bit, Run As System)" continueOnFail="false">
                    <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                    <Parameter xsi:type="StringParameter" name="Parameter2" value="Set-ExecutionPolicy Bypass -Force" />
                    <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                  </Statement>
                  <Statement name="Execute Powershell Command (32-bit, Run As User)" continueOnFail="false">
                    <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                    <Parameter xsi:type="StringParameter" name="Parameter2" value="Import-Module ITGlueAPI;Set-ITGlueAPIKey &lt;ITGlueAPIKey&gt;;Add-ITGlueBaseURI -data_center eu;Export-ITGlueModuleSettings" />
                    <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                  </Statement>
                  <Statement name="Execute Powershell Command (32-bit, Run As System)" continueOnFail="false">
                    <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                    <Parameter xsi:type="StringParameter" name="Parameter2" value="Set-ExecutionPolicy #ExecutionPolicy# -Force" />
                    <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                  </Statement>
                </Else>
              </If>
            </Body>
          </Procedure>
          <Procedure name="IT Glue - API - Windows - Tag Computer to Office 365 On-Prem Apps Flex Asset" treePres="3" id="1869803491" folderId="579583834428146" treeFullPath="Upstream Kaseya Power Pack.Other Vendors And Partners 2018-10-26.IT Glue.Windows.API Integrations">
            <Body description="">
              <Statement description="Procedure description: Tag and relate a computer with Office 365 installed to the related IT Glue flexible asset.&#xD;&#xA;Kaseya customer value: Automate the IT Glue documentation.&#xD;&#xA;End user value: Better support and documentation.&#xD;&#xA;Dependencies: Windows OS. Managed variable &quot;ITGlue_OrgID&quot; has to exist on Org in Kaseya.&#xD;&#xA;Usage: Schedule recurringly from Kaseya Policy Manager or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for &quot;UPSTREAM: Get Win 10 Version:&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Enter the ID of the IT Glue Flexible Asset you wan to update. In this case it's a custom called &quot;On-Prem Apps&quot;. https://upstream.eu.itglue.com/DOC-1387150-1311945" name="GetVariable" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="863927960469664" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="FlexibleAssetID" />
              </Statement>
              <Statement description="//Let's get our powershell code on GitHub." name="GetURL" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="URL" value="https://raw.githubusercontent.com/UpstreamAB/ITGluePowerPack/Development/Applications/upload_office365.ps1" />
                <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\upload_office365.ps1" />
                <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
              </Statement>
              <Statement description="rätt os" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="powershell.exe &quot;#vAgentConfiguration.agentTempDir#\upload_office365.ps1 -OrganizationId &lt;ITGlue_OrgId&gt; -FlexibleAssetTypeId #FlexibleAssetID# -TagConfiguration | Out-File #vAgentConfiguration.agentTempDir#\upload_office365_log.txt&quot;" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="User" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement name="DeleteFile" continueOnFail="false" osType="None">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\upload_office365.ps1" />
              </Statement>
            </Body>
          </Procedure>
          <Procedure name="IT Glue - API - Windows - Uninstall IT Glue API Module" treePres="3" id="173953067" folderId="579583834428146" treeFullPath="Upstream Kaseya Power Pack.Other Vendors And Partners 2018-10-26.IT Glue.Windows.API Integrations">
            <Body description="">
              <If description="Procedure description: Enable the IT Glue Chrome plug-in ona computer.&#xD;&#xA;Kaseya customer value: Speeds up password related tech supprot.&#xD;&#xA;End user value: Speeds up password related tech supprot.&#xD;&#xA;Dependencies: Windows OS, Chrome installed.&#xD;&#xA;Usage: Run Once.&#xD;&#xA;Report options: None.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
                <Condition name="Windows 32 or 64 Bit Check">
                  <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                </Condition>
                <Then>
                  <Statement name="Execute Powershell Command (64-bit, Run As System)" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                    <Parameter xsi:type="StringParameter" name="Parameter2" value="Uninstall-Module -Name ITGlueAPI" />
                    <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
                  </Statement>
                </Then>
              </If>
              <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="None">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Install IT Glue Chrome Plug-In: The Agent Procedure hit the last row and will now exit." />
              </Statement>
            </Body>
          </Procedure>
          <Procedure name="IT Glue - Windows - Install IT Glue API Module" treePres="3" id="441804949" folderId="579583834428146" treeFullPath="Upstream Kaseya Power Pack.Other Vendors And Partners 2018-10-26.IT Glue.Windows.API Integrations">
            <Body description="">
              <Statement description="Procedure description: Enable the IT Glue Chrome plug-in ona computer.&#xD;&#xA;Kaseya customer value: Speeds up password related tech supprot.&#xD;&#xA;End user value: Speeds up password related tech supprot.&#xD;&#xA;Dependencies: Windows OS, Chrome installed.&#xD;&#xA;Usage: Run Once.&#xD;&#xA;Report options: None.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Enter your IT Glue API key. Read more here: https://kb.itglue.com/hc/en-us/articles/236404927-Getting-started-with-the-IT-Glue-API" name="GetVariable" continueOnFail="false" osType="None">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="ITGlueAPIkey" />
              </Statement>
              <Statement description="Enter you IT Glue base URI. It's EU or US depending on you geograhical location. We defaulted to EU." name="GetVariable" continueOnFail="false" osType="None">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="EU" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="ITGlueURI" />
              </Statement>
              <Statement description="------------------------------------------------------------------------------------------------------------" name="Execute Powershell Command (64-bit, Run As System)" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Parameter1" value="Install-Module -Name ITGlueAPI" />
                <Parameter xsi:type="StringParameter" name="Parameter2" value="" />
                <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
              </Statement>
            </Body>
          </Procedure>
        </Folder>
        <Procedure name="IT Glue - Windows - Install IT Glue Chrome Plug-In" treePres="3" id="505210561" folderId="579756025960555" treeFullPath="Upstream Kaseya Power Pack.Other Vendors And Partners 2018-10-26.IT Glue.Windows">
          <Body description="">
            <If description="Procedure description: Enable the IT Glue Chrome plug-in ona computer.&#xD;&#xA;Kaseya customer value: Speeds up password related tech supprot.&#xD;&#xA;End user value: Speeds up password related tech supprot.&#xD;&#xA;Dependencies: Windows OS, Chrome installed.&#xD;&#xA;Usage: Run Once.&#xD;&#xA;Report options: None.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Settings can be reviewed here: https://developer.chrome.com/extensions/external_extensions#registry">
              <Condition name="Windows 32 or 64 Bit Check">
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              </Condition>
              <Then>
                <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="reg add &quot;HKLM\SOFTWARE\Wow6432Node\Google\Chrome\Extensions\bfcdaalpeodhimbiipneeaoeogkkminc&quot; /v &quot;update_url&quot; /t REG_SZ /d &quot;https://clients2.google.com/service/update2/crx&quot;" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="User" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="True" />
                </Statement>
              </Then>
            </If>
            <If description="">
              <Condition name="Windows 32 or 64 Bit Check">
                <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
              </Condition>
              <Then>
                <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="reg add &quot;HKLM\SOFTWARE\Google\Chrome\Extensions\bfcdaalpeodhimbiipneeaoeogkkminc&quot; /v &quot;update_url&quot; /t REG_SZ /d &quot;https://clients2.google.com/service/update2/crx&quot;" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
              </Then>
            </If>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="None">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Install IT Glue Chrome Plug-In: The Agent Procedure hit the last row and will now exit." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="IT Glue - Windows - Install MyGlue Chrome Plug-In" treePres="3" id="23039110" folderId="579756025960555" treeFullPath="Upstream Kaseya Power Pack.Other Vendors And Partners 2018-10-26.IT Glue.Windows">
          <Body description="">
            <If description="Procedure description: Enable the MyGlue Chrome plug-in on a customers computer.&#xD;&#xA;Kaseya customer value: Speeds up password related tech support.&#xD;&#xA;End user value: Speeds up password related tech support.&#xD;&#xA;Dependencies: Windows OS, Chrome installed.&#xD;&#xA;Usage: Run Once.&#xD;&#xA;Report options: None.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Settings can be reviewed here: https://developer.chrome.com/extensions/external_extensions#registry">
              <Condition name="Windows 32 or 64 Bit Check">
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              </Condition>
              <Then>
                <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="reg add &quot;HKLM\SOFTWARE\Wow6432Node\Google\Chrome\Extensions\mlhdnjepakdfdaabohjgegnomlgeejep&quot; /v &quot;update_url&quot; /t REG_SZ /d &quot;https://clients2.google.com/service/update2/crx&quot;" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="User" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="True" />
                </Statement>
              </Then>
            </If>
            <If description="">
              <Condition name="Windows 32 or 64 Bit Check">
                <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
              </Condition>
              <Then>
                <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="reg add &quot;HKLM\SOFTWARE\Google\Chrome\Extensions\mlhdnjepakdfdaabohjgegnomlgeejep&quot; /v &quot;update_url&quot; /t REG_SZ /d &quot;https://clients2.google.com/service/update2/crx&quot;" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
              </Then>
            </If>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Install MyGlue Chrome Plug-In: The Agent Procedure hit the last row and will now exit." />
            </Statement>
          </Body>
        </Procedure>
      </Folder>
    </Folder>
    <Folder name="RapidfireTools" treePres="3">
      <Folder name="Windows" treePres="3">
        <Procedure name="RapidFire - Windows - Run Local Machine Assessment" treePres="3" id="1717001256" folderId="308182284286331" treeFullPath="Upstream Kaseya Power Pack.Other Vendors And Partners 2018-10-26.RapidfireTools.Windows">
          <Body description="">
            <Statement description="Under development." name="GetURL" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="URL" value="https://s3.amazonaws.com/networkdetective/download/NetworkDetectiveComputerDataCollector.exe" />
              <Parameter xsi:type="StringParameter" name="ResponseFileName" value="c:\kworking\nd-local.zip" />
              <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
            </Statement>
            <Statement name="Unzip file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="c:\kworking\nd-local.zip" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="c:\kworking\nd-local" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
            </Statement>
            <Statement name="ExecuteFile" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Path" value="c:\kworking\nd-local\nddc.exe" />
              <Parameter xsi:type="StringParameter" name="Arguments" value="-net -whois -eventlogs -internet -speedchecks" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
            </Statement>
          </Body>
        </Procedure>
      </Folder>
    </Folder>
    <Folder name="Webroot" treePres="3">
      <Folder name="Mac" treePres="3">
        <Procedure name="Webroot - Mac OS X - Deploy Webroot AV" treePres="3" id="760281244" folderId="246885073067101" treeFullPath="Upstream Kaseya Power Pack.Other Vendors And Partners 2018-10-26.Webroot.Mac">
          <Body description="&#xA;">
            <Statement description="Procedure description: Silently deploy Webroot AV Agent.&#xD;&#xA;Kaseya customer value: Speeds up deployment of Webroot on a csutomer site.&#xD;&#xA;End user value: Compliance and security benefits.&#xD;&#xA;Dependencies: Mac OS X.&#xD;&#xA;Usage: Run Once. Enter correct Webroot Key Code when prompted.&#xD;&#xA;Report options: Agent Procedure Log. Look for &quot;UPSTREAM: Webroot: Deployed Successfully.&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2017-02-02&#xD;&#xA;------------------------------------------------------------------------------------------------------------" name="GetVariable" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="WebrootKeyCode" />
            </Statement>
            <If description="">
              <Condition name="ServiceIsRunning">
                <Parameter xsi:type="StringParameter" name="ServiceName" value="WSDaemon" />
              </Condition>
              <Then>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="MacOS">
                  <Parameter xsi:type="StringParameter" name="Comment" value="Webroot is already installed" />
                </Statement>
              </Then>
              <Else>
                <Statement name="GetURL" continueOnFail="false" osType="MacOS">
                  <Parameter xsi:type="StringParameter" name="URL" value="http://anywhere.webrootcloudav.com/zerol/wsamacsme.dmg" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#/wsamacsme.dmg" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement name="ExecuteShellCommand" continueOnFail="false" osType="MacOS">
                  <Parameter xsi:type="StringParameter" name="Command" value="sudo hdiutil attach -nobrowse #vAgentConfiguration.agentTempDir#/wsamacsme.dmg" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement name="ExecuteShellCommand" continueOnFail="false" osType="MacOS">
                  <Parameter xsi:type="StringParameter" name="Command" value="cp -R /Volumes/Webroot\ SecureAnywhere/Webroot\ SecureAnywhere.app /Applications/" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement name="ExecuteShellCommand" continueOnFail="false" osType="MacOS">
                  <Parameter xsi:type="StringParameter" name="Command" value="diskutil list | grep Webroot\ SecureAnywhere | diskutil unmount /Volumes/Webroot\ SecureAnywhere" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false" osType="MacOS">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#/wsamacsme.dmg" />
                </Statement>
                <Statement name="ExecuteShellCommand" continueOnFail="false" osType="MacOS">
                  <Parameter xsi:type="StringParameter" name="Command" value="sudo /Applications/Webroot\ SecureAnywhere.app/Contents/MacOS/Webroot\ SecureAnywhere install -language=en -keycode=#WebrootKeyCode# -silent" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <If description="">
                  <Condition name="ServiceIsRunning">
                    <Parameter xsi:type="StringParameter" name="ServiceName" value="WSDaemon" />
                  </Condition>
                  <Then>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Webroot: Deployed Successfully." />
                    </Statement>
                  </Then>
                  <Else>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Webroot: Deployment failed." />
                    </Statement>
                  </Else>
                </If>
              </Else>
            </If>
          </Body>
        </Procedure>
      </Folder>
      <Folder name="Windows" treePres="3">
        <Procedure name="Webroot - Windows - Deploy Webroot AV" treePres="3" id="2142373061" folderId="150843224465308" treeFullPath="Upstream Kaseya Power Pack.Other Vendors And Partners 2018-10-26.Webroot.Windows">
          <Body description="Deploy WebRoot AntiVirus to Windows Machine.">
            <Statement description="Procedure description: Silently deploy Webroot AV Agent.&#xD;&#xA;Kaseya customer value: Speeds up deployment of Webroot on a csutomer site.&#xD;&#xA;End user value: Compliance and security benefits.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Run Once. Enter correct Webroot Key Code when prompted.&#xD;&#xA;Report options: Agent Procedure Log. Look for &quot;UPSTREAM: Webroot: Deployed Successfully.&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2017-02-02&#xD;&#xA;------------------------------------------------------------------------------------------------------------" name="GetVariable" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="WebrootKeyCode" />
            </Statement>
            <If description="">
              <Condition name="ServiceIsRunning">
                <Parameter xsi:type="StringParameter" name="ServiceName" value="WRSVC" />
              </Condition>
              <Then>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="Webroot is already installed on #vAgentConfiguration.machName#" />
                </Statement>
              </Then>
              <Else>
                <Statement name="GetURL" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="URL" value="http://anywhere.webrootcloudav.com/zerol/wsasme.msi" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\wsasme.msi" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="msiexec /i #vAgentConfiguration.agentTempDir#\wsasme.msi GUILIC=#WebrootKeyCode# CMDLINE=SME,quiet /qn /l*v webroot_install.log" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement name="PauseScript" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="IntegerParameter" name="Seconds" value="60" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\wsasme.msi" />
                </Statement>
                <If description="">
                  <Condition name="ServiceIsRunning">
                    <Parameter xsi:type="StringParameter" name="ServiceName" value="WRSVC" />
                  </Condition>
                  <Then>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Webroot: Deployed Successfully." />
                    </Statement>
                  </Then>
                  <Else>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Webroot: Deployment failed. Evaluate #vAgentConfiguration.agentTempDir#\webroot_install.log on the target machine." />
                    </Statement>
                  </Else>
                </If>
              </Else>
            </If>
          </Body>
        </Procedure>
      </Folder>
    </Folder>
  </Folder>
</ScriptExport>

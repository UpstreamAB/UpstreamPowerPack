<?xml version="1.0" encoding="utf-8"?>
<ScriptExport xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.kaseya.com/vsa/2008/12/Scripting">
  <Folder name="Upstream Power Pack 2019-11-28" treePres="3">
    <Folder name="3rd Party Application Mgmt Examples 2018-12-19" treePres="3">
      <Folder name="Mac" treePres="3">
        <Folder name="Application Deployment" treePres="3">
          <Folder name="Language Independent" treePres="3">
            <Procedure name="Application Deployment - Mac OS X - Chrome - Deploy Latest" treePres="3" id="1642126526" folderId="998132004448273" treeFullPath="Upstream Power Pack 2019-11-28.3rd Party Application Mgmt Examples 2018-12-19.Mac.Application Deployment.Language Independent">
              <Body description="Description: Force any Skype version to be updated to latest silently. If Skype does not exist it will be deployed.&#xA;&#xA;Kaseya customer value: Procedure to secure and enhance clients with the latest software.&#xA;&#xA;End user value: Procedure to secure and enhance clients with the latest software and functions.&#xA;&#xA;Dependencies: Windows OS. The MSI package should stay in Kaseya agent working folder after deployment.&#xA;&#xA;Usage: Run at any given time. The installer will close any running Skype session without notification.&#xA;&#xA;Report options: Procedure Log, content: &quot;Skype deployed or updated to latest version.&quot;&#xA;&#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot;. No support included.">
                <Statement name="GetURL" continueOnFail="false" osType="MacOS">
                  <Parameter xsi:type="StringParameter" name="URL" value="https://dl.google.com/chrome/mac/stable/GGRO/googlechrome.dmg" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#/googlechrome.dmg" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement name="ExecuteShellCommand" continueOnFail="false" osType="MacOS">
                  <Parameter xsi:type="StringParameter" name="Command" value="hdiutil mount -nobrowse #vAgentConfiguration.agentTempDir#/googlechrome.dmg" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement name="ExecuteShellCommand" continueOnFail="false" osType="MacOS">
                  <Parameter xsi:type="StringParameter" name="Command" value="cp -R &quot;/Volumes/Google Chrome/Google Chrome.app&quot; /Applications" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement name="ExecuteShellCommand" continueOnFail="false" osType="MacOS">
                  <Parameter xsi:type="StringParameter" name="Command" value="hdiutil unmount &quot;/Volumes/Google Chrome&quot;" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false" osType="MacOS">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#/googlechrome.dmg" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="MacOS">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chrome deployed or updated to latest version." />
                </Statement>
              </Body>
            </Procedure>
          </Folder>
        </Folder>
      </Folder>
      <Folder name="Windows" treePres="3">
        <Folder name="Application Deployment" treePres="3">
          <Folder name="Danish" treePres="3">
            <Procedure name="Application Deployment - Windows - Adobe Acrobat Reader DC - Danish - Deploy Example" treePres="3" id="1597682317" folderId="778790150246956" treeFullPath="Upstream Power Pack 2019-11-28.3rd Party Application Mgmt Examples 2018-12-19.Windows.Application Deployment.Danish">
              <Body description="">
                <Statement description="Procedure description: Deploy latest Danish Adobe Acrobat Reader DC. Removes any existing Adobe Reader/Acrobat Reader DC version and language.&#xD;&#xA;Kaseya customer value: Procedure to secure and standardize clients with the latest software and language.&#xD;&#xA;End user value: Limiting the risks for Adobe Reader exploits, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule Once or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for before, during and after update deployment statements.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2017-05-04&#xD;&#xA;------------------------------------------------------------------------------------------------------------" name="GetURL" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="URL" value="https://admdownload.adobe.com/bin/live/readerdc_dk_xa_install.exe" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\AdobeReaderDC.exe" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement name="ExecuteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\AdobeReaderDC.exe" />
                  <Parameter xsi:type="StringParameter" name="Arguments" value="/sAll /rs /l /msi /qb- /norestart EULA_ACCEPT=YES" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement description="Let's do a post check to see if the software got installed properly." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="wmic product where &quot;Name like 'Adobe%Acrobat%Reader%DC%'&quot; get Name, Version /Format:value &gt;&gt; #vAgentConfiguration.agentTempDir#\adobe_reader_version.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="This is for Kaseya to understand the text file from the WMI command above. We have to re-encode it." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="type #vAgentConfiguration.agentTempDir#\adobe_reader_version.result &gt;&gt; #vAgentConfiguration.agentTempDir#\adobe_reader_version_utf.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="Now we can get the file content and use it as a variable. " name="GetVariable" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\adobe_reader_version_utf.result" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="adobe_reader_version" />
                </Statement>
                <If description="">
                  <Condition name="TestFile">
                    <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\adobe_reader_version_utf.result" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                    <Parameter xsi:type="StringParameter" name="Value" value="17.009.20044" />
                  </Condition>
                  <Then>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Hashtag: AppDeploy AdobeReader" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Success! Latest Adobe Reader present on the system after deployment: #adobe_reader_version#" />
                    </Statement>
                  </Then>
                  <Else>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Fail! Adobe Reader present on the system after deployment but NOT latest versionl: #adobe_reader_version#" />
                    </Statement>
                  </Else>
                </If>
                <Statement description="Let's do some house cleaning." name="DeleteFile" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\AdobeReaderDC.exe" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\adobe_reader_version.result" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\adobe_reader_version_utf.result" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Acrobat Reader DC - Danish - Deploy Latest. The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
                </Statement>
              </Body>
            </Procedure>
            <Procedure name="Application Deployment - Windows - Firefox - Danish - Deploy Example" treePres="3" id="632796199" folderId="778790150246956" treeFullPath="Upstream Power Pack 2019-11-28.3rd Party Application Mgmt Examples 2018-12-19.Windows.Application Deployment.Danish">
              <Body description="Description: The procedure will deploy or update to current Firefox version.&#xA;&#xA;Kaseya customer value: Procedure to secure clients by updating the software to latest version.&#xA;&#xA;End user value: Limiting the risks for malware, virus attacks, downtime and data loss due to unpatched web browser.&#xA;&#xA;Dependencies: Windows OS.&#xA;&#xA;Usage: Run at any given time. During the process any running Firefox will be closed without notification to the end user. &#xA;&#xA;Report options: Procedure Log, content: &quot;Firefox deployed or updated to latest version.&quot;&#xA;&#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot;. No support included.">
                <Statement description="Get the latest firefox install package from Mozilla." name="GetURL" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="URL" value="http://download.mozilla.org/?product=firefox-latest&amp;os=win&amp;lang=da" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\firefox.exe" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <If description="If Firefox is running, kill it. In this case without warning the user.">
                  <Condition name="ApplicationRunning">
                    <Parameter xsi:type="StringParameter" name="ApplicationName" value="firefox.exe" />
                  </Condition>
                  <Then>
                    <Statement name="CloseApplication" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="ApplicationName" value="firefox.exe" />
                    </Statement>
                  </Then>
                </If>
                <Statement description="Execute the Firefox installer silently as local system." name="ExecuteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\firefox.exe" />
                  <Parameter xsi:type="StringParameter" name="Arguments" value="-ms" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement description="Some house cleaning." name="DeleteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\firefox.exe" />
                </Statement>
                <Statement description="Let's take a note in the Agent Procedure Log for easy reporting." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Firefox deployed or updated to latest version." />
                </Statement>
              </Body>
            </Procedure>
          </Folder>
          <Folder name="Finnish" treePres="3">
            <Procedure name="Application Deployment - Windows - Adobe Acrobat Reader DC - Finnish - Deploy Example" treePres="3" id="864679401" folderId="688018859963872" treeFullPath="Upstream Power Pack 2019-11-28.3rd Party Application Mgmt Examples 2018-12-19.Windows.Application Deployment.Finnish">
              <Body description="">
                <Statement description="Procedure description: Deploy latest Finnish Adobe Acrobat Reader DC. Removes any existing Adobe Reader/Acrobat Reader DC version and language.&#xD;&#xA;Kaseya customer value: Procedure to secure and standardize clients with the latest software and language.&#xD;&#xA;End user value: Limiting the risks for Adobe Reader exploits, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule Once or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for before, during and after update deployment statements.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2017-05-04&#xD;&#xA;------------------------------------------------------------------------------------------------------------" name="GetURL" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="URL" value="https://admdownload.adobe.com/bin/live/readerdc_fi_xa_install.exe" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\AdobeReaderDC.exe" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement name="ExecuteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\AdobeReaderDC.exe" />
                  <Parameter xsi:type="StringParameter" name="Arguments" value="/sAll /rs /l /msi /qb- /norestart EULA_ACCEPT=YES" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement description="Let's do a post check to see if the software got installed properly." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="wmic product where &quot;Name like 'Adobe%Acrobat%Reader%DC%'&quot; get Name, Version /Format:value &gt;&gt; #vAgentConfiguration.agentTempDir#\adobe_reader_version.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="This is for Kaseya to understand the text file from the WMI command above. We have to re-encode it." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="type #vAgentConfiguration.agentTempDir#\adobe_reader_version.result &gt;&gt; #vAgentConfiguration.agentTempDir#\adobe_reader_version_utf.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="Now we can get the file content and use it as a variable. " name="GetVariable" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\adobe_reader_version_utf.result" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="adobe_reader_version" />
                </Statement>
                <If description="">
                  <Condition name="TestFile">
                    <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\adobe_reader_version_utf.result" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                    <Parameter xsi:type="StringParameter" name="Value" value="17.009.20044" />
                  </Condition>
                  <Then>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Hashtag: AppDeploy AdobeReader" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Success! Latest Adobe Reader present on the system after deployment: #adobe_reader_version#" />
                    </Statement>
                  </Then>
                  <Else>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Fail! Adobe Reader present on the system after deployment but NOT latest versionl: #adobe_reader_version#" />
                    </Statement>
                  </Else>
                </If>
                <Statement description="Let's do some house cleaning." name="DeleteFile" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\AdobeReaderDC.exe" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\adobe_reader_version.result" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\adobe_reader_version_utf.result" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Acrobat Reader DC - Finnish - Deploy Latest. The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
                </Statement>
              </Body>
            </Procedure>
            <Procedure name="Application Deployment - Windows - Firefox - Finnish - Deploy Example" treePres="3" id="2047266922" folderId="688018859963872" treeFullPath="Upstream Power Pack 2019-11-28.3rd Party Application Mgmt Examples 2018-12-19.Windows.Application Deployment.Finnish">
              <Body description="Description: The procedure will deploy or update to current Firefox version.&#xA;&#xA;Kaseya customer value: Procedure to secure clients by updating the software to latest version.&#xA;&#xA;End user value: Limiting the risks for malware, virus attacks, downtime and data loss due to unpatched web browser.&#xA;&#xA;Dependencies: Windows OS.&#xA;&#xA;Usage: Run at any given time. During the process any running Firefox will be closed without notification to the end user. &#xA;&#xA;Report options: Procedure Log, content: &quot;Firefox deployed or updated to latest version.&quot;&#xA;&#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot;. No support included.">
                <Statement description="Get the latest firefox install package from Mozilla." name="GetURL" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="URL" value="http://download.mozilla.org/?product=firefox-latest&amp;os=win&amp;lang=fi" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\firefox.exe" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <If description="If Firefox is running, kill it. In this case without warning the user.">
                  <Condition name="ApplicationRunning">
                    <Parameter xsi:type="StringParameter" name="ApplicationName" value="firefox.exe" />
                  </Condition>
                  <Then>
                    <Statement name="CloseApplication" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="ApplicationName" value="firefox.exe" />
                    </Statement>
                  </Then>
                </If>
                <Statement description="Execute the Firefox installer silently as local system." name="ExecuteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\firefox.exe" />
                  <Parameter xsi:type="StringParameter" name="Arguments" value="-ms" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement description="Some house cleaning." name="DeleteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\firefox.exe" />
                </Statement>
                <Statement description="Let's take a note in the Agent Procedure Log for easy reporting." name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Firefox deployed or updated to latest version." />
                </Statement>
              </Body>
            </Procedure>
          </Folder>
          <Folder name="Language Independent" treePres="3">
            <Procedure name="Application Deployment - Windows - 7-Zip - Deploy Example (Simplified)" treePres="3" id="1508625787" folderId="588264500903088" treeFullPath="Upstream Power Pack 2019-11-28.3rd Party Application Mgmt Examples 2018-12-19.Windows.Application Deployment.Language Independent">
              <Body description="">
                <If description="">
                  <Condition name="Windows 32 or 64 Bit Check">
                    <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                  </Condition>
                  <Then>
                    <Statement description="Let's download the latest 7-Zip 32bit installer from http://downloads.sourceforge.net/project/sevenzip to the local kworking folder." name="GetURL" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="URL" value="https://www.7-zip.org/a/7z1805.msi" />
                      <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\7zip.msi" />
                      <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                    </Statement>
                  </Then>
                </If>
                <If description="Is Windows OS 64bit?">
                  <Condition name="Windows 32 or 64 Bit Check">
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                  </Condition>
                  <Then>
                    <Statement description="Let's download the latest 7-Zip 64bit installer from http://downloads.sourceforge.net/project/sevenzip to the local kworking folder." name="GetURL" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="URL" value="https://www.7-zip.org/a/7z1805-x64.msi" />
                      <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\7zip.msi" />
                      <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                    </Statement>
                  </Then>
                </If>
                <Statement description="Execute the installer with a bunch of silent switches as local system account." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="msiexec /i #vAgentConfiguration.agentTempDir#\7zip.msi /q" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="After install, let's delete the installer package from the local kworking folder." name="DeleteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\7zip.msi" />
                </Statement>
                <Statement description="Procedure log for easy reporting." name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: 7-Zip deployed or updated to latest version" />
                </Statement>
              </Body>
            </Procedure>
            <Procedure name="Application Deployment - Windows - Adobe AIR - Deploy Example" treePres="3" id="12189435" folderId="588264500903088" treeFullPath="Upstream Power Pack 2019-11-28.3rd Party Application Mgmt Examples 2018-12-19.Windows.Application Deployment.Language Independent">
              <Body description="">
                <Statement description="Let's download tha latest Adobe AIR installer." name="GetURL" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="URL" value="https://airdownload.adobe.com/air/win/download/29.0/AdobeAIRInstaller.exe" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\AdobeAIR.exe" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement description="Execute the Adobe AIR installer." name="ExecuteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\AdobeAIR.exe" />
                  <Parameter xsi:type="StringParameter" name="Arguments" value="-silent -eulaAccepted" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement description="Delete installer package." name="DeleteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\AdobeAIR.exe" />
                </Statement>
                <Statement description="Procedure log for easy reporting." name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Air deployed or updated to latest version." />
                </Statement>
              </Body>
            </Procedure>
            <Procedure name="Application Deployment - Windows - Adobe Flash Player ActiveX - Deploy Example" treePres="3" id="1201867855" folderId="588264500903088" treeFullPath="Upstream Power Pack 2019-11-28.3rd Party Application Mgmt Examples 2018-12-19.Windows.Application Deployment.Language Independent">
              <Body description="">
                <If description="Procedure description: Deploy Adobe Flash Player ActiveX. Update to latest if present.&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for unwanted external Flash related exploits, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule or run now.&#xD;&#xA;Report options: Agent Procedure log. Look for before, during and after update or deployment statements.&#xD;&#xA;Maintainer: ronny@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 1: We look for Adobe Flash Player ActiveX on the system before dployment for reporting purposes.&#xD;&#xA;The IF/ELSE statements below will look for existing trace of Adobe Flash Player activeX in the registry before deployment, put it in a variable and finally write to the Agent Procedure log.">
                  <Condition name="CheckRegistryValue">
                    <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_LOCAL_MACHINE\SOFTWARE\Macromedia\FlashPlayerActiveX\Version" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                    <Parameter xsi:type="StringParameter" name="Value" value="" />
                  </Condition>
                  <Then>
                    <Statement name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="EnumParameter" name="VariableType" value="RegistryValue" />
                      <Parameter xsi:type="StringParameter" name="SourceContent" value="HKEY_LOCAL_MACHINE\SOFTWARE\Macromedia\FlashPlayerActiveX\Version" />
                      <Parameter xsi:type="StringParameter" name="VariableName" value="FlashPlayerActiveXVersion" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Flash Player ActiveX version before deployment (note: this is not the built in IE 10+ or Chrome version) identified as: #FlashPlayerActiveXVersion#" />
                    </Statement>
                  </Then>
                  <Else>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Flash Player ActiveX not present on the system before deployment." />
                    </Statement>
                  </Else>
                </If>
                <Statement description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 2: The deployment part." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Downloading Adobe Flash Player ActiveX installer from ftpdownload.macromedia.com" />
                </Statement>
                <Statement name="GetURL" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="URL" value="http://fpdownload.macromedia.com/pub/flashplayer/latest/help/install_flash_player_ax.exe" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\install_flash_player_active_x.exe" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement description="In this example the Adobe Flash Playser installer will run even if latest Flash already exist on the system. You can set extended IF/ELSE statements and registry checks to avoidi this." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Flash Player ActiveX deployment." />
                </Statement>
                <If description="In order to get Adobe Flash Player ActiveX installed all Internet Explorer sessions have to be closed.&#xD;&#xA;The IF/ELSE statements below will try to kill iexplore.exe if running in three different ways.">
                  <Condition name="ApplicationRunning">
                    <Parameter xsi:type="StringParameter" name="ApplicationName" value="iexplore.exe" />
                  </Condition>
                  <Then>
                    <Statement description="Let's try to kill &quot;iexplore.exe&quot; with the tools we have." name="CloseApplication" continueOnFail="true" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="ApplicationName" value="iexplore.exe" />
                    </Statement>
                    <Statement name="ExecuteShellCommand" continueOnFail="true" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Command" value="wmic process where name=&quot;iexplore.exe&quot; call terminate" />
                      <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="User" />
                      <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                    </Statement>
                    <Statement name="PauseScript" continueOnFail="true" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="IntegerParameter" name="Seconds" value="10" />
                    </Statement>
                    <Statement name="ExecuteShellCommand" continueOnFail="true" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Command" value="wmic process where name=&quot;iexplore.exe&quot; call terminate" />
                      <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                      <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                    </Statement>
                    <Statement name="PauseScript" continueOnFail="true" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="IntegerParameter" name="Seconds" value="10" />
                    </Statement>
                    <If description="">
                      <Condition name="ApplicationRunning">
                        <Parameter xsi:type="StringParameter" name="ApplicationName" value="iexplore.exe" />
                      </Condition>
                      <Then>
                        <Statement description="If Internet Explorer is still running, we need to abort the ActiveX installation. We take a note in the Agent Procedure log." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Internet Explorer failed to exit. Deployment of Adobe Flash Player ActiveX will not continue." />
                        </Statement>
                      </Then>
                      <Else>
                        <Statement description="Internet Explorer is now closed and we are ready to execute the Adobe Flash Player ActiveX installer." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Internet Explorer was running but closed successfully. Adobe Flash Player ActiveX deployment or update begins." />
                        </Statement>
                        <Statement name="ExecuteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                          <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\install_flash_player_active_x.exe" />
                          <Parameter xsi:type="StringParameter" name="Arguments" value="-install" />
                          <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                          <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                        </Statement>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Flash Player ActiveX deployment or update completed." />
                        </Statement>
                      </Else>
                    </If>
                  </Then>
                </If>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Internet Explorer was not running. Adobe Flash Player ActiveX deployment or update begins." />
                </Statement>
                <Statement name="ExecuteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\install_flash_player_active_x.exe" />
                  <Parameter xsi:type="StringParameter" name="Arguments" value="-install" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Flash Player ActiveX deployment or update completed." />
                </Statement>
                <Statement description="Let's do some house cleaning." name="DeleteFile" continueOnFail="true" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\install_flash_player_active_x.exe" />
                </Statement>
                <If description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 3: After deployment or update we look for Adobe Flash Player activeX on the system after deployment for reporting purposes.&#xD;&#xA;The IF/ELSE statements below will look for existing trace of Adobe Flash Player ActiveX in the registry after deployment or update, put it in a variable and finally write to the Agent Procedure log.">
                  <Condition name="CheckRegistryValue">
                    <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_LOCAL_MACHINE\SOFTWARE\Macromedia\FlashPlayerActiveX\Version" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                    <Parameter xsi:type="StringParameter" name="Value" value="" />
                  </Condition>
                  <Then>
                    <Statement name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="EnumParameter" name="VariableType" value="RegistryValue" />
                      <Parameter xsi:type="StringParameter" name="SourceContent" value="HKEY_LOCAL_MACHINE\SOFTWARE\Macromedia\FlashPlayerActiveX\Version" />
                      <Parameter xsi:type="StringParameter" name="VariableName" value="FlashPlayerActiveXVersion" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Hashtag: AppDeploy AdobeFlash" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="Adobe Flash Player ActiveX version after deploy or update (note: this is not the built in IE 10+ or Chrome version) identified as: #FlashPlayerActiveXVersion#" />
                    </Statement>
                  </Then>
                  <Else>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="No Adobe Flash Player ActiveX version identified in the registry. The deployment or update failed." />
                    </Statement>
                  </Else>
                </If>
                <If description="">
                  <Condition name="CheckRegistryValue">
                    <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_LOCAL_MACHINE\SOFTWARE\Macromedia\FlashPlayerPlugin\Version" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                    <Parameter xsi:type="StringParameter" name="Value" value="" />
                  </Condition>
                  <Then>
                    <Statement name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="EnumParameter" name="VariableType" value="RegistryValue" />
                      <Parameter xsi:type="StringParameter" name="SourceContent" value="HKEY_LOCAL_MACHINE\SOFTWARE\Macromedia\FlashPlayerPlugin\Version" />
                      <Parameter xsi:type="StringParameter" name="VariableName" value="FlashPlayerPluginVersion" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="Adobe Flash Player Plugin version after deploy or update (note: this is not the built in IE 10+ or Chrome version) identified as: #FlashPlayerPluginVersion#" />
                    </Statement>
                  </Then>
                  <Else>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="No Adobe Flash Player plugin version identified in the registry. The deployment or update failed." />
                    </Statement>
                  </Else>
                </If>
                <Statement description="This is a more human readable final notification in the Agent Procedure log." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Flash Player ActiveX deployment. The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
                </Statement>
              </Body>
            </Procedure>
            <Procedure name="Application Deployment - Windows - Adobe Flash Player Plug-In - Deploy Example" treePres="3" id="1733418089" folderId="588264500903088" treeFullPath="Upstream Power Pack 2019-11-28.3rd Party Application Mgmt Examples 2018-12-19.Windows.Application Deployment.Language Independent">
              <Body description="">
                <If description="Procedure description: Deploy Adobe Flash Player Plug-In. Update to latest if present.&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for unwanted external Flash related exploits, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule or run now.&#xD;&#xA;Report options: Agent Procedure log. Look for before, during and after update or deployment statements.&#xD;&#xA;Maintainer: ronny@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 1: We look for Adobe Flash Player Plug-In on the system before deployment for reporting purposes.&#xD;&#xA;The IF/ELSE statements below will look for existing trace of Adobe Flash Player Plug-In in the registry before deployment, put it in a variable and finally write to the Agent Procedure log.">
                  <Condition name="CheckRegistryValue">
                    <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_LOCAL_MACHINE\SOFTWARE\Macromedia\FlashPlayerPlugin\Version" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                    <Parameter xsi:type="StringParameter" name="Value" value="" />
                  </Condition>
                  <Then>
                    <Statement name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="EnumParameter" name="VariableType" value="RegistryValue" />
                      <Parameter xsi:type="StringParameter" name="SourceContent" value="HKEY_LOCAL_MACHINE\SOFTWARE\Macromedia\FlashPlayerPlugin\Version" />
                      <Parameter xsi:type="StringParameter" name="VariableName" value="FlashPlayerPluginVersion" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Flash Player Plugin version before upgrade (note: this is not the built in IE 10+) identified as: #FlashPlayerPluginVersion#" />
                    </Statement>
                  </Then>
                  <Else>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Flash Player Plug-In not present on the system before deployment." />
                    </Statement>
                  </Else>
                </If>
                <Statement description="Stage 2: The deployment part." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Downloading Adobe Flash Player installer from ftpdownload.macromedia.com" />
                </Statement>
                <Statement name="GetURL" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="URL" value="http://fpdownload.macromedia.com/pub/flashplayer/latest/help/install_flash_player.exe" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\install_flash_player_plugin.exe" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Flash Player installer download from ftpdownload.macromedia.com completed." />
                </Statement>
                <Statement description="In this example the Adobe Flash Playser installer will run even if latest already exist on the system. You can set extended IF/ELSE statements and registry checks to avoidi this." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Flash Player Plug-In deployment begins." />
                </Statement>
                <Statement name="ExecuteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\install_flash_player_plugin.exe" />
                  <Parameter xsi:type="StringParameter" name="Arguments" value="-install" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Flash Player Plug-In deployment completed." />
                </Statement>
                <Statement description="Let's do some house cleaning." name="DeleteFile" continueOnFail="true" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\install_flash_player_plugin.exe" />
                </Statement>
                <If description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 3: We look for Adobe Flash Player ActiveX on the system after deployment for reporting purposes.&#xD;&#xA;The IF/ELSE statements below will look for existing trace of Adobe Flash Player in the registry after deployment or update, put it in a variable and finally write to the Agent Procedure log.">
                  <Condition name="CheckRegistryValue">
                    <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_LOCAL_MACHINE\SOFTWARE\Macromedia\FlashPlayerPlugin\Version" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                    <Parameter xsi:type="StringParameter" name="Value" value="" />
                  </Condition>
                  <Then>
                    <Statement name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="EnumParameter" name="VariableType" value="RegistryValue" />
                      <Parameter xsi:type="StringParameter" name="SourceContent" value="HKEY_LOCAL_MACHINE\SOFTWARE\Macromedia\FlashPlayerPlugin\Version" />
                      <Parameter xsi:type="StringParameter" name="VariableName" value="FlashPlayerPluginVersion" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Hashtag: AppDeploy AdobeFlash" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Flash Player Plug-In version after deployment (note: this is not the built in IE 10+ or Chrome version) identified as: #FlashPlayerPluginVersion#" />
                    </Statement>
                  </Then>
                  <Else>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: No Adobe Flash Player Plug-In version identified in the registry. Deployment failed." />
                    </Statement>
                  </Else>
                </If>
                <Statement description="This is a more human readable final notification in the Agent Procedure log." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Flash Player Plug-In deployment. The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
                </Statement>
              </Body>
            </Procedure>
            <Procedure name="Application Deployment - Windows - Chrome - Deploy Example" treePres="3" id="236981737" folderId="588264500903088" treeFullPath="Upstream Power Pack 2019-11-28.3rd Party Application Mgmt Examples 2018-12-19.Windows.Application Deployment.Language Independent">
              <Body description="">
                <Statement description="Procedure description: Update Chrome to latest version. Deploy if not present.&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for Chrome exploits, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule or run now.&#xD;&#xA;Report options: Agent Procedure log. Look for before, during and after update deployment statements.&#xD;&#xA;Maintainer: ronny@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 1: Before deployment or update we look for any existing Chrome on the system for reporting purposes.&#xD;&#xA;Let's get the Chrome version (if present) with a simple WMIC command." name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Command" value="wmic product where &quot;Name like 'Google%Chrome%'&quot; get Name, Version /Format:value &gt;&gt; #vAgentConfiguration.agentTempDir#\chrome_version.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement name="PauseScript" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="IntegerParameter" name="Seconds" value="30" />
                </Statement>
                <Statement description="To get a proper Agent Procedure log entry we have to convert the above result to a encoding Kaseya understands in order to use it as a variable. In this case we re-type the file to become UTF." name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Command" value="type #vAgentConfiguration.agentTempDir#\chrome_version.result &gt;&gt; #vAgentConfiguration.agentTempDir#\chrome_version_utf.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="We can now get the content of the UTF encoded file and put it in a variable. " name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\chrome_version_utf.result" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="chrome_version" />
                </Statement>
                <If description="The IF/ELSE statment below will put relevant information in the Agent Procedure log for reporting and deployment purposes.">
                  <Condition name="TestFile">
                    <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\skype_version_utf.result" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="DoesNotContain" />
                    <Parameter xsi:type="StringParameter" name="Value" value="Name=Google Chrome" />
                  </Condition>
                  <Then>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chrome not detected on the system before deployment." />
                    </Statement>
                  </Then>
                  <Else>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chrome detected on the system before update: #chrome_version#" />
                    </Statement>
                  </Else>
                </If>
                <Statement description="Let's do some house cleaning." name="DeleteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\chrome_version.result" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\chrome_version_utf.result" />
                </Statement>
                <Statement description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 2: The deployment or update part.&#xD;&#xA;Let's download the latest Google Chrome Busniess MSI installer." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Begin downloading Chrome MSI installer." />
                </Statement>
                <Statement name="GetURL" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="URL" value="https://dl.google.com/tag/s/appguid%3D%7B8A69D345-D564-463C-AFF1-A69D9E530F96%7D%26iid%3D%7B4FA2C409-B18B-777B-306D-26DB95543621%7D%26lang%3Dsv%26browser%3D4%26usagestats%3D0%26appname%3DGoogle%2520Chrome%26needsadmin%3Dprefers%26installdataindex%3Ddefaultbrowser/edgedl/chrome/install/GoogleChromeStandaloneEnterprise.msi" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\chrome.msi" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chrome MSI installer downloaded successfully." />
                </Statement>
                <If description="If Chrome is running, kill it.">
                  <Condition name="ApplicationRunning">
                    <Parameter xsi:type="StringParameter" name="ApplicationName" value="chrome.exe" />
                  </Condition>
                  <Then>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chrome was running before update and therefore killed." />
                    </Statement>
                    <Statement name="CloseApplication" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="ApplicationName" value="chrome.exe" />
                    </Statement>
                  </Then>
                </If>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Executing Chrome MSI installer." />
                </Statement>
                <Statement name="ExecuteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="c:\windows\system32\msiexec.exe" />
                  <Parameter xsi:type="StringParameter" name="Arguments" value="/i #vAgentConfiguration.agentTempDir#\chrome.msi /norestart /quiet" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chrome installed." />
                </Statement>
                <Statement description="Let's do some house cleaning." name="DeleteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\chrome.msi" />
                </Statement>
                <Statement description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 3: After deployment or update we look for any existing Chrome on the system for reporting purposes." name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Command" value="wmic product where &quot;Name like 'Google%Chrome%'&quot; get Name, Version /Format:value &gt;&gt; #vAgentConfiguration.agentTempDir#\chrome_version.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement name="PauseScript" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="IntegerParameter" name="Seconds" value="30" />
                </Statement>
                <Statement description="To get a proper Agent Procedure log entry we have to convert the above result to a encoding Kaseya understands in order to use it as a variable. In this case we re-type the file to become UTF." name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Command" value="type #vAgentConfiguration.agentTempDir#\chrome_version.result &gt;&gt; #vAgentConfiguration.agentTempDir#\chrome_version_utf.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="We can now get the content of the UTF encoded file and put it in a variable. " name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\chrome_version_utf.result" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="chrome_version" />
                </Statement>
                <If description="The IF/ELSE statment below will put relevant information in the Agent Procedure log for reporting and deployment purposes.">
                  <Condition name="TestFile">
                    <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\chrome_version_utf.result" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="DoesNotContain" />
                    <Parameter xsi:type="StringParameter" name="Value" value="Name=Google Chrome" />
                  </Condition>
                  <Then>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chrome not detected on the system after deployment or update." />
                    </Statement>
                  </Then>
                  <Else>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chrome detected on the system after update: #chrome_version#" />
                    </Statement>
                  </Else>
                </If>
                <Statement description="Let's do some house cleaning." name="DeleteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\chrome_version.result" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\chrome_version_utf.result" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chrome - Deploy Or Force Update To Latest. The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
                </Statement>
              </Body>
            </Procedure>
            <Procedure name="Application Deployment - Windows - Java 8 32Bit - Deploy Example" treePres="3" id="281594058" folderId="588264500903088" treeFullPath="Upstream Power Pack 2019-11-28.3rd Party Application Mgmt Examples 2018-12-19.Windows.Application Deployment.Language Independent">
              <Body description="">
                <Statement description="Procedure description: Deploy latest Java 8 32Bit version. Removes any older Java 8 32Bit version before deployment.&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for unwanted external Java related attacks, downtime and data loss.&#xD;&#xA;Dependencies: Windows OS. Edit the version string to latest for compliance check. Follow the important notes.&#xD;&#xA;Usage: Schedule or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for before, during and after update deployment statements.&#xD;&#xA;Maintainer: powerpack@upstream.se Last change: 2018-10-26&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 1: Before we deploy, let's audit the system for any Java 8 32Bit present and do some cleanup." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="wmic product where &quot;Name like 'Java%8%Update%'&quot; get Name, Version /Format:value &gt;&gt; #vAgentConfiguration.agentTempDir#\java_version.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="We have to convert the above result to a encoding Kaseya understands in order to use it as a variable." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="type #vAgentConfiguration.agentTempDir#\java_version.result &gt;&gt;#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <If description="Is any older Java 8 32Bit version detected? If so, let's remove it.">
                  <Condition name="TestFile">
                    <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                    <Parameter xsi:type="StringParameter" name="Value" value="Name=Java 8 Update" />
                  </Condition>
                  <Then>
                    <If description="IMPORTANT NOTE: When detected, is it the latest version? You have to change Does Not Contain &quot;Name=Java 8 Update XXX&quot; to new version when released.">
                      <Condition name="TestFile">
                        <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                        <Parameter xsi:type="EnumParameter" name="Condition" value="DoesNotContain" />
                        <Parameter xsi:type="StringParameter" name="Value" value="Name=Java 8 Update 191" />
                      </Condition>
                      <Then>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 8 32Bit deployment: Older Java 8 32Bit version detected and will be removed. #java_version#" />
                        </Statement>
                        <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Command" value="wmic product where &quot;name like 'Java%8%Update%'&quot; call uninstall /nointeractive" />
                          <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                          <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                        </Statement>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 8 32Bit deployment: Older Java 8 32Bit version removed." />
                        </Statement>
                      </Then>
                    </If>
                  </Then>
                </If>
                <If description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 2: The Deployment part&#xD;&#xA;IMPORTANT NOTE: Is it not the latest version? You have to change Does Not Contain &quot;Name=Java 8 Update XXX&quot; to new version when released.">
                  <Condition name="TestFile">
                    <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="DoesNotContain" />
                    <Parameter xsi:type="StringParameter" name="Value" value="Name=Java 8 Update 191" />
                  </Condition>
                  <Then>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 8 32Bit deployment: Downloading latest Java 8 32Bit installer." />
                    </Statement>
                    <Statement name="GetURL" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="URL" value="http://javadl.oracle.com/webapps/download/AutoDL?BundleId=235725_2787e4a523244c269598db4e85c51e0c" />
                      <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\java32.exe" />
                      <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 8 32Bit deployment: Deployment begins." />
                    </Statement>
                    <Statement name="ExecuteFile" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java32.exe" />
                      <Parameter xsi:type="StringParameter" name="Arguments" value="/s REBOOT=Suppress /L #vAgentConfiguration.agentTempDir#\java8-32bit-install.log" />
                      <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                      <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 8 32Bit deployment: Deployment completed. If needed, evaluate the log at &quot;#vAgentConfiguration.agentTempDir#\java8-32bit-install.log&quot;." />
                    </Statement>
                    <Statement description="Let's do some house cleaning." name="DeleteFile" continueOnFail="true" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version.result" />
                    </Statement>
                    <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                    </Statement>
                    <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java32.exe" />
                    </Statement>
                    <Statement description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 3: After deployment, let's audit the system for latest Java 8 32Bit present for compliance." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Command" value="wmic product where &quot;Name like 'Java%8%Update%'&quot; get Name, Version /Format:value &gt;&gt; #vAgentConfiguration.agentTempDir#\java_version.result" />
                      <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                      <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                    </Statement>
                    <Statement description="We have to convert the above result to a encoding Kaseya understands in order to use it as a variable." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Command" value="type #vAgentConfiguration.agentTempDir#\java_version.result &gt;&gt; #vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                      <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                      <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                    </Statement>
                    <Statement description="We can now get the content of the UTF encoded file and put it in a variable. " name="GetVariable" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                      <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                      <Parameter xsi:type="StringParameter" name="VariableName" value="java_version" />
                    </Statement>
                    <If description="IMPORTANT NOTE: You have to change Contain &quot;Name=Java 8 Update XXX&quot; to new version when new versions get released.">
                      <Condition name="TestFile">
                        <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                        <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                        <Parameter xsi:type="StringParameter" name="Value" value="Name=Java 8 Update 191" />
                      </Condition>
                      <Then>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 8 32Bit deployment: Success! #java_version#" />
                        </Statement>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Hashtag: AppDeploy Java8" />
                        </Statement>
                      </Then>
                      <Else>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 8 32Bit deployment: Failed! Latest Java 8 32Bit not detected. Evaluate the log at &quot;#vAgentConfiguration.agentTempDir#\java8-32bit-install.log&quot;." />
                        </Statement>
                      </Else>
                    </If>
                  </Then>
                  <Else>
                    <Statement description="If latest Java 8 32Bit version is detected at the beginning of Step 2, we take a note of that in the Agent Procedure Log." name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 8 32Bit deployment: Latest version already installed. No action taken. #java_version#" />
                    </Statement>
                  </Else>
                </If>
                <Statement description="Let's do some house cleaning." name="DeleteFile" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version.result" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                </Statement>
                <Statement description="This is a more human readable final notification in the Agent Procedure log." name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 8 32Bit deployment: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
                </Statement>
              </Body>
            </Procedure>
          </Folder>
          <Folder name="Norwegian" treePres="3">
            <Procedure name="Application Deployment - Windows - Adobe Acrobat Reader DC - Norwgian - Deploy Example" treePres="3" id="1958378504" folderId="504028198730213" treeFullPath="Upstream Power Pack 2019-11-28.3rd Party Application Mgmt Examples 2018-12-19.Windows.Application Deployment.Norwegian">
              <Body description="">
                <Statement description="Procedure description: Deploy latest Norwegian Adobe Acrobat Reader DC. Removes any existing Adobe Reader/Acrobat Reader DC version and language.&#xD;&#xA;Kaseya customer value: Procedure to secure and standardize clients with the latest software and language.&#xD;&#xA;End user value: Limiting the risks for Adobe Reader exploits, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule Once or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for before, during and after update deployment statements.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2017-05-04&#xD;&#xA;------------------------------------------------------------------------------------------------------------" name="GetURL" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="URL" value="https://admdownload.adobe.com/bin/live/readerdc_no_xa_install.exe" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\AdobeReaderDC.exe" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement name="ExecuteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\AdobeReaderDC.exe" />
                  <Parameter xsi:type="StringParameter" name="Arguments" value="/sAll /rs /l /msi /qb- /norestart EULA_ACCEPT=YES" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement description="Let's do a post check to see if the software got installed properly." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="wmic product where &quot;Name like 'Adobe%Acrobat%Reader%DC%'&quot; get Name, Version /Format:value &gt;&gt; #vAgentConfiguration.agentTempDir#\adobe_reader_version.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="This is for Kaseya to understand the text file from the WMI command above. We have to re-encode it." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="type #vAgentConfiguration.agentTempDir#\adobe_reader_version.result &gt;&gt; #vAgentConfiguration.agentTempDir#\adobe_reader_version_utf.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="Now we can get the file content and use it as a variable. " name="GetVariable" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\adobe_reader_version_utf.result" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="adobe_reader_version" />
                </Statement>
                <If description="">
                  <Condition name="TestFile">
                    <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\adobe_reader_version_utf.result" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                    <Parameter xsi:type="StringParameter" name="Value" value="17.009.20044" />
                  </Condition>
                  <Then>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Hashtag: AppDeploy AdobeReader" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Success! Latest Adobe Reader present on the system after deployment: #adobe_reader_version#" />
                    </Statement>
                  </Then>
                  <Else>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Fail! Adobe Reader present on the system after deployment but NOT latest versionl: #adobe_reader_version#" />
                    </Statement>
                  </Else>
                </If>
                <Statement description="Let's do some house cleaning." name="DeleteFile" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\AdobeReaderDC.exe" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\adobe_reader_version.result" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\adobe_reader_version_utf.result" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Acrobat Reader DC - Norwegian - Deploy Latest. The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
                </Statement>
              </Body>
            </Procedure>
            <Procedure name="Application Deployment - Windows - Firefox - Norwegian - Deploy Example" treePres="3" id="1951287604" folderId="504028198730213" treeFullPath="Upstream Power Pack 2019-11-28.3rd Party Application Mgmt Examples 2018-12-19.Windows.Application Deployment.Norwegian">
              <Body description="Description: The procedure will deploy or update to current Firefox version.&#xA;&#xA;Kaseya customer value: Procedure to secure clients by updating the software to latest version.&#xA;&#xA;End user value: Limiting the risks for malware, virus attacks, downtime and data loss due to unpatched web browser.&#xA;&#xA;Dependencies: Windows OS.&#xA;&#xA;Usage: Run at any given time. During the process any running Firefox will be closed without notification to the end user. &#xA;&#xA;Report options: Procedure Log, content: &quot;Firefox deployed or updated to latest version.&quot;&#xA;&#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot;. No support included.">
                <Statement description="Get the latest firefox install package from Mozilla." name="GetURL" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="URL" value="http://download.mozilla.org/?product=firefox-latest&amp;os=win&amp;lang=nb-NO" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\firefox.exe" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <If description="If Firefox is running, kill it. In this case without warning the user.">
                  <Condition name="ApplicationRunning">
                    <Parameter xsi:type="StringParameter" name="ApplicationName" value="firefox.exe" />
                  </Condition>
                  <Then>
                    <Statement name="CloseApplication" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="ApplicationName" value="firefox.exe" />
                    </Statement>
                  </Then>
                </If>
                <Statement description="Execute the Firefox installer silently as local system." name="ExecuteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\firefox.exe" />
                  <Parameter xsi:type="StringParameter" name="Arguments" value="-ms" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement description="Some house cleaning." name="DeleteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\firefox.exe" />
                </Statement>
                <Statement description="Let's take a note in the Agent Procedure Log for easy reporting." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Firefox deployed or updated to latest version." />
                </Statement>
              </Body>
            </Procedure>
          </Folder>
          <Folder name="Swedish" treePres="3">
            <Procedure name="Application Deployment - Windows - Adobe Acrobat Reader DC - Swedish - Deploy Example" treePres="3" id="1412646469" folderId="104507246894998" treeFullPath="Upstream Power Pack 2019-11-28.3rd Party Application Mgmt Examples 2018-12-19.Windows.Application Deployment.Swedish">
              <Body description="">
                <Statement description="Procedure description: Deploy latest Swedish Adobe Acrobat Reader DC. Removes any existing Adobe Reader/Acrobat Reader DC version and language.&#xD;&#xA;Kaseya customer value: Procedure to secure and standardize clients with the latest software and language.&#xD;&#xA;End user value: Limiting the risks for Adobe Reader exploits, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule Once or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for before, during and after update deployment statements.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2017-06-20&#xD;&#xA;------------------------------------------------------------------------------------------------------------" name="GetURL" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="URL" value="https://admdownload.adobe.com/bin/live/readerdc_sv_xa_install.exe" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\AdobeReaderDC.exe" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement name="ExecuteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\AdobeReaderDC.exe" />
                  <Parameter xsi:type="StringParameter" name="Arguments" value="/sAll /rs /l /msi /qb- /norestart EULA_ACCEPT=YES" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement description="Let's do a post check to see if the software got installed properly." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="wmic product where &quot;Name like 'Adobe%Acrobat%Reader%DC%'&quot; get Name, Version /Format:value &gt;&gt; #vAgentConfiguration.agentTempDir#\adobe_reader_version.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="This is for Kaseya to understand the text file from the WMI command above. We have to re-encode it." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="type #vAgentConfiguration.agentTempDir#\adobe_reader_version.result &gt;&gt; #vAgentConfiguration.agentTempDir#\adobe_reader_version_utf.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="Now we can get the file content and use it as a variable. " name="GetVariable" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\adobe_reader_version_utf.result" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="adobe_reader_version" />
                </Statement>
                <If description="">
                  <Condition name="TestFile">
                    <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\adobe_reader_version_utf.result" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                    <Parameter xsi:type="StringParameter" name="Value" value="17.009.20044" />
                  </Condition>
                  <Then>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Hashtag: AppDeploy AdobeReader" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Success! Latest Adobe Reader present on the system after deployment: #adobe_reader_version#" />
                    </Statement>
                  </Then>
                  <Else>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Fail! Adobe Reader present on the system after deployment but NOT latest versionl: #adobe_reader_version#" />
                    </Statement>
                  </Else>
                </If>
                <Statement description="Let's do some house cleaning." name="DeleteFile" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\AdobeReaderDC.exe" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\adobe_reader_version.result" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\adobe_reader_version_utf.result" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Acrobat Reader DC - Swedish - Deploy Latest. The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
                </Statement>
              </Body>
            </Procedure>
            <Procedure name="Application Deployment - Windows - Firefox - Swedish - Deploy Example" treePres="3" id="1150500858" folderId="104507246894998" treeFullPath="Upstream Power Pack 2019-11-28.3rd Party Application Mgmt Examples 2018-12-19.Windows.Application Deployment.Swedish">
              <Body description="">
                <Statement description="MSSP: Install latest version of Firefox. Swedish." name="GetURL" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="URL" value="http://download.mozilla.org/?product=firefox-latest&amp;os=win&amp;lang=sv-SE" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\firefox.exe" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <If description="If Firefox is running, kill it.">
                  <Condition name="ApplicationRunning">
                    <Parameter xsi:type="StringParameter" name="ApplicationName" value="firefox.exe" />
                  </Condition>
                  <Then>
                    <Statement name="CloseApplication" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="ApplicationName" value="firefox.exe" />
                    </Statement>
                  </Then>
                </If>
                <Statement name="ExecuteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\firefox.exe" />
                  <Parameter xsi:type="StringParameter" name="Arguments" value="-ms" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\firefox.exe" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="MSSP: Tags: #Firefox #Appdeploy #Apprepair" />
                </Statement>
              </Body>
            </Procedure>
          </Folder>
          <Folder name="US English" treePres="3">
            <Procedure name="Application Deployment - Windows - Adobe Acrobat Reader DC - US English - Deploy Example" treePres="3" id="611859724" folderId="222448444889136" treeFullPath="Upstream Power Pack 2019-11-28.3rd Party Application Mgmt Examples 2018-12-19.Windows.Application Deployment.US English">
              <Body description="">
                <Statement description="Procedure description: Deploy latest US English Adobe Acrobat Reader DC. Removes any existing Adobe Reader/Acrobat Reader DC version and language.&#xD;&#xA;Kaseya customer value: Procedure to secure and standardize clients with the latest software and language.&#xD;&#xA;End user value: Limiting the risks for Adobe Reader exploits, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule Once or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for before, during and after update deployment statements.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2017-05-04&#xD;&#xA;------------------------------------------------------------------------------------------------------------" name="GetURL" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="URL" value="https://admdownload.adobe.com/bin/live/readerdc_en_xa_install.exe" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\AdobeReaderDC.exe" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement name="ExecuteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\AdobeReaderDC.exe" />
                  <Parameter xsi:type="StringParameter" name="Arguments" value="/sAll /rs /l /msi /qb- /norestart EULA_ACCEPT=YES" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement description="Let's do a post check to see if the software got installed properly." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="wmic product where &quot;Name like 'Adobe%Acrobat%Reader%DC%'&quot; get Name, Version /Format:value &gt;&gt; #vAgentConfiguration.agentTempDir#\adobe_reader_version.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="This is for Kaseya to understand the text file from the WMI command above. We have to re-encode it." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="type #vAgentConfiguration.agentTempDir#\adobe_reader_version.result &gt;&gt; #vAgentConfiguration.agentTempDir#\adobe_reader_version_utf.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="Now we can get the file content and use it as a variable. " name="GetVariable" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\adobe_reader_version_utf.result" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="adobe_reader_version" />
                </Statement>
                <If description="">
                  <Condition name="TestFile">
                    <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\adobe_reader_version_utf.result" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                    <Parameter xsi:type="StringParameter" name="Value" value="17.009.20044" />
                  </Condition>
                  <Then>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Hashtag: AppDeploy AdobeReader" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Success! Latest Adobe Reader present on the system after deployment: #adobe_reader_version#" />
                    </Statement>
                  </Then>
                  <Else>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Fail! Adobe Reader present on the system after deployment but NOT latest versionl: #adobe_reader_version#" />
                    </Statement>
                  </Else>
                </If>
                <Statement description="Let's do some house cleaning." name="DeleteFile" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\AdobeReaderDC.exe" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\adobe_reader_version.result" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\adobe_reader_version_utf.result" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Acrobat Reader DC - US English - Deploy Latest. The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
                </Statement>
              </Body>
            </Procedure>
            <Procedure name="Application Deployment - Windows - Firefox - US English - Deploy Example" treePres="3" id="604768824" folderId="222448444889136" treeFullPath="Upstream Power Pack 2019-11-28.3rd Party Application Mgmt Examples 2018-12-19.Windows.Application Deployment.US English">
              <Body description="Description: The procedure will deploy or update to current Firefox version.&#xA;&#xA;Kaseya customer value: Procedure to secure clients by updating the software to latest version.&#xA;&#xA;End user value: Limiting the risks for malware, virus attacks, downtime and data loss due to unpatched web browser.&#xA;&#xA;Dependencies: Windows OS.&#xA;&#xA;Usage: Run at any given time. During the process any running Firefox will be closed without notification to the end user. &#xA;&#xA;Report options: Procedure Log, content: &quot;Firefox deployed or updated to latest version.&quot;&#xA;&#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot;. No support included.">
                <Statement description="Get the latest firefox install package from Mozilla." name="GetURL" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="URL" value="http://download.mozilla.org/?product=firefox-latest&amp;os=win&amp;lang=en-US" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\firefox.exe" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <If description="If Firefox is running, kill it. In this case without warning the user.">
                  <Condition name="ApplicationRunning">
                    <Parameter xsi:type="StringParameter" name="ApplicationName" value="firefox.exe" />
                  </Condition>
                  <Then>
                    <Statement name="CloseApplication" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="ApplicationName" value="firefox.exe" />
                    </Statement>
                  </Then>
                </If>
                <Statement description="Execute the Firefox installer silently as local system." name="ExecuteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\firefox.exe" />
                  <Parameter xsi:type="StringParameter" name="Arguments" value="-ms" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement description="Some house cleaning." name="DeleteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\firefox.exe" />
                </Statement>
                <Statement description="Let's take a note in the Agent Procedure Log for easy reporting." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Firefox deployed or updated to latest version." />
                </Statement>
              </Body>
            </Procedure>
          </Folder>
        </Folder>
        <Folder name="Application Removal" treePres="3">
          <Folder name="Language Independent" treePres="3">
            <Procedure name="Remove Application - Windows - F-Secure Removal Example" treePres="3" id="66127689" folderId="706717021393923" treeFullPath="Upstream Power Pack 2019-11-28.3rd Party Application Mgmt Examples 2018-12-19.Windows.Application Removal.Language Independent">
              <Body description="Description: Detects current disk temperature and writes the results to the script log. Many thanks to Dave Wujcik with IronOakIT for finding disktemp.exe! &#xA;&#xA;Kaseya customer value: Procedure to secure clients from unwanted downtime and data loss.&#xA;&#xA;End user value: Limiting the risks for unwanted downtime and data loss.&#xA;&#xA;Dependencies: Windows OS. Make sure you have created &quot;Disk Temp&quot; (string) under &quot;Audit, Custom Fields&quot;.&#xA;&#xA;Usage: Run at any given time.&#xA;&#xA;Report options: Procedure Log, content: &quot;GetDiskTemp:*&quot; and Aggregate Table, Diskt Temp.&#xA;&#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot;. No support included.">
                <Statement name="GetURL" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="URL" value="ftp://ftp.f-secure.com/support/tools/uitool/UninstallationTool.exe" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\F-Secure\F-SecureUninstallationTool.exe" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement name="ExecuteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\F-Secure\F-SecureUninstallationTool.exe" />
                  <Parameter xsi:type="StringParameter" name="Arguments" value="-s -a --NOGUI" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="False" />
                </Statement>
              </Body>
            </Procedure>
            <Procedure name="Remove Application - Windows - Prompt For App String" treePres="3" id="2026330446" folderId="706717021393923" treeFullPath="Upstream Power Pack 2019-11-28.3rd Party Application Mgmt Examples 2018-12-19.Windows.Application Removal.Language Independent">
              <Body description="Description: This Kaseya Agent Procedure will demonstrate how to remove a specific application based on the application ID string. You can copy any string from Audit, Add/Remove section in Kaseya.&#xA;&#xA;Kaseya customer value: Procedure to remove unwanted software.&#xA;&#xA;End user value: Limiting the risks for unwanted external attacks related to unwanted and unauthorized software.&#xA;&#xA;Dependencies: Windows OS.&#xA;&#xA;Usage: Run at any given time.&#xA;&#xA;Report options: Procedure Log, content: &quot;Remove application:&quot;&#xA;&#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot;. No support included.">
                <Statement name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="Enter the remove string for the application. You can find it in the Audit module under Add/Remove, Example: {89F4137D-6C26-4A84-BDB8-2E5A4BB71E00}" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="windows_remove_string" />
                </Statement>
                <Statement description="Removes Apple iTunes from the command line." name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Command" value="msiexec /qn /x #windows_remove_string#" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Remove application: Application with remove string #windows_remove_string# removed from machine." />
                </Statement>
              </Body>
            </Procedure>
            <Procedure name="Remove Application - Windows - Remove ALL Adobe Flash Player Versions" treePres="3" id="1068535228" folderId="706717021393923" treeFullPath="Upstream Power Pack 2019-11-28.3rd Party Application Mgmt Examples 2018-12-19.Windows.Application Removal.Language Independent">
              <Body description="Description: Force any Adobe Flash Player version to be uninstalled.&#xA;&#xA;Kaseya customer value: Procedure to secure clients by removing unwanted software.&#xA;&#xA;End user value: Limiting the risks for unwanted external Flash related attacks, downtime and data loss.&#xA;&#xA;Dependencies: Windows OS.&#xA;&#xA;Usage: Run at any given time. The installer will close any running web browser without notification.&#xA;&#xA;Report options: Procedure Log, content: &quot;Adobe Flash Player removed. Do a fresh Audit on the machine to verify.&quot;&#xA;&#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot;. No support included.">
                <Statement description="This Kaseya Agent Procedures is based on the information from: http://forums.adobe.com/message/4041846&#xD;&#xA;Let's download Adobe Flash Player uninstaller." name="GetURL" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="URL" value="http://download.macromedia.com/get/flashplayer/current/support/uninstall_flash_player.exe" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\uninstall_flash_player.exe" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <If description="If Chrome is running, kill it.">
                  <Condition name="ApplicationRunning">
                    <Parameter xsi:type="StringParameter" name="ApplicationName" value="chrome.exe" />
                  </Condition>
                  <Then>
                    <Statement name="CloseApplication" continueOnFail="true" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="ApplicationName" value="chrome.exe" />
                    </Statement>
                  </Then>
                </If>
                <If description="If Firefox is running, kill it.">
                  <Condition name="ApplicationRunning">
                    <Parameter xsi:type="StringParameter" name="ApplicationName" value="firefox.exe" />
                  </Condition>
                  <Then>
                    <Statement name="CloseApplication" continueOnFail="true" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="ApplicationName" value="firefox.exe" />
                    </Statement>
                  </Then>
                </If>
                <If description="If Internet Explorer is running, kill it.">
                  <Condition name="ApplicationRunning">
                    <Parameter xsi:type="StringParameter" name="ApplicationName" value="iexplore" />
                  </Condition>
                  <Then>
                    <Statement name="CloseApplication" continueOnFail="true" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="ApplicationName" value="iexplore.exe" />
                    </Statement>
                  </Then>
                </If>
                <Statement description="Execute the stand alone Flash uninstaller silently." name="ExecuteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\uninstall_flash_player.exe" />
                  <Parameter xsi:type="StringParameter" name="Arguments" value="-uninstall" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement description="Let's do some house cleaning." name="DeleteFile" continueOnFail="true" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\uninstall_flash_player.exe" />
                </Statement>
                <Statement name="Delete Directory" continueOnFail="true" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Parameter1" value="C:\WINDOWS\System32\Macromed\Flash" />
                  <Parameter xsi:type="StringParameter" name="Parameter2" value="true" />
                </Statement>
                <If description="">
                  <Condition name="Windows 32 or 64 Bit Check">
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                  </Condition>
                  <Then>
                    <Statement name="Delete Directory" continueOnFail="true" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="C:\Windows\SysWOW64\Macromed\Flash" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="true" />
                    </Statement>
                  </Then>
                </If>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Flash Player removed. Do a fresh Audit on the machine to verify." />
                </Statement>
              </Body>
            </Procedure>
            <Procedure name="Remove Application - Windows - Remove ALL Citrix Reciever Versions" treePres="3" id="410407043" folderId="706717021393923" treeFullPath="Upstream Power Pack 2019-11-28.3rd Party Application Mgmt Examples 2018-12-19.Windows.Application Removal.Language Independent">
              <Body description="Description: This procedure deploys or update 7-Zip to latest version. &#xA;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xA;&#xA;End user value: Procedure to enhance user experience and add more functions to the desktop experience.&#xA;&#xA;Dependencies: Windows OS.&#xA;&#xA;Usage: Run at any given time.&#xA;&#xA;Report options: Procedure Log, content: &quot;7-Zip deployed or updated to latest version&quot;&#xA;&#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot;. No support included.">
                <Statement description="Let's download the latest 7-Zip 32bit installer from http://downloads.sourceforge.net/project/sevenzip to the local kworking folder.&#xD;&#xA;Execute the installer with a bunch of silent switches as local system account." name="GetURL" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="URL" value="http://support.citrix.com/servlet/KbServlet/download/35110-102-706128/ReceiverCleanupUtility.exe" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\ReceiverCleanupUtility.exe" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement name="ExecuteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ReceiverCleanupUtility.exe" />
                  <Parameter xsi:type="StringParameter" name="Arguments" value="/silent" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ReceiverCleanupUtility.exe" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Citrix Reciever removed." />
                </Statement>
              </Body>
            </Procedure>
            <Procedure name="Remove Application - Windows - Remove ALL Java 6 Versions" treePres="3" id="1600085463" folderId="706717021393923" treeFullPath="Upstream Power Pack 2019-11-28.3rd Party Application Mgmt Examples 2018-12-19.Windows.Application Removal.Language Independent">
              <Body description="">
                <Statement description="Procedure description: This procedure removes any Java 6 version if present on the system.&#xD;&#xA;Kaseya customer value: Procedure to remove old or unwanted software. Oracle has stopped public support of Java 6 as of Feb 2013.&#xD;&#xA;End user value: Limiting the risks for unwanted external Java related exploits, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS. Java 6 present.&#xD;&#xA;Usage: Schedule, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for before, during and after update or deployment statements.&#xD;&#xA;Maintainer: ronny@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 1: Before we start Java 6 removal, let's audit the system for any Java 6 present.&#xD;&#xA;The IF/ELSE statements below will look for existing trace of Java 6." name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Command" value="wmic product where &quot;Name like 'Java(TM)%6%'&quot; get Name, Version /Format:value &gt;&gt; #vAgentConfiguration.agentTempDir#\java_version.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="We wait a minute for the above shell command to finish up." name="PauseScript" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="IntegerParameter" name="Seconds" value="60" />
                </Statement>
                <Statement description="We have to convert the above result to a encoding Kaseya understands in order to use it as a variable." name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Command" value="type #vAgentConfiguration.agentTempDir#\java_version.result &gt;&gt; #vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="We can now get the content of the UTF encoded file and put it in a variable. " name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="java_version" />
                </Statement>
                <If description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 2: Java 6 detected. Let's start the removal.">
                  <Condition name="TestFile">
                    <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                    <Parameter xsi:type="StringParameter" name="Value" value="Version=6.0." />
                  </Condition>
                  <Then>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 6 present on the system and indentified as: #java_version#" />
                    </Statement>
                    <Statement description="Let's execute a WMI command to remove all appliations beginning with Java 7 and put the returned output in a text file." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 6 removal procedure begins. A 5 minute pause will be added." />
                    </Statement>
                    <Statement name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Command" value="start /w wmic product where &quot;name like 'Java(TM)%6%'&quot; call uninstall /nointeractive &gt;&gt;#vAgentConfiguration.agentTempDir#\RemoveJava.result" />
                      <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                      <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 6 removal Procedure continues after a 3 minute pause." />
                    </Statement>
                    <Statement name="PauseScript" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="IntegerParameter" name="Seconds" value="30" />
                    </Statement>
                    <Statement description="Let's create a variable of get the returned output for reporting puposes." name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                      <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\RemoveJava.result" />
                      <Parameter xsi:type="StringParameter" name="VariableName" value="RemoveJavaResult" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 6 removal Procedure results: #RemoveJavaResult#" />
                    </Statement>
                    <Statement description="Let's do some housecleaning." name="DeleteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version.result" />
                    </Statement>
                    <Statement name="DeleteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                    </Statement>
                    <Statement name="DeleteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\RemoveJava.result" />
                    </Statement>
                    <Statement description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 3: After Java 6 removal we audit the system for compliance." name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Command" value="wmic product where &quot;Name like 'Java(TM)%6%'&quot; get Name, Version /Format:value &gt;&gt; #vAgentConfiguration.agentTempDir#\java_version.result" />
                      <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                      <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                    </Statement>
                    <Statement description="We wait a minute for the above shell command to finish up." name="PauseScript" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="IntegerParameter" name="Seconds" value="60" />
                    </Statement>
                    <Statement description="We have to convert the above result to a encoding Kaseya understands in order to use it as a variable." name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Command" value="type #vAgentConfiguration.agentTempDir#\java_version.result &gt;&gt; #vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                      <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                      <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                    </Statement>
                    <Statement description="We can now get the content of the UTF encoded file and put it in a variable. " name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                      <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                      <Parameter xsi:type="StringParameter" name="VariableName" value="java_version" />
                    </Statement>
                    <If description="The IF/ELSE statements below will look for existing trace of Java 6.">
                      <Condition name="TestFile">
                        <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                        <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                        <Parameter xsi:type="StringParameter" name="Value" value="Version=6.0." />
                      </Condition>
                      <Then>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 6 removal Procedure failed. Java7 still present on the system after removal attempt. Indentified as: #java_version#" />
                        </Statement>
                      </Then>
                      <Else>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 6 removal Procedure ran successfully. No Java 6 left on the system." />
                        </Statement>
                      </Else>
                    </If>
                  </Then>
                  <Else>
                    <Statement description="We can now get the content of the UTF encoded file and put it in a variable. " name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 6 removal Procedure did not execute. No Java 6 detected." />
                    </Statement>
                  </Else>
                </If>
                <Statement description="Let's do some house cleaning from stage 3 if files exist." name="DeleteFile" continueOnFail="true" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version.result" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="true" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 6 removal Procedure. The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
                </Statement>
              </Body>
            </Procedure>
            <Procedure name="Remove Application - Windows - Remove ALL Java 7 Versions" treePres="3" id="335532313" folderId="706717021393923" treeFullPath="Upstream Power Pack 2019-11-28.3rd Party Application Mgmt Examples 2018-12-19.Windows.Application Removal.Language Independent">
              <Body description="">
                <Statement description="Procedure description: This procedure removes any Java 7 version if present on the system.&#xD;&#xA;Kaseya customer value: Procedure to remove old or unwanted software. Oracle will stop public support of Java 7 April 2015.&#xD;&#xA;End user value: Limiting the risks for unwanted external Java related exploits, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS. Java 7 present.&#xD;&#xA;Usage: Schedule, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for before, during and after update or deployment statements.&#xD;&#xA;Maintainer: ronny@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 1: Before we start Java 7 removal, let's audit the system for any Java 7 present.&#xD;&#xA;The IF/ELSE statements below will look for existing trace of Java 7." name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Command" value="wmic product where &quot;Name like 'Java%7%'&quot; get Name, Version /Format:value &gt;&gt; #vAgentConfiguration.agentTempDir#\java_version.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="We wait a minute for the above shell command to finish up.&#xD;&#xA;We have to convert the above result to a encoding Kaseya understands in order to use it as a variable." name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Command" value="type #vAgentConfiguration.agentTempDir#\java_version.result &gt;&gt; #vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="We can now get the content of the UTF encoded file and put it in a variable. " name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="java_version" />
                </Statement>
                <If description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 2: Java 7 detected. Let's start the removal.">
                  <Condition name="TestFile">
                    <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                    <Parameter xsi:type="StringParameter" name="Value" value="Version=7.0." />
                  </Condition>
                  <Then>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 7 present on the system and indentified as: #java_version#" />
                    </Statement>
                    <Statement description="Let's execute a WMI command to remove all appliations beginning with Java 7 and put the returned output in a text file." name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Command" value="start /w wmic product where &quot;name like 'Java%7%Update%'&quot; call uninstall /nointeractive &gt;&gt;#vAgentConfiguration.agentTempDir#\RemoveJava.result" />
                      <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                      <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                    </Statement>
                    <Statement name="PauseScript" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="IntegerParameter" name="Seconds" value="30" />
                    </Statement>
                    <Statement description="Let's create a variable of get the returned output for reporting puposes." name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                      <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\RemoveJava.result" />
                      <Parameter xsi:type="StringParameter" name="VariableName" value="RemoveJavaResult" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 7 removal Procedure results: #RemoveJavaResult#" />
                    </Statement>
                    <Statement description="Let's do some housecleaning." name="DeleteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version.result" />
                    </Statement>
                    <Statement name="DeleteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                    </Statement>
                    <Statement name="DeleteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\RemoveJava.result" />
                    </Statement>
                    <Statement description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 3: After Java 7 removal we audit the system for compliance." name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Command" value="wmic product where &quot;Name like 'Java%7%'&quot; get Name, Version /Format:value &gt;&gt; #vAgentConfiguration.agentTempDir#\java_version.result" />
                      <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                      <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                    </Statement>
                    <Statement description="We wait a minute for the above shell command to finish up.&#xD;&#xA;We have to convert the above result to a encoding Kaseya understands in order to use it as a variable." name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Command" value="type #vAgentConfiguration.agentTempDir#\java_version.result &gt;&gt; #vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                      <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                      <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                    </Statement>
                    <Statement description="We can now get the content of the UTF encoded file and put it in a variable. " name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                      <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                      <Parameter xsi:type="StringParameter" name="VariableName" value="java_version" />
                    </Statement>
                    <If description="The IF/ELSE statements below will look for existing trace of Java7.">
                      <Condition name="TestFile">
                        <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                        <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                        <Parameter xsi:type="StringParameter" name="Value" value="Version=7.0." />
                      </Condition>
                      <Then>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 7 removal Procedure failed. Java7 still present on the system after removal attempt. Indentified as: #java_version#" />
                        </Statement>
                      </Then>
                      <Else>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 7 removal Procedure ran successfully. No Java7 left on the system." />
                        </Statement>
                      </Else>
                    </If>
                  </Then>
                  <Else>
                    <Statement description="//No Java 7 detected, so no action taken." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 7 removal Procedure did not execute. No Java7 detected." />
                    </Statement>
                  </Else>
                </If>
                <Statement description="Let's do some house cleaning from stage 3 if files exist." name="DeleteFile" continueOnFail="true" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version.result" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="true" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 7 removal. The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
                </Statement>
              </Body>
            </Procedure>
            <Procedure name="Remove Application - Windows - Remove ALL Java 8 Versions" treePres="3" id="986569598" folderId="706717021393923" treeFullPath="Upstream Power Pack 2019-11-28.3rd Party Application Mgmt Examples 2018-12-19.Windows.Application Removal.Language Independent">
              <Body description="">
                <Statement description="Procedure description: This procedure removes any Java 8 version if present on the system.&#xD;&#xA;Kaseya customer value: Procedure to remove old or unwanted software.&#xD;&#xA;End user value: Limiting the risks for unwanted external Java related exploits, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS. Java 8 present.&#xD;&#xA;Usage: Schedule, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for before, during and after update or deployment statements.&#xD;&#xA;Maintainer: ronny@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 1: Before we start Java 8 removal, let's audit the system for any Java 7 present.&#xD;&#xA;The IF/ELSE statements below will look for existing trace of Java 8." name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Command" value="wmic product where &quot;Name like 'Java%'&quot; get Name, Version /Format:value &gt;&gt; #vAgentConfiguration.agentTempDir#\java_version.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="We wait a minute for the above shell command to finish up.&#xD;&#xA;We have to convert the above result to a encoding Kaseya understands in order to use it as a variable." name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Command" value="type #vAgentConfiguration.agentTempDir#\java_version.result &gt;&gt; #vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="We can now get the content of the UTF encoded file and put it in a variable. " name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="java_version" />
                </Statement>
                <If description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 2: Java 8 detected. Let's start the removal.">
                  <Condition name="TestFile">
                    <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                    <Parameter xsi:type="StringParameter" name="Value" value="Version=8.0." />
                  </Condition>
                  <Then>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 8 present on the system and indentified as: #java_version#" />
                    </Statement>
                    <Statement description="Let's execute a WMI command to remove all appliations beginning with Java 7 and put the returned output in a text file." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 8 removal begins." />
                    </Statement>
                    <Statement name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Command" value="start /w wmic product where &quot;name like 'Java%8%Update%'&quot; call uninstall /nointeractive &gt;&gt;#vAgentConfiguration.agentTempDir#\RemoveJava.result" />
                      <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                      <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                    </Statement>
                    <Statement name="PauseScript" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="IntegerParameter" name="Seconds" value="30" />
                    </Statement>
                    <Statement description="Let's create a variable of get the returned output for reporting puposes." name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                      <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\RemoveJava.result" />
                      <Parameter xsi:type="StringParameter" name="VariableName" value="RemoveJavaResult" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 8 removal Procedure results: #RemoveJavaResult#" />
                    </Statement>
                    <Statement description="Let's do some housecleaning." name="DeleteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version.result" />
                    </Statement>
                    <Statement name="DeleteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                    </Statement>
                    <Statement name="DeleteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\RemoveJava.result" />
                    </Statement>
                    <Statement description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 3: After Java 8 removal we audit the system for compliance." name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Command" value="wmic product where &quot;Name like 'Java%'&quot; get Name, Version /Format:value &gt;&gt; #vAgentConfiguration.agentTempDir#\java_version.result" />
                      <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                      <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                    </Statement>
                    <Statement description="We have to convert the above result to a encoding Kaseya understands in order to use it as a variable." name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Command" value="type #vAgentConfiguration.agentTempDir#\java_version.result &gt;&gt; #vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                      <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                      <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                    </Statement>
                    <Statement description="We can now get the content of the UTF encoded file and put it in a variable. " name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                      <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                      <Parameter xsi:type="StringParameter" name="VariableName" value="java_version" />
                    </Statement>
                    <If description="The IF/ELSE statements below will look for existing trace of Java 8.">
                      <Condition name="TestFile">
                        <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                        <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                        <Parameter xsi:type="StringParameter" name="Value" value="Version=8.0." />
                      </Condition>
                      <Then>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 8 removal Procedure failed. Java 8 still present on the system after removal attempt. Indentified as: #java_version#" />
                        </Statement>
                      </Then>
                      <Else>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 8 removal Procedure ran successfully. No Java 8 left on the system." />
                        </Statement>
                      </Else>
                    </If>
                  </Then>
                  <Else>
                    <Statement description="//No Java 7 detected, so no action taken." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 8 removal Procedure did not execute. No Java 8 detected." />
                    </Statement>
                  </Else>
                </If>
                <Statement description="Let's do some house cleaning from stage 3 if files exist." name="DeleteFile" continueOnFail="true" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version.result" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="true" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 8 removal. The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
                </Statement>
              </Body>
            </Procedure>
            <Procedure name="Remove Application - Windows - Remove Java Updater" treePres="3" id="1637606884" folderId="706717021393923" treeFullPath="Upstream Power Pack 2019-11-28.3rd Party Application Mgmt Examples 2018-12-19.Windows.Application Removal.Language Independent">
              <Body description="">
                <Statement description="Procedure description: This procedure example removes Java Auto Updater if present on the system.&#xD;&#xA;Kaseya customer value: Procedure to remove unwanted software.&#xD;&#xA;End user value: Procedure to remove unwanted software.&#xD;&#xA;Dependencies: Windows OS. Java Auto Updater present.&#xD;&#xA;Usage: Schedule, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for before, during and after update or deployment statements.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 1: Before we start Java Auto Updater removal, let's audit the system." name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Command" value="wmic product where &quot;Name like 'Java%Auto%Updater'&quot; get Name, Version /Format:value &gt;&gt; #vAgentConfiguration.agentTempDir#\java_auto_updater.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="We have to convert the above result to a encoding Kaseya understands in order to use it as a variable." name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Command" value="type #vAgentConfiguration.agentTempDir#\java_auto_updater.result &gt;&gt; #vAgentConfiguration.agentTempDir#\java_auto_updater_utf.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="We can now get the content of the UTF encoded file and put it in a variable. " name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\java_auto_updater_utf.result" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="java_auto_updater_version" />
                </Statement>
                <If description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 2: Java Auto Updater detected. Let's start the removal.">
                  <Condition name="TestFile">
                    <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_auto_updater_utf.result" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                    <Parameter xsi:type="StringParameter" name="Value" value="Name=Java Auto Updater" />
                  </Condition>
                  <Then>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java Auto Updater Removal: Java Auto Updater present on the system and indentified as: #java_auto_updater_version#" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java Auto Updater Removal: Removal begins." />
                    </Statement>
                    <Statement name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Command" value="start /w wmic product where &quot;name like 'Java%Auto%Updater'&quot; call uninstall /nointeractive" />
                      <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                      <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                    </Statement>
                    <Statement description="Let's do some housecleaning." name="DeleteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_auto_updater.result" />
                    </Statement>
                    <Statement name="DeleteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                    </Statement>
                    <Statement description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 3: After Java Auto Update removal we audit the system for compliance." name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Command" value="wmic product where &quot;Name like 'Java%Auto%Updater'&quot; get Name, Version /Format:value &gt;&gt; #vAgentConfiguration.agentTempDir#\java_auto_updater.result" />
                      <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                      <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                    </Statement>
                    <Statement description="We have to convert the above result to a encoding Kaseya understands in order to use it as a variable." name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Command" value="type #vAgentConfiguration.agentTempDir#\java_auto_updater.result &gt;&gt; #vAgentConfiguration.agentTempDir#\java_auto_updater_utf.result" />
                      <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                      <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                    </Statement>
                    <Statement description="We can now get the content of the UTF encoded file and put it in a variable. " name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                      <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\java_auto_updater_utf.result" />
                      <Parameter xsi:type="StringParameter" name="VariableName" value="java_auto_updater_version" />
                    </Statement>
                    <If description="The IF/ELSE statements below will look for existing trace of specific Java 8.">
                      <Condition name="TestFile">
                        <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                        <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                        <Parameter xsi:type="StringParameter" name="Value" value="Name=Java Auto Updater" />
                      </Condition>
                      <Then>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java Auto Updater Removal: Removal Procedure failed. Java Auto Updater still present and indentified as: #java_auto_updater_version#" />
                        </Statement>
                      </Then>
                      <Else>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java Auto Updater Removal: Removal Procedure ran successfully." />
                        </Statement>
                      </Else>
                    </If>
                  </Then>
                  <Else>
                    <Statement description="No Java Auto Updater detected in the first place. No action taken." name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java Auto Updater Removal: Java Auto Updater not detected. No action taken." />
                    </Statement>
                  </Else>
                </If>
                <Statement description="Let's do some house cleaning from stage 3 if files exist." name="DeleteFile" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_auto_updater.result" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java Auto Updater Removal: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
                </Statement>
              </Body>
            </Procedure>
            <Procedure name="Remove Application - Windows - Remove SPECIFIC Java 8 Version Example" treePres="3" id="253566683" folderId="706717021393923" treeFullPath="Upstream Power Pack 2019-11-28.3rd Party Application Mgmt Examples 2018-12-19.Windows.Application Removal.Language Independent">
              <Body description="">
                <Statement description="Procedure description: This procedure example removes a specific  Java 8 version if present on the system.&#xD;&#xA;Kaseya customer value: Procedure to remove old or unwanted software.&#xD;&#xA;End user value: Limiting the risks for unwanted external Java related exploits, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS. Java 8 present.&#xD;&#xA;Usage: Schedule, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for before, during and after update or deployment statements.&#xD;&#xA;Maintainer: ronny@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 1: Before we start Java 8 removal, let's audit the system for any Java 8 present.&#xD;&#xA;The IF/ELSE statements below will look for existing trace of Java 8." name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Command" value="wmic product where &quot;Name like 'Java%'&quot; get Name, Version /Format:value &gt;&gt; #vAgentConfiguration.agentTempDir#\java_version.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="We wait a minute for the above shell command to finish up.&#xD;&#xA;We have to convert the above result to a encoding Kaseya understands in order to use it as a variable." name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Command" value="type #vAgentConfiguration.agentTempDir#\java_version.result &gt;&gt; #vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="We can now get the content of the UTF encoded file and put it in a variable. " name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="java_version" />
                </Statement>
                <If description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 2: Java 8 detected. Let's start the removal.">
                  <Condition name="TestFile">
                    <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                    <Parameter xsi:type="StringParameter" name="Value" value="Name=Java 8 Update 60" />
                  </Condition>
                  <Then>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Specific Java 8 version removal: Java 8 present on the system and indentified as: #java_version#" />
                    </Statement>
                    <Statement description="Let's execute a WMI command to remove a specific Java 8 and put the returned output in a text file." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Specific Java 8 version removal: Java 8 removal begins." />
                    </Statement>
                    <Statement name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Command" value="start /w wmic product where &quot;name like 'Java%8%Update%60'&quot; call uninstall /nointeractive" />
                      <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                      <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                    </Statement>
                    <Statement description="Let's do some housecleaning." name="DeleteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version.result" />
                    </Statement>
                    <Statement name="DeleteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                    </Statement>
                    <Statement description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 3: After specific Java 8 removal we audit the system for compliance." name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Command" value="wmic product where &quot;Name like 'Java%'&quot; get Name, Version /Format:value &gt;&gt; #vAgentConfiguration.agentTempDir#\java_version.result" />
                      <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                      <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                    </Statement>
                    <Statement description="We have to convert the above result to a encoding Kaseya understands in order to use it as a variable." name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Command" value="type #vAgentConfiguration.agentTempDir#\java_version.result &gt;&gt; #vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                      <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                      <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                    </Statement>
                    <Statement description="We can now get the content of the UTF encoded file and put it in a variable. " name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                      <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                      <Parameter xsi:type="StringParameter" name="VariableName" value="java_version" />
                    </Statement>
                    <If description="The IF/ELSE statements below will look for existing trace of specific Java 8.">
                      <Condition name="TestFile">
                        <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                        <Parameter xsi:type="EnumParameter" name="Condition" value="DoesNotContain" />
                        <Parameter xsi:type="StringParameter" name="Value" value="Name=Java 8 Update 60" />
                      </Condition>
                      <Then>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Specific Java 8 version removal: Specific Java 8 version removal: Procedure ran successfully." />
                        </Statement>
                      </Then>
                      <Else>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Specific Java 8 version removal: Java 8 removal Procedure failed. Java 8 still present on the system after removal attempt. Indentified as: #java_version#" />
                        </Statement>
                      </Else>
                    </If>
                  </Then>
                  <Else>
                    <Statement description="//No Java 7 detected, so no action taken." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Specific Java 8 version removal: Specific Java 8 version removal: Java 8 removal Procedure did not execute. No specified Java 8 version detected." />
                    </Statement>
                  </Else>
                </If>
                <Statement description="Let's do some house cleaning from stage 3 if files exist." name="DeleteFile" continueOnFail="true" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version.result" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="true" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Specific Java 8 version removal: Specific Java 8 version removal: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
                </Statement>
              </Body>
            </Procedure>
            <Procedure name="Remove Application - Windows - Remove TeamViewer Example" treePres="3" id="904603968" folderId="706717021393923" treeFullPath="Upstream Power Pack 2019-11-28.3rd Party Application Mgmt Examples 2018-12-19.Windows.Application Removal.Language Independent">
              <Body description="">
                <If description="Procedure description: This procedure removes any Java 7 version if present on the system.&#xD;&#xA;Kaseya customer value: Procedure to remove old or unwanted software. Oracle will stop public support of Java 7 April 2015.&#xD;&#xA;End user value: Limiting the risks for unwanted external Java related exploits, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS. Java 7 present.&#xD;&#xA;Usage: Schedule, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for before, during and after update or deployment statements.&#xD;&#xA;Maintainer: ronny@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 1: Is TeamViewer service running?">
                  <Condition name="ServiceIsRunning">
                    <Parameter xsi:type="StringParameter" name="ServiceName" value="TeamViewer" />
                  </Condition>
                  <Then>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: TeamViewer service is running on the system." />
                    </Statement>
                    <If description="">
                      <Condition name="Windows 32 or 64 Bit Check">
                        <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                      </Condition>
                      <Then>
                        <Statement name="ExecuteFile" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Path" value="C:\Program Files (x86)\TeamViewer\uninstall.exe" />
                          <Parameter xsi:type="StringParameter" name="Arguments" value="/S" />
                          <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                          <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                        </Statement>
                      </Then>
                      <Else>
                        <Statement name="ExecuteFile" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Path" value="C:\Program Files\TeamViewer\uninstall.exe" />
                          <Parameter xsi:type="StringParameter" name="Arguments" value="/S" />
                          <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                          <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                        </Statement>
                      </Else>
                    </If>
                    <If description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 2: Let's check for TeamViewer service running after uninstall.">
                      <Condition name="ServiceIsRunning">
                        <Parameter xsi:type="StringParameter" name="ServiceName" value="TeamViewer" />
                      </Condition>
                      <Then>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: TeamViewer removal failed! Service is still running." />
                        </Statement>
                      </Then>
                      <Else>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: TeamViewer removal success! Service not running." />
                        </Statement>
                      </Else>
                    </If>
                  </Then>
                  <Else>
                    <Statement description="//No Java 7 detected, so no action taken." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: TeamViewer removal Procedure did not execute. Not detected." />
                    </Statement>
                  </Else>
                </If>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: TeamViewer removal. The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
                </Statement>
              </Body>
            </Procedure>
          </Folder>
        </Folder>
        <Folder name="Application Update" treePres="3">
          <Folder name="Language Independent" treePres="3">
            <Procedure name="Application Update - Windows - Adobe Air - Update To Latest Example" treePres="3" id="1974795337" folderId="727806190274565" treeFullPath="Upstream Power Pack 2019-11-28.3rd Party Application Mgmt Examples 2018-12-19.Windows.Application Update.Language Independent">
              <Body description="">
                <Statement description="Procedure description: Update to latest Adobe Air version.&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for unwanted external Adobe Air related attacks, downtime and data loss.&#xD;&#xA;Dependencies: Windows OS. Adobe Air present.&#xD;&#xA;Usage: Schedule or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for before, during and after update deployment statements.&#xD;&#xA;Maintainer: powerpack@upstream.se Last change: 2018-05-04&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 1: Before we update, let's audit the system for any Adobe Air present." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="wmic product where &quot;Name like 'Adobe%Air'&quot; get Name, Version /Format:value &gt;&gt; #vAgentConfiguration.agentTempDir#\adobe_air_version.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="We have to convert the above result to a encoding Kaseya understands in order to use it as a variable." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="type #vAgentConfiguration.agentTempDir#\adobe_air_version.result &gt;&gt;#vAgentConfiguration.agentTempDir#\adobe_air_version_utf.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="We can now get the content of the UTF encoded file and put it in a variable. " name="GetVariable" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\adobe_air_version_utf.result" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="adobe_air_version" />
                </Statement>
                <If description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 2: The update part. We only continue with the update if Adobe Air is present.">
                  <Condition name="TestFile">
                    <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\adobe_air_version_utf.result" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                    <Parameter xsi:type="StringParameter" name="Value" value="Name=Adobe AIR" />
                  </Condition>
                  <Then>
                    <If description="">
                      <Condition name="TestFile">
                        <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\adobe_air_version_utf.result" />
                        <Parameter xsi:type="EnumParameter" name="Condition" value="DoesNotContain" />
                        <Parameter xsi:type="StringParameter" name="Value" value="Version=29.0.0.112" />
                      </Condition>
                      <Then>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Air Update: Older version of Adobe Air detected: #adobe_air_version#." />
                        </Statement>
                        <Statement description="IMPORTANT NOTE: Change the family version name (27.x to 28.x etc) in &quot;getURL&quot; path when new versions arrive." name="GetURL" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="URL" value="http://airdownload.adobe.com/air/win/download/29.0/AdobeAIRInstaller.exe" />
                          <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\AdobeAIR.exe" />
                          <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                        </Statement>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Air Update: Executing Adobe Air installer." />
                        </Statement>
                        <Statement name="ExecuteFile" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\AdobeAIR.exe" />
                          <Parameter xsi:type="StringParameter" name="Arguments" value="-silent -eulaAccepted" />
                          <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                          <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                        </Statement>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Air Update: Update completed." />
                        </Statement>
                        <Statement description="Let's do some house cleaning." name="DeleteFile" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\adobe_air_version.result" />
                        </Statement>
                        <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\adobe_air_version_utf.result" />
                        </Statement>
                        <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\AdobeAIR.exe" />
                        </Statement>
                        <Statement description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 3: After update, let's audit the system for any Adobe Air present for compliance." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Command" value="wmic product where &quot;Name like 'Adobe%Air'&quot; get Name, Version /Format:value &gt;&gt; #vAgentConfiguration.agentTempDir#\adobe_air_version.result" />
                          <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                          <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                        </Statement>
                        <Statement description="We have to convert the above result to a encoding Kaseya understands in order to use it as a variable." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Command" value="type #vAgentConfiguration.agentTempDir#\adobe_air_version.result &gt;&gt;#vAgentConfiguration.agentTempDir#\adobe_air_version_utf.result" />
                          <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                          <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                        </Statement>
                        <Statement description="We can now get the content of the UTF encoded file and put it in a variable. " name="GetVariable" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                          <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\adobe_air_version_utf.result" />
                          <Parameter xsi:type="StringParameter" name="VariableName" value="adobe_air_version" />
                        </Statement>
                        <If description="">
                          <Condition name="TestFile">
                            <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\adobe_air_version_utf.result" />
                            <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                            <Parameter xsi:type="StringParameter" name="Value" value="Name=Adobe AIR" />
                          </Condition>
                          <Then>
                            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Air Update: Present on the system after update: #adobe_air_version#" />
                            </Statement>
                          </Then>
                          <Else>
                            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Air Update: Not present on the system after update. Evaluate installation log locally." />
                            </Statement>
                          </Else>
                        </If>
                      </Then>
                      <Else>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Air Update: Latest version of Adobe Air detected. No action taken. #adobe_air_version#." />
                        </Statement>
                      </Else>
                    </If>
                  </Then>
                  <Else>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Air Update: Not present on the system. No action taken." />
                    </Statement>
                  </Else>
                </If>
                <Statement description="Let's do some house cleaning." name="DeleteFile" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\adobe_air_version.result" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\adobe_air_version_utf.result" />
                </Statement>
                <Statement description="This is a more human readable final notification in the Agent Procedure log." name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Air Update: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
                </Statement>
              </Body>
            </Procedure>
            <Procedure name="Application Update - Windows - Adobe Flash Player - Update To Latest Example" treePres="3" id="1668037405" folderId="727806190274565" treeFullPath="Upstream Power Pack 2019-11-28.3rd Party Application Mgmt Examples 2018-12-19.Windows.Application Update.Language Independent">
              <Body description="">
                <If description="Procedure description: Update Adobe Flash Player ActiveX and/or Plug-In to latest version if any version already present on the system.&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for unwanted external Flash related exploits, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS. Adobe Flash Player already present.&#xD;&#xA;Usage: Schedule, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for before, during and after update or deployment statements.&#xD;&#xA;Maintainer: powerpack@upstream.se Last change: 2017-12-05&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 1: Before update we look for any Adobe Flash Player on the system.&#xD;&#xA;The IF/ELSE statements below will look for existing trace of Adobe Flash Player ActiveX in the registry before update and update to latest if present.">
                  <Condition name="CheckRegistryValue">
                    <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_LOCAL_MACHINE\SOFTWARE\Macromedia\FlashPlayerActiveX\Version" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                    <Parameter xsi:type="StringParameter" name="Value" value="" />
                  </Condition>
                  <Then>
                    <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="EnumParameter" name="VariableType" value="RegistryValue" />
                      <Parameter xsi:type="StringParameter" name="SourceContent" value="HKEY_LOCAL_MACHINE\SOFTWARE\Macromedia\FlashPlayerActiveX\Version" />
                      <Parameter xsi:type="StringParameter" name="VariableName" value="FlashPlayerActiveXVersion" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Flash Player ActiveX version before upgrade (note: this is not the built in IE 10+ or Chrome version) identified as: #FlashPlayerActiveXVersion#" />
                    </Statement>
                    <Statement description="Now that we found Adobe Flash Player ActivX present on te system, let's update to the latest version." name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Downloading Adobe Flash Player ActiveX installer from ftpdownload.macromedia.com" />
                    </Statement>
                    <Statement name="GetURL" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="URL" value="http://fpdownload.macromedia.com/pub/flashplayer/latest/help/install_flash_player_ax.exe" />
                      <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\install_flash_player_active_x.exe" />
                      <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Flash Player ActiveX installer download completed." />
                    </Statement>
                    <If description="In order to get Adobe Flash Player ActiveX installed all Internet Explorer sessions have to be closed.&#xD;&#xA;The IF/ELSE statements below will try to kill iexplore.exe if running in three different ways.">
                      <Condition name="ApplicationRunning">
                        <Parameter xsi:type="StringParameter" name="ApplicationName" value="iexplore.exe" />
                      </Condition>
                      <Then>
                        <Statement description="Let's try to kill &quot;iexplore.exe&quot; with the various tools we have." name="CloseApplication" continueOnFail="true" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="ApplicationName" value="iexplore.exe" />
                        </Statement>
                        <Statement name="ExecuteShellCommand" continueOnFail="true" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Command" value="wmic process where name=&quot;iexplore.exe&quot; call terminate" />
                          <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="User" />
                          <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                        </Statement>
                        <Statement name="ExecuteShellCommand" continueOnFail="true" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Command" value="wmic process where name=&quot;iexplore.exe&quot; call terminate" />
                          <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                          <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                        </Statement>
                        <If description="Let's check once again if &quot;iexplore.exe&quot; is running. ">
                          <Condition name="ApplicationRunning">
                            <Parameter xsi:type="StringParameter" name="ApplicationName" value="iexplore.exe" />
                          </Condition>
                          <Then>
                            <Statement description="If Internet Explorer is still running, we need to abort the ActiveX part of the update. We take a note in the Agent Procedure log." name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Internet Explorer is still running. Adobe Flash Player ActiveX update will not continue." />
                            </Statement>
                          </Then>
                          <Else>
                            <Statement description="Internet Explorer is now closed and we are ready to execute the Adobe Flash Player ActiveX installer." name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Internet Explorer was running but closed successfully. Adobe Flash Player ActiveX update begins." />
                            </Statement>
                            <Statement name="ExecuteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\install_flash_player_active_x.exe" />
                              <Parameter xsi:type="StringParameter" name="Arguments" value="-install" />
                              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                              <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                            </Statement>
                            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Hashtag: AppUpdate AdobeReader" />
                            </Statement>
                            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Flash Player ActiveX update completed." />
                            </Statement>
                          </Else>
                        </If>
                      </Then>
                      <Else>
                        <Statement description="No Internet Explorer sessions seems to be opened. Adobe Flash Player ActiveX will get updated." name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Internet Explorer was running but closed successfully. Adobe Flash Player ActiveX update begins." />
                        </Statement>
                        <Statement name="ExecuteFile" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\install_flash_player_active_x.exe" />
                          <Parameter xsi:type="StringParameter" name="Arguments" value="-install" />
                          <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                          <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                        </Statement>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Flash Player ActiveX update completed." />
                        </Statement>
                      </Else>
                    </If>
                  </Then>
                  <Else>
                    <Statement description="If Adobe Flash Player ActiveX is not present on the system we do nothing." name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Flash Player ActiveX not present on the system . No update action taken." />
                    </Statement>
                  </Else>
                </If>
                <If description="The IF/ELSE statements below will look for existing trace of Adobe Flash Player Plug-In in the registry before update.">
                  <Condition name="CheckRegistryValue">
                    <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_LOCAL_MACHINE\SOFTWARE\Macromedia\FlashPlayerPlugin\Version" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                    <Parameter xsi:type="StringParameter" name="Value" value="" />
                  </Condition>
                  <Then>
                    <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="EnumParameter" name="VariableType" value="RegistryValue" />
                      <Parameter xsi:type="StringParameter" name="SourceContent" value="HKEY_LOCAL_MACHINE\SOFTWARE\Macromedia\FlashPlayerPlugin\Version" />
                      <Parameter xsi:type="StringParameter" name="VariableName" value="FlashPlayerPluginVersion" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Flash Player Plugin version before upgrade (note: for Firefox, Opera etc) identified as: #FlashPlayerPluginVersion#" />
                    </Statement>
                    <Statement description="Now that we found Adobe Flash Player Plugin present on te system, let's update to the latest version." name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Downloading Adobe Flash Player Plug-In installer from ftpdownload.macromedia.com" />
                    </Statement>
                    <Statement name="GetURL" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="URL" value="http://fpdownload.macromedia.com/pub/flashplayer/latest/help/install_flash_player.exe" />
                      <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\install_flash_player_plugin.exe" />
                      <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Flash Player Plug-In installer download completed." />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Flash Player Plug-In update begins." />
                    </Statement>
                    <Statement name="ExecuteFile" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\install_flash_player_plugin.exe" />
                      <Parameter xsi:type="StringParameter" name="Arguments" value="-install" />
                      <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                      <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Hashtag: AppUpdate AdobeReader" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Flash Player Plug-In update completed." />
                    </Statement>
                  </Then>
                  <Else>
                    <Statement description="If Adobe Flash Player Plug-In is not present on the system we do nothing." name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Flash Player Plug-In not present on the system . No update action taken." />
                    </Statement>
                  </Else>
                </If>
                <If description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 2: After update we look for Adobe Flash Player on the system for reporting purposes.&#xD;&#xA;The IF/ELSE statements below will look for existing trace of Adobe Flash Player in the registry after update for validation.">
                  <Condition name="CheckRegistryValue">
                    <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_LOCAL_MACHINE\SOFTWARE\Macromedia\FlashPlayerActiveX\Version" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                    <Parameter xsi:type="StringParameter" name="Value" value="" />
                  </Condition>
                  <Then>
                    <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="EnumParameter" name="VariableType" value="RegistryValue" />
                      <Parameter xsi:type="StringParameter" name="SourceContent" value="HKEY_LOCAL_MACHINE\SOFTWARE\Macromedia\FlashPlayerActiveX\Version" />
                      <Parameter xsi:type="StringParameter" name="VariableName" value="FlashPlayerActiveXVersion" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Flash Player ActiveX version after update identified as: #FlashPlayerActiveXVersion#" />
                    </Statement>
                  </Then>
                </If>
                <If description="">
                  <Condition name="CheckRegistryValue">
                    <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_LOCAL_MACHINE\SOFTWARE\Macromedia\FlashPlayerPlugin\Version" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                    <Parameter xsi:type="StringParameter" name="Value" value="" />
                  </Condition>
                  <Then>
                    <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="EnumParameter" name="VariableType" value="RegistryValue" />
                      <Parameter xsi:type="StringParameter" name="SourceContent" value="HKEY_LOCAL_MACHINE\SOFTWARE\Macromedia\FlashPlayerPlugin\Version" />
                      <Parameter xsi:type="StringParameter" name="VariableName" value="FlashPlayerPluginVersion" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Flash Player Plug-In version after update identified as: #FlashPlayerPluginVersion#" />
                    </Statement>
                  </Then>
                </If>
                <Statement description="Let's do some house cleaning." name="DeleteFile" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\install_flash_player_active_x.exe" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\install_flash_player_plugin.exe" />
                </Statement>
                <Statement description="This is a final notification in the Agent Procedure." name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Flash Player update. The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
                </Statement>
              </Body>
            </Procedure>
            <Procedure name="Application Update - Windows - Adobe Reader DC - Update To Latest Example" treePres="3" id="1593162675" folderId="727806190274565" treeFullPath="Upstream Power Pack 2019-11-28.3rd Party Application Mgmt Examples 2018-12-19.Windows.Application Update.Language Independent">
              <Body description="">
                <Statement description="Procedure description: Update existing Adobe acrobat Reader DC to latest version.&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for Adobe Acrobat Reader DC exploits, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS. Adobe Acrobat Reader DC present.&#xD;&#xA;Usage: Schedule Once, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for before, during and after update deployment statements.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-01-31&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 1: Before update begins we look for any existing Adobe Acrobat Reader DC on the system." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="wmic product where &quot;Name like 'Adobe%Acrobat%Reader%DC%'&quot; get Name, Version /Format:value &gt;&gt; #vAgentConfiguration.agentTempDir#\adobe_reader_DC_version.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="To get a proper Agent Procedure log entry and varibale we have to convert the above result to a encoding Kaseya understands in order to use it as a variable." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="type #vAgentConfiguration.agentTempDir#\adobe_reader_DC_version.result &gt;&gt; #vAgentConfiguration.agentTempDir#\adobe_reader_DC_version_utf.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="Now we can get the file content and use it as a variable. " name="GetVariable" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\adobe_reader_DC_version_utf.result" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="adobe_reader_DC_version" />
                </Statement>
                <If description="We look for the latest version being present. If not we will continue with the update process.">
                  <Condition name="TestFile">
                    <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\adobe_reader_DC_version_utf.result" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                    <Parameter xsi:type="StringParameter" name="Value" value="Version=" />
                  </Condition>
                  <Then>
                    <If description="">
                      <Condition name="TestFile">
                        <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\adobe_reader_DC_version_utf.result" />
                        <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                        <Parameter xsi:type="StringParameter" name="Value" value="Name=Adobe Acrobat Reader DC" />
                      </Condition>
                      <Then>
                        <If description="">
                          <Condition name="TestFile">
                            <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\adobe_reader_DC_version_utf.result" />
                            <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                            <Parameter xsi:type="StringParameter" name="Value" value="Version=18.011.20038" />
                          </Condition>
                          <Then>
                            <Statement description="Ok, nothing to do here. Latest vesion detected. Let's put that in the Agent Procedure log." name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Latest Adobe Acrobat Reader DC detected on the system. No action taken. #adobe_reader_DC_version#" />
                            </Statement>
                          </Then>
                          <Else>
                            <Statement description="Stage 2: The update part.&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Here we go! If Adobe Acrobat Reader DC  is detected and NOT the latest version we continue with the update process." name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Acrobat Reader DC detected on the system but NOT latest: #adobe_reader_version#" />
                            </Statement>
                            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Begin downloading Adobe Acrobat Reader DC update package. It can be big." />
                            </Statement>
                            <Statement name="GetURL" continueOnFail="false" osType="Windows">
                              <Parameter xsi:type="StringParameter" name="URL" value="ftp://ftp.adobe.com/pub/adobe/reader/win/AcrobatDC/1801120038/AcroRdrDCUpd1801120038.msp" />
                              <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\AdbeRdrUpd.msp" />
                              <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                            </Statement>
                            <Statement name="ExecuteFile" continueOnFail="false" osType="Windows">
                              <Parameter xsi:type="StringParameter" name="Path" value="c:\windows\system32\msiexec.exe" />
                              <Parameter xsi:type="StringParameter" name="Arguments" value="/p #vAgentConfiguration.agentTempDir#\AdbeRdrUpd.msp /qn /norestart" />
                              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                              <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                            </Statement>
                            <Statement description="Let's do some house cleaning." name="DeleteFile" continueOnFail="true" osType="Windows">
                              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\AdbeRdrUpd.msp" />
                            </Statement>
                            <Statement description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 3: This is the vaildation part. Let's check for Adobe Acrobat Reader DC version once again." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                              <Parameter xsi:type="StringParameter" name="Command" value="wmic product where &quot;Name like 'Adobe%Acrobat%Reader%DC%'&quot; get Name, Version /Format:value &gt;&gt; #vAgentConfiguration.agentTempDir#\adobe_reader_DC_version.result" />
                              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                            </Statement>
                            <Statement description="To get a proper Agent Procedure log entry and varibale we have to convert the above result to a encoding Kaseya understands in order to use it as a variable." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                              <Parameter xsi:type="StringParameter" name="Command" value="type #vAgentConfiguration.agentTempDir#\adobe_reader_DC_version.result &gt;&gt; #vAgentConfiguration.agentTempDir#\adobe_reader_DC_version_utf.result" />
                              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                            </Statement>
                            <Statement description="Now we can get the file content and use it as a variable. " name="GetVariable" continueOnFail="false" osType="Windows">
                              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\adobe_reader_DC_version_utf.result" />
                              <Parameter xsi:type="StringParameter" name="VariableName" value="adobe_reader_DC_version" />
                            </Statement>
                            <If description="We look for the latest Adobe Reader DC version as a validation for success.">
                              <Condition name="TestFile">
                                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\adobe_reader_DC_version_utf.result" />
                                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                                <Parameter xsi:type="StringParameter" name="Value" value="Version=" />
                              </Condition>
                              <Then>
                                <If description="">
                                  <Condition name="TestFile">
                                    <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\adobe_reader_DC_version_utf.result" />
                                    <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                                    <Parameter xsi:type="StringParameter" name="Value" value="Version=18.011.20038" />
                                  </Condition>
                                  <Then>
                                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Acrobat Reader DC Update: Success! Updated to latest version: #adobe_reader_version#" />
                                    </Statement>
                                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Hashtag: AppUpdate AdobeAcrobatReaderDC" />
                                    </Statement>
                                  </Then>
                                  <Else>
                                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Acrobat Reader DC: Failed!  Not present after update. Evaluate the Agent Procedure log and MSInstaller Event log on the system." />
                                    </Statement>
                                  </Else>
                                </If>
                              </Then>
                              <Else>
                                <Statement description="This will incicate that the WMI query up in line 33 did not execute correctly." name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Acrobat Reader DC WMI query did not execute correctly. No  result file detected." />
                                </Statement>
                              </Else>
                            </If>
                          </Else>
                        </If>
                      </Then>
                      <Else>
                        <Statement description="This is the ELSE statement associated with IF waaaaay up on line 17." name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Acrobat Reader DC not detected on the system. No action taken." />
                        </Statement>
                      </Else>
                    </If>
                  </Then>
                  <Else>
                    <Statement description="This will incicate that the WMI query up in line 10 did not execute correctly." name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Acrobat Reader DC WMI query did not execute correctly. No  result file detected." />
                    </Statement>
                  </Else>
                </If>
                <Statement description="Let's do some house cleaning." name="DeleteFile" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\adobe_reader_DC_version.result" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\adobe_reader_DC_version_utf.result" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Adobe Acrobat Reader DC - Language Independent - Update To Latest. The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
                </Statement>
              </Body>
            </Procedure>
            <Procedure name="Application Update - Windows - Java 8 32bit - Update To Latest Example" treePres="3" id="2124712910" folderId="727806190274565" treeFullPath="Upstream Power Pack 2019-11-28.3rd Party Application Mgmt Examples 2018-12-19.Windows.Application Update.Language Independent">
              <Body description="">
                <Statement description="Procedure description: Update existing Java 8 32Bit version to latest. Removes any older Java 8 32Bit version before deployment.&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for unwanted external Java related attacks, downtime and data loss.&#xD;&#xA;Dependencies: Windows OS. Java 8 32Bit present.&#xD;&#xA;Usage: Schedule or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for before, during and after update deployment statements.&#xD;&#xA;Maintainer: powerpack@upstream.se Last change: 2018-05-04&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 1: Before we deploy, let's audit the system for any Java 8 32Bit present and do some cleanup." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="wmic product where &quot;Name like 'Java%8%Update%'&quot; get Name, Version /Format:value &gt;&gt; #vAgentConfiguration.agentTempDir#\java_version.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="We have to convert the above result to a encoding Kaseya understands in order to use it as a variable." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="type #vAgentConfiguration.agentTempDir#\java_version.result &gt;&gt;#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement description="We can now get the content of the UTF encoded file and put it in a variable. " name="GetVariable" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="java_version" />
                </Statement>
                <If description="Is any older Java 8 32Bit version detected? If so, let's go on with updating to latest.">
                  <Condition name="TestFile">
                    <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                    <Parameter xsi:type="StringParameter" name="Value" value="Name=Java 8 Update" />
                  </Condition>
                  <Then>
                    <If description="IMPORTANT NOTE: When detected, is it the latest version? You have to change Does Not Contain &quot;Name=Java 8 Update XXX&quot; to new version when released.">
                      <Condition name="TestFile">
                        <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                        <Parameter xsi:type="EnumParameter" name="Condition" value="DoesNotContain" />
                        <Parameter xsi:type="StringParameter" name="Value" value="Name=Java 8 Update 171" />
                      </Condition>
                      <Then>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 8 32Bit update: Older Java 8 version (both 32 and 64 bit) detected and will be removed. #java_version#" />
                        </Statement>
                        <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Command" value="wmic product where &quot;name like 'Java%8%Update%'&quot; call uninstall /nointeractive" />
                          <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                          <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                        </Statement>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 8 32Bit update: Older Java 8 versions (both 32 and 64 bit) removed (if present)." />
                        </Statement>
                        <Statement description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 2: The update part." name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 8 32Bit update: Downloading latest Java 8 32Bit installer." />
                        </Statement>
                        <Statement description="IMPORTANT NOTE: In this example we use our Dropbox for MSI file distribution. Java.com does not post the MSI files, but feel free to download the EXE and extraxt the MSI if you do not trust our links." name="GetURL" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="URL" value="http://javadl.oracle.com/webapps/download/AutoDL?BundleId=233170_512cd62ec5174c3487ac17c61aaa89e8" />
                          <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\java32.exe" />
                          <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                        </Statement>
                        <Statement description="IMPORTANT NOTE: If you do not trust the MSI installers provided above you can always create your own by following this guide: http://www.74k.org/extracting-java-msi-from-java-exe" name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 8 32Bit update: Update begins." />
                        </Statement>
                        <Statement name="ExecuteFile" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java32.exe" />
                          <Parameter xsi:type="StringParameter" name="Arguments" value="/s REBOOT=Suppress /L #vAgentConfiguration.agentTempDir#\java8-32bit-install.log" />
                          <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                          <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                        </Statement>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 8 32Bit update: Update completed. If needed, evaluate the log at &quot;#vAgentConfiguration.agentTempDir#\java8-32bit-install.log&quot;." />
                        </Statement>
                        <Statement description="Let's do some house cleaning." name="DeleteFile" continueOnFail="true" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version.result" />
                        </Statement>
                        <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                        </Statement>
                        <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java32.exe" />
                        </Statement>
                        <Statement description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 3: After deployment, let's audit the system for latest Java 8 32Bit present for compliance." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Command" value="wmic product where &quot;Name like 'Java%8%Update%'&quot; get Name, Version /Format:value &gt;&gt;#vAgentConfiguration.agentTempDir#\java_version.result" />
                          <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                          <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                        </Statement>
                        <Statement description="We have to convert the above result to a encoding Kaseya understands in order to use it as a variable." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Command" value="type #vAgentConfiguration.agentTempDir#\java_version.result &gt;&gt; #vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                          <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                          <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                        </Statement>
                        <Statement description="We can now get the content of the UTF encoded file and put it in a variable. " name="GetVariable" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                          <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                          <Parameter xsi:type="StringParameter" name="VariableName" value="java_version" />
                        </Statement>
                        <If description="IMPORTANT NOTE: You have to change Contain &quot;Name=Java 8 Update XXX&quot; to new version when released.">
                          <Condition name="TestFile">
                            <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                            <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                            <Parameter xsi:type="StringParameter" name="Value" value="Name=Java 8 Update 171" />
                          </Condition>
                          <Then>
                            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 8 32Bit update: Success! #java_version#" />
                            </Statement>
                            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Hashtag: AppUpdate Java8" />
                            </Statement>
                          </Then>
                          <Else>
                            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 8 32Bit update: Failed! Latest Java 8 32Bit not detected. Evaluate the log at &quot;#vAgentConfiguration.agentTempDir#\java8-32bit-install.log&quot;." />
                            </Statement>
                          </Else>
                        </If>
                      </Then>
                      <Else>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 8 32Bit update: Java 8 32bit detected AND latest version. Nothing to do. #java_version#" />
                        </Statement>
                      </Else>
                    </If>
                  </Then>
                  <Else>
                    <Statement description="If no Java 8 32Bit version is detected in Stage 1, we take a note of that in the Agent Procedure Log." name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 8 32Bit update: Java 8 32bit not detected. Nothing to do." />
                    </Statement>
                  </Else>
                </If>
                <Statement description="Let's do some house cleaning." name="DeleteFile" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version.result" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\java_version_utf.result" />
                </Statement>
                <Statement description="This is a more human readable final notification in the Agent Procedure log." name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Java 8 32Bit update: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
                </Statement>
              </Body>
            </Procedure>
            <Procedure name="Application Update - Windows - Update DELL Support Assistant" treePres="3" id="563992570" folderId="727806190274565" treeFullPath="Upstream Power Pack 2019-11-28.3rd Party Application Mgmt Examples 2018-12-19.Windows.Application Update.Language Independent">
              <Body description="">
                <If description="">
                  <Condition name="TestFile">
                    <Parameter xsi:type="StringParameter" name="Path" value="C:\Program Files\Dell\SupportAssistAgent\Bin\SupportAssist.exe" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                    <Parameter xsi:type="StringParameter" name="Value" value="" />
                  </Condition>
                  <Then>
                    <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="EnumParameter" name="VariableType" value="FileVersionNumber" />
                      <Parameter xsi:type="StringParameter" name="SourceContent" value="C:\Program Files\Dell\SupportAssistAgent\Bin\SupportAssist.exe" />
                      <Parameter xsi:type="StringParameter" name="VariableName" value="SupportAssistVersion" />
                    </Statement>
                    <Statement name="GetURL" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="URL" value="https://downloads.dell.com/serviceability/catalog/SupportAssistInstaller.exe&quot;" />
                      <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\SupportAssistInstaller.exe" />
                      <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                    </Statement>
                    <Statement name="ExecuteFile" continueOnFail="false">
                      <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\SupportAssistInstaller.exe" />
                      <Parameter xsi:type="StringParameter" name="Arguments" value="/S" />
                      <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                      <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                    </Statement>
                    <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\SupportAssistInstaller.exe" />
                    </Statement>
                    <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="EnumParameter" name="VariableType" value="FileVersionNumber" />
                      <Parameter xsi:type="StringParameter" name="SourceContent" value="C:\Program Files\Dell\SupportAssistAgent\Bin\SupportAssist.exe" />
                      <Parameter xsi:type="StringParameter" name="VariableName" value="SupportAssistVersion" />
                    </Statement>
                  </Then>
                  <Else>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false">
                      <Parameter xsi:type="StringParameter" name="Comment" value="" />
                    </Statement>
                  </Else>
                </If>
              </Body>
            </Procedure>
          </Folder>
        </Folder>
      </Folder>
    </Folder>
    <Folder name="Audit (Feeding The Agent Procedure Log) 2019-07-10" treePres="3">
      <Folder name="Mac" treePres="3">
        <Procedure name="Audit - Mac OS X - Get Current Java Version" treePres="3" id="1497869408" folderId="142821827783632" treeFullPath="Upstream Power Pack 2019-11-28.Audit (Feeding The Agent Procedure Log) 2019-07-10.Mac">
          <Body description="">
            <Statement description="softwareupdate -l &gt;&gt; #agentpath#\softwarelist.txt" name="ExecuteShellCommand" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="Command" value="java -version &gt;&gt; #vAgentConfiguration.agentTempDir#/java-version.result" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#/java-version.result" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="java-version" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="Comment" value="#java-version#" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Audit - Mac OS X - Get Current Power Settings Profile" treePres="3" id="188703937" folderId="142821827783632" treeFullPath="Upstream Power Pack 2019-11-28.Audit (Feeding The Agent Procedure Log) 2019-07-10.Mac">
          <Body description="">
            <Statement description="softwareupdate -l &gt;&gt; #agentpath#\softwarelist.txt" name="ExecuteShellCommand" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="Command" value="pmset -g live &gt;&gt; #vAgentConfiguration.agentTempDir#/current-power-profile.result" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#/current-power-profile.result" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="current-power-profile" />
            </Statement>
            <Statement name="DeleteFile" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="Path" value="pmset -g live &gt;&gt; #vAgentConfiguration.agentTempDir#/current-power-profile.result" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="Comment" value="Curent Power Profile: #current-power-profile#" />
            </Statement>
          </Body>
        </Procedure>
      </Folder>
      <Folder name="Windows" treePres="3">
        <Procedure name="Audit - Windows - Bluescreen Memory Dump Analyzer" treePres="3" id="1520851710" folderId="853311098671197" treeFullPath="Upstream Power Pack 2019-11-28.Audit (Feeding The Agent Procedure Log) 2019-07-10.Windows">
          <Body description="">
            <If description="Procedure description: Create bluescreen memory dump reports for auditing and troubleshooting.&#xD;&#xA;Kaseya customer value: Troubleshoot machines crashing with bluescreens.&#xD;&#xA;End user value: &#xD;&#xA;Dependencies: Nirsoft Bluescreenview, Windows OS.&#xD;&#xA;Usage: Run now or execute in combination with Bluescreen Event Set.&#xD;&#xA;Report options: Agent Procedure Log: &quot;UPSTREAM: Bluescreen Memory Dump:&quot;&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
              <Condition name="Windows 32 or 64 Bit Check">
                <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
              </Condition>
              <Then>
                <Statement name="GetURL" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="URL" value="http://www.nirsoft.net/utils/bluescreenview.zip" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\bluescreenview.zip" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
              </Then>
            </If>
            <If description="">
              <Condition name="Windows 32 or 64 Bit Check">
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              </Condition>
              <Then>
                <Statement name="GetURL" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="URL" value="http://www.nirsoft.net/utils/bluescreenview-x64.zip" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\bluescreenview.zip" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
              </Then>
            </If>
            <Statement name="Unzip file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="#vAgentConfiguration.agentTempDir#\bluescreenview.zip" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="#vAgentConfiguration.agentTempDir#\bluescreenview.exe /stext #vAgentConfiguration.agentTempDir#\bluescreen.txt" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement description="This is a workaround. We need to copy the result one more time as the original format from Nirsoft result code is not supported in the VSA script enginge." name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Command" value="type #vAgentConfiguration.agentTempDir#\bluescreen.txt &gt;&gt; #vAgentConfiguration.agentTempDir#\bluescreen_utf.txt" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\bluescreen_utf.txt" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="bluescreen" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Bluescreen Memory Dump: #bluescreen#" />
            </Statement>
            <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\bluescreen.txt" />
            </Statement>
            <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\bluescreen.txt" />
            </Statement>
            <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\bluescreenview.zip" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Audit - Windows - Find Local OST Files On C" treePres="3" id="553401827" folderId="853311098671197" treeFullPath="Upstream Power Pack 2019-11-28.Audit (Feeding The Agent Procedure Log) 2019-07-10.Windows">
          <Body description="Description: Detects local PST files with size adn location and writes the result in the Agent Procedure log.&#xA;&#xA;Kaseya customer value: Procedure to audit clients berfore setting up backup.&#xA;&#xA;End user value: Limiting the risks for unwanted data loss.&#xA;&#xA;Dependencies: Windows OS.&#xA;&#xA;Usage: Run at any given time.&#xA;&#xA;Report options: Procedure Log, content: &quot;FindPSTFiles:*&quot;&#xA;&#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot;. No support included.">
            <If description="">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\sfk.exe" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="GetURL" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/aUGgf7A4Vyv5dgR/download" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\sfk.exe" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
              </Then>
            </If>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Command" value="#vAgentConfiguration.agentTempDir#\sfk.exe list -big -hidden -quiet c:\ .ost &gt;&gt;#vAgentConfiguration.agentTempDir#\ost.result" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement description="Let's wait 10 minutes." name="PauseScript" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="IntegerParameter" name="Seconds" value="600" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\ost.result" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="ost" />
            </Statement>
            <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ost.result" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Get Outlook OST Files On C: #ost#" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Audit - Windows - Find Local PST Files On C" treePres="3" id="14760693" folderId="853311098671197" treeFullPath="Upstream Power Pack 2019-11-28.Audit (Feeding The Agent Procedure Log) 2019-07-10.Windows">
          <Body description="Description: Detects local PST files with size adn location and writes the result in the Agent Procedure log.&#xA;&#xA;Kaseya customer value: Procedure to audit clients berfore setting up backup.&#xA;&#xA;End user value: Limiting the risks for unwanted data loss.&#xA;&#xA;Dependencies: Windows OS.&#xA;&#xA;Usage: Run at any given time.&#xA;&#xA;Report options: Procedure Log, content: &quot;FindPSTFiles:*&quot;&#xA;&#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot;. No support included.">
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Command" value="dir c:\*.pst /S &gt;&gt; #vAgentConfiguration.agentTempDir#\pst.result" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="PauseScript" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="IntegerParameter" name="Seconds" value="10" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\pst.result" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="pst" />
            </Statement>
            <Statement name="DeleteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\pst.result" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: FindPSTFiles: #pst#" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Audit - Windows - Get Current Temp On Drive(s)" treePres="3" id="1204439113" folderId="853311098671197" treeFullPath="Upstream Power Pack 2019-11-28.Audit (Feeding The Agent Procedure Log) 2019-07-10.Windows">
          <Body description="">
            <Statement description="Procedure description: Get the disktemp on the drives on the machine.&#xD;&#xA;Kaseya customer value: Procedure for pro-active support and troubleshooting harddrive problems.&#xD;&#xA;End user value: Prevent any production and data loss tied to harddrive failure.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule once or Run Now.&#xD;&#xA;Report options: Agent Procedure log.&#xD;&#xA;Maintainer: powerpack@upstream.se Last change: 2017-09-28&#xD;&#xA;------------------------------------------------------------------------------------------------------------" name="GetURL" continueOnFail="false" osType="None">
              <Parameter xsi:type="StringParameter" name="URL" value="https://raw.githubusercontent.com/UpstreamAB/UpstreamPowerPack/master/KaseyaVSA/Powershell/KaseyaVSA-Audit-GetCurrentFreeDiskOnC.ps1?token=Akb5roZWuVy2Fu34IwUbibyHu-yGBPW7ks5cRJVdwA%3D%3D" />
              <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\KaseyaVSA-Audit-GetCurrentFreeDisk.ps1" />
              <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
            </Statement>
            <Statement name="Execute Powershell" continueOnFail="false" osType="None">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="#vAgentConfiguration.agentTempDir#\KaseyaVSA-Audit-GetCurrentFreeDisk.ps1" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
            </Statement>
            <Statement name="DeleteFile" continueOnFail="true" osType="None">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\KaseyaVSA-Audit-GetCurrentFreeDisk.ps1" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: #global:psresult#" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Audit - Windows - Get Exchange DB Size On C" treePres="3" id="1855476398" folderId="853311098671197" treeFullPath="Upstream Power Pack 2019-11-28.Audit (Feeding The Agent Procedure Log) 2019-07-10.Windows">
          <Body description="">
            <Statement name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileSize" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="c:\program\exchsrvr\mdbdata\priv1.edb" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="exch-db-size" />
            </Statement>
            <Statement description="Procedure log for easy reporting." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Exchange DB size: #exch-db-size#" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Audit - Windows - Get HPE SSD Disks" treePres="3" id="134358910" folderId="853311098671197" treeFullPath="Upstream Power Pack 2019-11-28.Audit (Feeding The Agent Procedure Log) 2019-07-10.Windows">
          <Body description="">
            <Statement description="Procedure description: Checks if the Windows machine is joined to a domain.&#xD;&#xA;Kaseya customer value: Pro-actively alert if a Windows machine is not properly joined to a domain.&#xD;&#xA;End user value: Limiting the risks productivity loss and issues relating to a non domain joined Windows machine&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule recurring or run now.&#xD;&#xA;Report options: Agent Procedure log. Look for &quot;UPSTREAM: Is Machine Domain Joined:&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="echo %USERDOMAIN% &gt;&gt;c:\kworking\userdomain.txt" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="echo %COMPUTERNAME% &gt;&gt;c:\kworking\computername.txt" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="c:\kworking\userdomain.txt" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="USERDOMAIN" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="c:\kworking\computername.txt" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="COMPUTERNAME" />
            </Statement>
            <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Path" value="c:\kworking\userdomain.txt" />
            </Statement>
            <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Path" value="c:\kworking\computername.txt" />
            </Statement>
            <If description="">
              <Condition name="CheckVariable">
                <Parameter xsi:type="StringParameter" name="VariableName" value="#USERDOMAIN#" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Equals" />
                <Parameter xsi:type="StringParameter" name="Value" value="#COMPUTERNAME#" />
              </Condition>
              <Then>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Is Machine Domain Joined: No Domain identified. Domain is set to local computername &quot;#COMPUTERNAME#&quot;." />
                </Statement>
                <Statement description="Edit the below line if you would like to create a ticket to your Service Desk. Make sure to edit &quot;Perform Step On&quot;." name="SendEmail" continueOnFail="false" osType="None">
                  <Parameter xsi:type="StringParameter" name="To" value="Enter your Service Desk email here" />
                  <Parameter xsi:type="StringParameter" name="Subject" value="#vAgentConfiguration.machName# is not joined to a domain." />
                  <Parameter xsi:type="MultiLineStringParameter" name="Body" value="This machine is not joined to a Windows domain. Please investigate.&#xA;&#xA;Machine neame: : #vAgentConfiguration.machName#&#xA;Organization name: #vAgentConfiguration.groupName#&#xA;User currently logged in: #vAgentConfiguration.currentUser#" />
                </Statement>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Is Machine Domain Joined: Domain identified as #USERDOMAIN#" />
                </Statement>
              </Else>
            </If>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Is Machine Domain Joined: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
            </Statement>
            <Statement name="ExecuteFile" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Path" value="" />
              <Parameter xsi:type="StringParameter" name="Arguments" value="" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="User" />
              <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="False" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Audit - Windows - Get Notepad File Version Example" treePres="3" id="359040046" folderId="853311098671197" treeFullPath="Upstream Power Pack 2019-11-28.Audit (Feeding The Agent Procedure Log) 2019-07-10.Windows">
          <Body description="">
            <Statement description="This example will get the version of Notepad.exe and report the result in the Agent Procedure log." name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileVersionNumber" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="c:\program\notepad.exe" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="notepad-version" />
            </Statement>
            <Statement description="Procedure log for easy reporting." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Notepad Version: #notepad-version#" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Audit - Windows - Get Pagefile Size" treePres="3" id="1548718466" folderId="853311098671197" treeFullPath="Upstream Power Pack 2019-11-28.Audit (Feeding The Agent Procedure Log) 2019-07-10.Windows">
          <Body description="Description: This procedure will  get the current pagefile settings from registry and put this in a custom audit field.&#xA;&#xA;Kaseya customer value: Health, performance and troubleshooting.&#xA;&#xA;End user value: Ensures that the machine is working in optimal performance condition.&#xA;&#xA;Dependencies: Windows OS. Custom Aduit Field: &quot;Pagefile Settings&quot; present.&#xA;&#xA;Usage: Execture the procedure at any time.&#xA;&#xA;Report options: Procedure Log, content: &quot;Pagefile:&quot; OR Audit, Aggregate Table, &quot;Pagefile Settings&quot;&#xA; &#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot; No support included.">
            <Statement name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="RegistryValue" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management\PagingFiles" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="pagefile" />
            </Statement>
            <Statement name="UpdateSystemInfo" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="ColumnName" value="Pagefile Settings" />
              <Parameter xsi:type="StringParameter" name="Value" value="#pagefile#" />
            </Statement>
            <Statement description="Writes a procedure log entry." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Pagefile: #pagefile#" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Audit - Windows - Internet Speed Test" treePres="3" id="2073177801" folderId="853311098671197" treeFullPath="Upstream Power Pack 2019-11-28.Audit (Feeding The Agent Procedure Log) 2019-07-10.Windows">
          <Body description="">
            <If description="Procedure description: Test the Internet speed connection with the tool from https://github.com/zpeters/speedtest&#xD;&#xA;Kaseya customer value: Procedure verify Internet connection and to speed up troubleshooting.&#xD;&#xA;End user value: Validates the user perspective of a slow Internet connection if reported.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Run Now from LiveConnect.&#xD;&#xA;Report options: Agent Procedure log. Look for &quot;UPSTREAM: Internet Speed test: github&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-09-06&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 1: Are the right tools in place?">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\speedtest.exe" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <If description="">
                  <Condition name="Windows 32 or 64 Bit Check">
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                  </Condition>
                  <Then>
                    <Statement name="GetURL" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="URL" value="https://github.com/zpeters/speedtest/releases/download/v1.0.5/speedtest-64-v1.0.5.exe" />
                      <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\speedtest.exe" />
                      <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                    </Statement>
                  </Then>
                  <Else>
                    <Statement name="GetURL" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="URL" value="https://github.com/zpeters/speedtest/releases/download/v1.0.5/speedtest-32-v1.0.5.exe" />
                      <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\speedtest.exe" />
                      <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                    </Statement>
                  </Else>
                </If>
              </Then>
            </If>
            <Statement description="Check for Speedtest updates." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="#vAgentConfiguration.agentTempDir#\speedtest.exe -u" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement description="Stage 2: The execution part." name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Internet Speed test: Executing &quot;speedtest.exe&quot;." />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="#vAgentConfiguration.agentTempDir#\speedtest.exe -q &gt;&gt;#vAgentConfiguration.agentTempDir#\speedtest.result" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <If description="Stage 3: Getting the results back to Kaseya Agent Procedure Log.">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\speedtest.result" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <If description="">
                  <Condition name="TestFile">
                    <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\speedtest.result" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                    <Parameter xsi:type="StringParameter" name="Value" value="Ping" />
                  </Condition>
                  <Then>
                    <Statement description="Let's get the content of the &quot;.result&quot; file and put it in a variable." name="GetVariable" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                      <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\speedtest.result" />
                      <Parameter xsi:type="StringParameter" name="VariableName" value="speedtest" />
                    </Statement>
                    <Statement description="Let's do a little houscleaning. We keep the &quot;speedtest.exe&quot; file but remove the &quot;.result&quot; file." name="DeleteFile" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\speedtest.result" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Internet Speed test: #speedtest#" />
                    </Statement>
                  </Then>
                  <Else>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Internet Speed test: Unsuccessful. The log file &quot;#vAgentConfiguration.agentTempDir#\speedtest.result&quot; did not contaiin the correct data." />
                    </Statement>
                  </Else>
                </If>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Internet Speed test: Unsuccessful. The log file &quot;#vAgentConfiguration.agentTempDir#\speedtest.result&quot; does not exist." />
                </Statement>
              </Else>
            </If>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Internet Speed test: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Audit - Windows - Is Machine Domain Joined" treePres="3" id="2071624995" folderId="853311098671197" treeFullPath="Upstream Power Pack 2019-11-28.Audit (Feeding The Agent Procedure Log) 2019-07-10.Windows">
          <Body description="">
            <Statement description="Procedure description: Checks if the Windows machine is joined to a domain.&#xD;&#xA;Kaseya customer value: Pro-actively alert if a Windows machine is not properly joined to a domain.&#xD;&#xA;End user value: Limiting the risks productivity loss and issues relating to a non domain joined Windows machine&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule recurring or run now.&#xD;&#xA;Report options: Agent Procedure log. Look for &quot;UPSTREAM: Is Machine Domain Joined:&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="echo %USERDOMAIN% &gt;&gt;c:\kworking\userdomain.txt" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="echo %COMPUTERNAME% &gt;&gt;c:\kworking\computername.txt" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="c:\kworking\userdomain.txt" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="USERDOMAIN" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="c:\kworking\computername.txt" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="COMPUTERNAME" />
            </Statement>
            <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Path" value="c:\kworking\userdomain.txt" />
            </Statement>
            <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Path" value="c:\kworking\computername.txt" />
            </Statement>
            <If description="">
              <Condition name="CheckVariable">
                <Parameter xsi:type="StringParameter" name="VariableName" value="#USERDOMAIN#" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Equals" />
                <Parameter xsi:type="StringParameter" name="Value" value="#COMPUTERNAME#" />
              </Condition>
              <Then>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Is Machine Domain Joined: No Domain identified. Domain is set to local computername &quot;#COMPUTERNAME#&quot;." />
                </Statement>
                <Statement description="Edit the below line if you would like to create a ticket to your Service Desk. Make sure to edit &quot;Perform Step On&quot;." name="SendEmail" continueOnFail="false" osType="None">
                  <Parameter xsi:type="StringParameter" name="To" value="Enter your Service Desk email here" />
                  <Parameter xsi:type="StringParameter" name="Subject" value="#vAgentConfiguration.machName# is not joined to a domain." />
                  <Parameter xsi:type="MultiLineStringParameter" name="Body" value="This machine is not joined to a Windows domain. Please investigate.&#xA;&#xA;Machine neame: : #vAgentConfiguration.machName#&#xA;Organization name: #vAgentConfiguration.groupName#&#xA;User currently logged in: #vAgentConfiguration.currentUser#" />
                </Statement>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Is Machine Domain Joined: Domain identified as #USERDOMAIN#" />
                </Statement>
              </Else>
            </If>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Is Machine Domain Joined: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Audit - Windows - Is Windows Activated" treePres="3" id="1436509215" folderId="853311098671197" treeFullPath="Upstream Power Pack 2019-11-28.Audit (Feeding The Agent Procedure Log) 2019-07-10.Windows">
          <Body description="">
            <If description="Procedure description: Checks if the Windows OS license is activated or not.&#xD;&#xA;Kaseya customer value: Pro-actively alert if a Windows OS license is not properly activated.&#xD;&#xA;End user value: Limiting the risks productivity loss and issues relating to a non-activated OS license.&#xD;&#xA;Dependencies: Windows OS. KaseyaVSA-Audit-GetOSActivation.ps1 present in Managed Files.&#xD;&#xA;Usage: Schedule recurring or run now.&#xD;&#xA;Report options: Agent Procedure log. Look for &quot;UPSTREAM: Windows Activation:&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\KaseyaVSA-Audit-GetOSActivation.ps1" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement description="It's important that you upload the Powershell script below to you Managed Files in Kaseya VSA. You will find it in your Power Pack ZIP file." name="WriteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\KaseyaVSA-Audit-GetOSActivation.ps1" />
                  <Parameter xsi:type="StringParameter" name="ManagedFile" value="VSASharedFiles\UpstreamPowerPack\Powershell\KaseyaVSA-Audit-GetOSActivation.ps1" />
                  <Parameter xsi:type="BooleanParameter" name="DeleteAfter" value="False" />
                </Statement>
              </Then>
            </If>
            <Statement name="Execute Powershell" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="#vAgentConfiguration.agentTempDir#\KaseyaVSA-Audit-GetOSActivation.ps1" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
            </Statement>
            <If description="">
              <Condition name="CheckVariable">
                <Parameter xsi:type="StringParameter" name="VariableName" value="#global:psresult#" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Equals" />
                <Parameter xsi:type="StringParameter" name="Value" value="1" />
              </Condition>
              <Then>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Windows Activation: Windows is activated. Looking good." />
                </Statement>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Windows Activation: Windows is NOT activated. Error code is #global:psresult#. Please investigate." />
                </Statement>
                <Statement description="Edit the below line if you would like to create a ticket to your Service Desk. Make sure to edit &quot;Perform Step On&quot;." name="SendEmail" continueOnFail="false" osType="None">
                  <Parameter xsi:type="StringParameter" name="To" value="Enter your Service Desk email here" />
                  <Parameter xsi:type="StringParameter" name="Subject" value="Windows license on is NOT activated on #vAgentConfiguration.machName#" />
                  <Parameter xsi:type="MultiLineStringParameter" name="Body" value="Windows is NOT activated. Error code is #global:psresult# indicating there is a problem with license activation. Please investigate.&#xA;&#xA;Machine neame: : #vAgentConfiguration.machName#&#xA;Organization name: #vAgentConfiguration.groupName#&#xA;User currently logged in: #vAgentConfiguration.currentUser#" />
                </Statement>
              </Else>
            </If>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Windows Activation: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
            </Statement>
            <Statement name="Execute Powershell" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-CimInstance -ClassName SoftwareLicensingProduct | Where{$_.PartialProductKey -and $_.Name -Like &quot;*Windows(R)*&quot;} | Select -Expand LicenseStatus" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Audit - Windows - List 5 Largest Files on C" treePres="3" id="1572058087" folderId="853311098671197" treeFullPath="Upstream Power Pack 2019-11-28.Audit (Feeding The Agent Procedure Log) 2019-07-10.Windows">
          <Body description="">
            <If description="Procedure description: Get the top 5 biggest files on C: with the tool from http://sourceforge.net/projects/swissfileknife.&#xD;&#xA;Kaseya customer value: Procedure verify Internet connection and to speed up troubleshooting.&#xD;&#xA;End user value: Validates the user perspective of a slow Internet connection if reported.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Run Now from LiveConnect.&#xD;&#xA;Report options: Agent Procedure log. Look for &quot;UPSTREAM: Internet Speed test: github&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-09-06&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 1: Are the right tools in place?">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\sfk.exe" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="GetURL" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="URL" value="https://sourceforge.net/projects/swissfileknife/files/1-swissfileknife/1.9.2.0/sfk192.exe/download" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\sfk.exe" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
              </Then>
            </If>
            <Statement description="Stage 2: The execution part." name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: This may take som time." />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="#vAgentConfiguration.agentTempDir#\sfk.exe list -big=5 -tab -quiet c:\ &gt;&gt;#vAgentConfiguration.agentTempDir#\5_largest_files_on_c.result" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement description="Stage 3: Getting the results back to Kaseya Agent Procedure Log." name="GetVariable" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\5_largest_files_on_c.result" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="5_largest_files_on_c" />
            </Statement>
            <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\5_largest_files_on_c.result" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: #5_largest_files_on_c#" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Audit - Windows - List 5 Largest Files On User Selected Drive - Interactive" treePres="3" id="426991988" folderId="853311098671197" treeFullPath="Upstream Power Pack 2019-11-28.Audit (Feeding The Agent Procedure Log) 2019-07-10.Windows">
          <Body description="">
            <If description="Procedure description: Get the top 5 biggest files on selected drive with the tool from http://sourceforge.net/projects/swissfileknife.&#xD;&#xA;Kaseya customer value: Procedure verify Internet connection and to speed up troubleshooting.&#xD;&#xA;End user value: Validates the user perspective of a slow Internet connection if reported.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Run Now from LiveConnect.&#xD;&#xA;Report options: Agent Procedure log. Look for &quot;UPSTREAM: Internet Speed test: github&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-09-06&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 1: Are the right tools in place?">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\sfk.exe" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="GetURL" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="URL" value="https://sourceforge.net/projects/swissfileknife/files/1-swissfileknife/1.9.2.0/sfk192.exe/download" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\sfk.exe" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
              </Then>
            </If>
            <Statement description="What drive letter would you like to scan? This will pop up as a messagebox to the Kaseya admin when executing." name="GetVariable" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="Enter drive letter to scan (like E)" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="driveletter" />
            </Statement>
            <Statement description="Now, let's execute the sfk.exe command line looking for the top 5 largest files on selected drive and pipe the results in a text file." name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Command" value="#vAgentConfiguration.agentTempDir#\sfk.exe list -big=5 -tab -quiet #driveletter#:\ &gt;&gt;#vAgentConfiguration.agentTempDir#\5_largest_files_on_#driveletter#.result" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement description="Let's pause the Agent Procedure and wait for the above command to finish up. 10 minutes should be enough.&#xD;&#xA;Let's get the content of the &quot;.result&quot; file and put it in a variable." name="GetVariable" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\5_largest_files_on_#driveletter#.result" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="top_5_largest_files" />
            </Statement>
            <Statement description="Let's do a little house cleaning. We keep &quot;sfk.exe&quot; but remove the &quot;.result&quot; file." name="DeleteFile" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\5_largest_files_on_#driveletter#.result" />
            </Statement>
            <Statement description="Let's end the Agent Procedure by entering the top 5 largest files in the Agent Procedure Log for easy reporting." name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Top 5 largest files on #driveletter#: #top_5_largest_files#" />
            </Statement>
          </Body>
        </Procedure>
      </Folder>
    </Folder>
    <Folder name="Chocolatey Application Mgmt 2019-01-18" treePres="3">
      <Folder name="Windows" treePres="3">
        <Folder name="Chocolatey Install" treePres="3">
          <Procedure name="Chocolatey Install - Windows - 7-Zip" treePres="3" id="906544300" folderId="876835951384545" treeFullPath="Upstream Power Pack 2019-11-28.Chocolatey Application Mgmt 2019-01-18.Windows.Chocolatey Install">
            <Body description="">
              <If description="Procedure description: Deploy applications with Chocolatey. Read more here: https://chocolatey.org&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for exploits, ransomware, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule Once, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log and &quot;C:\ProgramData\chocolatey\logs\chocolatey.log&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-04-15&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
                <Condition name="TestFile">
                  <Parameter xsi:type="StringParameter" name="Path" value="c:\ProgramData\Chocolatey\choco.exe" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                  <Parameter xsi:type="StringParameter" name="Value" value="" />
                </Condition>
                <Then>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocloatey deployment framework missing on this machine. Deploying." />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Command" value="@&quot;%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe&quot; -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command &quot;iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))&quot; &amp;&amp; SET &quot;PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin&quot;" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                </Then>
              </If>
              <Statement description="This pararmeter defines what application to deploy. Full package list here: https://chocolatey.org/packages" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="c:\ProgramData\Chocolatey\choco.exe install 7zip.install --limit-output --no-progress -y &gt;&gt;#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="chocolatey-deploy" />
              </Statement>
              <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocolatey Deployment Log: #chocolatey-deploy#" />
              </Statement>
            </Body>
          </Procedure>
          <Procedure name="Chocolatey Install - Windows - Adobe AIR" treePres="3" id="929103734" folderId="876835951384545" treeFullPath="Upstream Power Pack 2019-11-28.Chocolatey Application Mgmt 2019-01-18.Windows.Chocolatey Install">
            <Body description="">
              <If description="Procedure description: Deploy applications with Chocolatey. Read more here: https://chocolatey.org&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for exploits, ransomware, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule Once, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log and &quot;C:\ProgramData\chocolatey\logs\chocolatey.log&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-04-15&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
                <Condition name="TestFile">
                  <Parameter xsi:type="StringParameter" name="Path" value="c:\ProgramData\Chocolatey\choco.exe" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                  <Parameter xsi:type="StringParameter" name="Value" value="" />
                </Condition>
                <Then>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocloatey deployment framework missing on this machine. Deploying." />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Command" value="@&quot;%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe&quot; -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command &quot;iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))&quot; &amp;&amp; SET &quot;PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin&quot;" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                </Then>
              </If>
              <Statement description="This pararmeter defines what application to deploy. Full package list here: https://chocolatey.org/packages" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="c:\ProgramData\Chocolatey\choco.exe install adobeair --limit-output --no-progress -y &gt;&gt;#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="chocolatey-deploy" />
              </Statement>
              <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocolatey Deployment Log: #chocolatey-deploy#" />
              </Statement>
            </Body>
          </Procedure>
          <Procedure name="Chocolatey Install - Windows - Adobe Reader DC" treePres="3" id="1802942685" folderId="876835951384545" treeFullPath="Upstream Power Pack 2019-11-28.Chocolatey Application Mgmt 2019-01-18.Windows.Chocolatey Install">
            <Body description="">
              <If description="Procedure description: Deploy applications with Chocolatey. Read more here: https://chocolatey.org&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for exploits, ransomware, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule Once, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log and &quot;C:\ProgramData\chocolatey\logs\chocolatey.log&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-04-15&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
                <Condition name="TestFile">
                  <Parameter xsi:type="StringParameter" name="Path" value="c:\ProgramData\Chocolatey\choco.exe" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                  <Parameter xsi:type="StringParameter" name="Value" value="" />
                </Condition>
                <Then>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocloatey deployment framework missing on this machine. Deploying." />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Command" value="@&quot;%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe&quot; -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command &quot;iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))&quot; &amp;&amp; SET &quot;PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin&quot;" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                </Then>
              </If>
              <Statement description="This pararmeter defines what application to deploy. Full package list here: https://chocolatey.org/packages" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="c:\ProgramData\Chocolatey\choco.exe install adobereader adobereader-update --limit-output --no-progress /y &gt;&gt;#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="chocolatey-deploy" />
              </Statement>
              <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocolatey Deployment Log: #chocolatey-deploy#" />
              </Statement>
            </Body>
          </Procedure>
          <Procedure name="Chocolatey Install - Windows - Citrix Receiver" treePres="3" id="1129375210" folderId="876835951384545" treeFullPath="Upstream Power Pack 2019-11-28.Chocolatey Application Mgmt 2019-01-18.Windows.Chocolatey Install">
            <Body description="">
              <If description="Procedure description: Deploy applications with Chocolatey. Read more here: https://chocolatey.org&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for exploits, ransomware, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule Once, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log and &quot;C:\ProgramData\chocolatey\logs\chocolatey.log&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-04-15&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
                <Condition name="TestFile">
                  <Parameter xsi:type="StringParameter" name="Path" value="c:\ProgramData\Chocolatey\choco.exe" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                  <Parameter xsi:type="StringParameter" name="Value" value="" />
                </Condition>
                <Then>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocloatey deployment framework missing on this machine. Deploying." />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Command" value="@&quot;%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe&quot; -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command &quot;iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))&quot; &amp;&amp; SET &quot;PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin&quot;" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                </Then>
              </If>
              <Statement description="This pararmeter defines what application to deploy. Full package list here: https://chocolatey.org/packages" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="c:\ProgramData\Chocolatey\choco.exe install citrix-receiver --limit-output --no-progress /y &gt;&gt;#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="chocolatey-deploy" />
              </Statement>
              <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocolatey Deployment Log: #chocolatey-deploy#" />
              </Statement>
            </Body>
          </Procedure>
          <Procedure name="Chocolatey Install - Windows - Datto Drive" treePres="3" id="271719543" folderId="876835951384545" treeFullPath="Upstream Power Pack 2019-11-28.Chocolatey Application Mgmt 2019-01-18.Windows.Chocolatey Install">
            <Body description="">
              <If description="Procedure description: Deploy applications with Chocolatey. Read more here: https://chocolatey.org&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for exploits, ransomware, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule Once, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log and &quot;C:\ProgramData\chocolatey\logs\chocolatey.log&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-04-15&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
                <Condition name="TestFile">
                  <Parameter xsi:type="StringParameter" name="Path" value="c:\ProgramData\Chocolatey\choco.exe" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                  <Parameter xsi:type="StringParameter" name="Value" value="" />
                </Condition>
                <Then>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocloatey deployment framework missing on this machine. Deploying." />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Command" value="@&quot;%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe&quot; -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command &quot;iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))&quot; &amp;&amp; SET &quot;PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin&quot;" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                </Then>
              </If>
              <Statement description="This pararmeter defines what application to deploy. Full package list here: https://chocolatey.org/packages" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="c:\ProgramData\Chocolatey\choco.exe install dattodrive --limit-output --no-progress -y &gt;&gt;#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="chocolatey-deploy" />
              </Statement>
              <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocolatey Deployment Log: #chocolatey-deploy#" />
              </Statement>
            </Body>
          </Procedure>
          <Procedure name="Chocolatey Install - Windows - Dropbox" treePres="3" id="633359237" folderId="876835951384545" treeFullPath="Upstream Power Pack 2019-11-28.Chocolatey Application Mgmt 2019-01-18.Windows.Chocolatey Install">
            <Body description="">
              <If description="Procedure description: Deploy applications with Chocolatey. Read more here: https://chocolatey.org&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for exploits, ransomware, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule Once, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log and &quot;C:\ProgramData\chocolatey\logs\chocolatey.log&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-04-15&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
                <Condition name="TestFile">
                  <Parameter xsi:type="StringParameter" name="Path" value="c:\ProgramData\Chocolatey\choco.exe" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                  <Parameter xsi:type="StringParameter" name="Value" value="" />
                </Condition>
                <Then>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocloatey deployment framework missing on this machine. Deploying." />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Command" value="@&quot;%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe&quot; -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command &quot;iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))&quot; &amp;&amp; SET &quot;PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin&quot;" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                </Then>
              </If>
              <Statement description="This pararmeter defines what application to deploy. Full package list here: https://chocolatey.org/packages" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="c:\ProgramData\Chocolatey\choco.exe install dropbox --limit-output --no-progress /y &gt;&gt;#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="chocolatey-deploy" />
              </Statement>
              <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocolatey Deployment Log: #chocolatey-deploy#" />
              </Statement>
            </Body>
          </Procedure>
          <Procedure name="Chocolatey Install - Windows - FileZilla Client" treePres="3" id="1336200521" folderId="876835951384545" treeFullPath="Upstream Power Pack 2019-11-28.Chocolatey Application Mgmt 2019-01-18.Windows.Chocolatey Install">
            <Body description="">
              <If description="Procedure description: Deploy applications with Chocolatey. Read more here: https://chocolatey.org&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for exploits, ransomware, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule Once, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log and &quot;C:\ProgramData\chocolatey\logs\chocolatey.log&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-04-15&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
                <Condition name="TestFile">
                  <Parameter xsi:type="StringParameter" name="Path" value="c:\ProgramData\Chocolatey\choco.exe" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                  <Parameter xsi:type="StringParameter" name="Value" value="" />
                </Condition>
                <Then>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocloatey deployment framework missing on this machine. Deploying." />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Command" value="@&quot;%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe&quot; -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command &quot;iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))&quot; &amp;&amp; SET &quot;PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin&quot;" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                </Then>
              </If>
              <Statement description="This pararmeter defines what application to deploy. Full package list here: https://chocolatey.org/packages" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="c:\ProgramData\Chocolatey\choco.exe install filezilla --limit-output --no-progress -y &gt;&gt;#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="chocolatey-deploy" />
              </Statement>
              <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocolatey Deployment Log: #chocolatey-deploy#" />
              </Statement>
            </Body>
          </Procedure>
          <Procedure name="Chocolatey Install - Windows - Firefox" treePres="3" id="1253927225" folderId="876835951384545" treeFullPath="Upstream Power Pack 2019-11-28.Chocolatey Application Mgmt 2019-01-18.Windows.Chocolatey Install">
            <Body description="">
              <If description="Procedure description: Deploy applications with Chocolatey. Read more here: https://chocolatey.org&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for exploits, ransomware, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule Once, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log and &quot;C:\ProgramData\chocolatey\logs\chocolatey.log&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-04-15&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
                <Condition name="TestFile">
                  <Parameter xsi:type="StringParameter" name="Path" value="c:\ProgramData\Chocolatey\choco.exe" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                  <Parameter xsi:type="StringParameter" name="Value" value="" />
                </Condition>
                <Then>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocloatey deployment framework missing on this machine. Deploying." />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Command" value="@&quot;%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe&quot; -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command &quot;iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))&quot; &amp;&amp; SET &quot;PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin&quot;" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                </Then>
              </If>
              <Statement description="This pararmeter defines what application to deploy. Full package list here: https://chocolatey.org/packages" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="c:\ProgramData\Chocolatey\choco.exe install firefox --limit-output --no-progress /y &gt;&gt;#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="chocolatey-deploy" />
              </Statement>
              <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocolatey Deployment Log: #chocolatey-deploy#" />
              </Statement>
            </Body>
          </Procedure>
          <Procedure name="Chocolatey Install - Windows - Flash Player Active X" treePres="3" id="1919823180" folderId="876835951384545" treeFullPath="Upstream Power Pack 2019-11-28.Chocolatey Application Mgmt 2019-01-18.Windows.Chocolatey Install">
            <Body description="">
              <If description="Procedure description: Deploy applications with Chocolatey. Read more here: https://chocolatey.org&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for exploits, ransomware, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule Once, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log and &quot;C:\ProgramData\chocolatey\logs\chocolatey.log&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-04-15&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
                <Condition name="TestFile">
                  <Parameter xsi:type="StringParameter" name="Path" value="c:\ProgramData\Chocolatey\choco.exe" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                  <Parameter xsi:type="StringParameter" name="Value" value="" />
                </Condition>
                <Then>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocloatey deployment framework missing on this machine. Deploying." />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Command" value="@&quot;%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe&quot; -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command &quot;iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))&quot; &amp;&amp; SET &quot;PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin&quot;" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                </Then>
              </If>
              <Statement description="This pararmeter defines what application to deploy. Full package list here: https://chocolatey.org/packages" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="c:\ProgramData\Chocolatey\choco.exe install flashplayeractivex --limit-output --no-progress /y &gt;&gt;#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="chocolatey-deploy" />
              </Statement>
              <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocolatey Deployment Log: #chocolatey-deploy#" />
              </Statement>
            </Body>
          </Procedure>
          <Procedure name="Chocolatey Install - Windows - Flash Player Plugin" treePres="3" id="1995814321" folderId="876835951384545" treeFullPath="Upstream Power Pack 2019-11-28.Chocolatey Application Mgmt 2019-01-18.Windows.Chocolatey Install">
            <Body description="">
              <If description="Procedure description: Deploy applications with Chocolatey. Read more here: https://chocolatey.org&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for exploits, ransomware, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule Once, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log and &quot;C:\ProgramData\chocolatey\logs\chocolatey.log&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-04-15&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
                <Condition name="TestFile">
                  <Parameter xsi:type="StringParameter" name="Path" value="c:\ProgramData\Chocolatey\choco.exe" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                  <Parameter xsi:type="StringParameter" name="Value" value="" />
                </Condition>
                <Then>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocloatey deployment framework missing on this machine. Deploying." />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Command" value="@&quot;%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe&quot; -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command &quot;iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))&quot; &amp;&amp; SET &quot;PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin&quot;" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                </Then>
              </If>
              <Statement description="This pararmeter defines what application to deploy. Full package list here: https://chocolatey.org/packages" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="c:\ProgramData\Chocolatey\choco.exe install flashplayerplugin --limit-output --no-progress /y &gt;&gt;#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="chocolatey-deploy" />
              </Statement>
              <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocolatey Deployment Log: #chocolatey-deploy#" />
              </Statement>
            </Body>
          </Procedure>
          <Procedure name="Chocolatey Install - Windows - Google Chrome" treePres="3" id="388852650" folderId="876835951384545" treeFullPath="Upstream Power Pack 2019-11-28.Chocolatey Application Mgmt 2019-01-18.Windows.Chocolatey Install">
            <Body description="">
              <If description="Procedure description: Deploy applications with Chocolatey. Read more here: https://chocolatey.org&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for exploits, ransomware, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule Once, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log and &quot;C:\ProgramData\chocolatey\logs\chocolatey.log&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-04-15&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
                <Condition name="TestFile">
                  <Parameter xsi:type="StringParameter" name="Path" value="c:\ProgramData\Chocolatey\choco.exe" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                  <Parameter xsi:type="StringParameter" name="Value" value="" />
                </Condition>
                <Then>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocloatey deployment framework missing on this machine. Deploying." />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Command" value="@&quot;%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe&quot; -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command &quot;iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))&quot; &amp;&amp; SET &quot;PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin&quot;" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                </Then>
              </If>
              <Statement description="This pararmeter defines what application to deploy. Full package list here: https://chocolatey.org/packages" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="c:\ProgramData\Chocolatey\choco.exe install googlechrome --limit-output --no-progress /y &gt;&gt;#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="chocolatey-deploy" />
              </Statement>
              <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocolatey Deployment Log: #chocolatey-deploy#" />
              </Statement>
            </Body>
          </Procedure>
          <Procedure name="Chocolatey Install - Windows - Greenshot" treePres="3" id="1000024910" folderId="876835951384545" treeFullPath="Upstream Power Pack 2019-11-28.Chocolatey Application Mgmt 2019-01-18.Windows.Chocolatey Install">
            <Body description="">
              <If description="Procedure description: Deploy applications with Chocolatey. Read more here: https://chocolatey.org&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for exploits, ransomware, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule Once, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log and &quot;C:\ProgramData\chocolatey\logs\chocolatey.log&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-04-15&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
                <Condition name="TestFile">
                  <Parameter xsi:type="StringParameter" name="Path" value="c:\ProgramData\Chocolatey\choco.exe" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                  <Parameter xsi:type="StringParameter" name="Value" value="" />
                </Condition>
                <Then>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocloatey deployment framework missing on this machine. Deploying." />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Command" value="@&quot;%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe&quot; -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command &quot;iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))&quot; &amp;&amp; SET &quot;PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin&quot;" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                </Then>
              </If>
              <Statement description="This pararmeter defines what application to deploy. Full package list here: https://chocolatey.org/packages" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="c:\ProgramData\Chocolatey\choco.exe install greenshot --limit-output --no-progress -y &gt;&gt;#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="chocolatey-deploy" />
              </Statement>
              <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocolatey Deployment Log: #chocolatey-deploy#" />
              </Statement>
            </Body>
          </Procedure>
          <Procedure name="Chocolatey Install - Windows - Java 8 32Bit" treePres="3" id="1135982104" folderId="876835951384545" treeFullPath="Upstream Power Pack 2019-11-28.Chocolatey Application Mgmt 2019-01-18.Windows.Chocolatey Install">
            <Body description="">
              <If description="Procedure description: Deploy applications with Chocolatey. Read more here: https://chocolatey.org&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for exploits, ransomware, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule Once, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log and &quot;C:\ProgramData\chocolatey\logs\chocolatey.log&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-04-15&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
                <Condition name="TestFile">
                  <Parameter xsi:type="StringParameter" name="Path" value="c:\ProgramData\Chocolatey\choco.exe" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                  <Parameter xsi:type="StringParameter" name="Value" value="" />
                </Condition>
                <Then>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocloatey deployment framework missing on this machine. Deploying." />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Command" value="@&quot;%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe&quot; -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command &quot;iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))&quot; &amp;&amp; SET &quot;PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin&quot;" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                </Then>
              </If>
              <Statement description="This pararmeter defines what application to deploy. Full package list here: https://chocolatey.org/packages" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="c:\ProgramData\Chocolatey\choco.exe install jre8 --limit-output --no-progress -PackageParameters &quot;/exclude:64&quot; -y &gt;&gt;#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="chocolatey-deploy" />
              </Statement>
              <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocolatey Deployment Log: #chocolatey-deploy#" />
              </Statement>
            </Body>
          </Procedure>
          <Procedure name="Chocolatey Install - Windows - Java 8 64Bit" treePres="3" id="1899428299" folderId="876835951384545" treeFullPath="Upstream Power Pack 2019-11-28.Chocolatey Application Mgmt 2019-01-18.Windows.Chocolatey Install">
            <Body description="">
              <If description="Procedure description: Deploy applications with Chocolatey. Read more here: https://chocolatey.org&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for exploits, ransomware, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule Once, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log and &quot;C:\ProgramData\chocolatey\logs\chocolatey.log&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-04-15&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
                <Condition name="TestFile">
                  <Parameter xsi:type="StringParameter" name="Path" value="c:\ProgramData\Chocolatey\choco.exe" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                  <Parameter xsi:type="StringParameter" name="Value" value="" />
                </Condition>
                <Then>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocloatey deployment framework missing on this machine. Deploying." />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Command" value="@&quot;%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe&quot; -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command &quot;iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))&quot; &amp;&amp; SET &quot;PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin&quot;" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                </Then>
              </If>
              <Statement description="This pararmeter defines what application to deploy. Full package list here: https://chocolatey.org/packages" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="c:\ProgramData\Chocolatey\choco.exe install jre8 --limit-output --no-progress -PackageParameters &quot;/exclude:32&quot; -y &gt;&gt;#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="chocolatey-deploy" />
              </Statement>
              <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocolatey Deployment Log: #chocolatey-deploy#" />
              </Statement>
            </Body>
          </Procedure>
          <Procedure name="Chocolatey Install - Windows - Notepad ++" treePres="3" id="2040214752" folderId="876835951384545" treeFullPath="Upstream Power Pack 2019-11-28.Chocolatey Application Mgmt 2019-01-18.Windows.Chocolatey Install">
            <Body description="">
              <If description="Procedure description: Deploy applications with Chocolatey. Read more here: https://chocolatey.org&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for exploits, ransomware, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule Once, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log and &quot;C:\ProgramData\chocolatey\logs\chocolatey.log&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-04-15&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
                <Condition name="TestFile">
                  <Parameter xsi:type="StringParameter" name="Path" value="c:\ProgramData\Chocolatey\choco.exe" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                  <Parameter xsi:type="StringParameter" name="Value" value="" />
                </Condition>
                <Then>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocloatey deployment framework missing on this machine. Deploying." />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Command" value="@&quot;%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe&quot; -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command &quot;iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))&quot; &amp;&amp; SET &quot;PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin&quot;" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                </Then>
              </If>
              <Statement description="This pararmeter defines what application to deploy. Full package list here: https://chocolatey.org/packages" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="c:\ProgramData\Chocolatey\choco.exe install notepadplusplus --limit-output --no-progress -y &gt;&gt;#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="chocolatey-deploy" />
              </Statement>
              <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocolatey Deployment Log: #chocolatey-deploy#" />
              </Statement>
            </Body>
          </Procedure>
          <Procedure name="Chocolatey Install - Windows - Office365 Business" treePres="3" id="489987242" folderId="876835951384545" treeFullPath="Upstream Power Pack 2019-11-28.Chocolatey Application Mgmt 2019-01-18.Windows.Chocolatey Install">
            <Body description="">
              <If description="Procedure description: Deploy applications with Chocolatey. Read more here: https://chocolatey.org&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for exploits, ransomware, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule Once, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log and &quot;C:\ProgramData\chocolatey\logs\chocolatey.log&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-04-15&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
                <Condition name="TestFile">
                  <Parameter xsi:type="StringParameter" name="Path" value="c:\ProgramData\Chocolatey\choco.exe" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                  <Parameter xsi:type="StringParameter" name="Value" value="" />
                </Condition>
                <Then>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocloatey deployment framework missing on this machine. Deploying." />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Command" value="@&quot;%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe&quot; -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command &quot;iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))&quot; &amp;&amp; SET &quot;PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin&quot;" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                </Then>
              </If>
              <Statement description="This pararmeter defines what application to deploy. Full package list here: https://chocolatey.org/packages" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="c:\ProgramData\Chocolatey\choco.exe install office365business --limit-output --no-progress /y &gt;&gt;#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="chocolatey-deploy" />
              </Statement>
              <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocolatey Deployment Log: #chocolatey-deploy#" />
              </Statement>
            </Body>
          </Procedure>
          <Procedure name="Chocolatey Install - Windows - Register Apps To Be Managed By Chocolatey" treePres="3" id="15867277" folderId="876835951384545" treeFullPath="Upstream Power Pack 2019-11-28.Chocolatey Application Mgmt 2019-01-18.Windows.Chocolatey Install">
            <Body description="">
              <Statement description="Procedure description: Deploy applications with Chocolatey. Read more here: https://chocolatey.org&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for exploits, ransomware, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule Once, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log and &quot;C:\ProgramData\chocolatey\logs\chocolatey.log&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------" name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Executing RMM-AppMgmt-Windows-ChocoDeploy-RegisterChocoApps.ps1 from Upstream Power Pack Github repo." />
              </Statement>
              <Statement name="WriteFile" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\RMM-AppMgmt-Windows-ChocoDeploy-RegisterC" />
                <Parameter xsi:type="StringParameter" name="ManagedFile" value="VSASharedFiles\UpstreamPowerPack\Powershell\KaseyaVSA-Audit-GetOSActivation.ps1" />
                <Parameter xsi:type="BooleanParameter" name="DeleteAfter" value="False" />
              </Statement>
              <Statement name="Execute Powershell" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Parameter1" value="#vAgentConfiguration.agentTempDir#\RMM-AppMgmt-Windows-ChocoDeploy-RegisterChocoApps.ps1" />
                <Parameter xsi:type="StringParameter" name="Parameter2" value="" />
                <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
              </Statement>
              <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\RMM-AppMgmt-Windows-ChocoDeploy-RegisterChocoApps.ps1" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: #global:psresult#" />
              </Statement>
            </Body>
          </Procedure>
          <Procedure name="Chocolatey Install - Windows - Skype (Consumer)" treePres="3" id="473415305" folderId="876835951384545" treeFullPath="Upstream Power Pack 2019-11-28.Chocolatey Application Mgmt 2019-01-18.Windows.Chocolatey Install">
            <Body description="">
              <If description="Procedure description: Deploy applications with Chocolatey. Read more here: https://chocolatey.org&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for exploits, ransomware, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule Once, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log and &quot;C:\ProgramData\chocolatey\logs\chocolatey.log&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-04-15&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
                <Condition name="TestFile">
                  <Parameter xsi:type="StringParameter" name="Path" value="c:\ProgramData\Chocolatey\choco.exe" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                  <Parameter xsi:type="StringParameter" name="Value" value="" />
                </Condition>
                <Then>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocloatey deployment framework missing on this machine. Deploying." />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Command" value="@&quot;%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe&quot; -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command &quot;iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))&quot; &amp;&amp; SET &quot;PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin&quot;" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                </Then>
              </If>
              <Statement description="This pararmeter defines what application to deploy. Full package list here: https://chocolatey.org/packages" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="c:\ProgramData\Chocolatey\choco.exe install skype --limit-output --no-progress /y &gt;&gt;#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="chocolatey-deploy" />
              </Statement>
              <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocolatey Deployment Log: #chocolatey-deploy#" />
              </Statement>
            </Body>
          </Procedure>
          <Procedure name="Chocolatey Install - Windows - Teamviewer (Yes, really)" treePres="3" id="1910848438" folderId="876835951384545" treeFullPath="Upstream Power Pack 2019-11-28.Chocolatey Application Mgmt 2019-01-18.Windows.Chocolatey Install">
            <Body description="">
              <If description="Procedure description: Deploy applications with Chocolatey. Read more here: https://chocolatey.org&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for exploits, ransomware, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule Once, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log and &quot;C:\ProgramData\chocolatey\logs\chocolatey.log&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-04-15&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
                <Condition name="TestFile">
                  <Parameter xsi:type="StringParameter" name="Path" value="c:\ProgramData\Chocolatey\choco.exe" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                  <Parameter xsi:type="StringParameter" name="Value" value="" />
                </Condition>
                <Then>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocloatey deployment framework missing on this machine. Deploying." />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Command" value="@&quot;%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe&quot; -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command &quot;iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))&quot; &amp;&amp; SET &quot;PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin&quot;" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                </Then>
              </If>
              <Statement description="This pararmeter defines what application to deploy. Full package list here: https://chocolatey.org/packages" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="c:\ProgramData\Chocolatey\choco.exe install teamviewer --limit-output --no-progress /y &gt;&gt;#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="chocolatey-deploy" />
              </Statement>
              <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocolatey Deployment Log: #chocolatey-deploy#" />
              </Statement>
            </Body>
          </Procedure>
          <Procedure name="Chocolatey Install - Windows - uBlock Origin Chrome" treePres="3" id="2042295749" folderId="876835951384545" treeFullPath="Upstream Power Pack 2019-11-28.Chocolatey Application Mgmt 2019-01-18.Windows.Chocolatey Install">
            <Body description="">
              <If description="Procedure description: Deploy applications with Chocolatey. Read more here: https://chocolatey.org&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for exploits, ransomware, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule Once, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log and &quot;C:\ProgramData\chocolatey\logs\chocolatey.log&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-04-15&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
                <Condition name="TestFile">
                  <Parameter xsi:type="StringParameter" name="Path" value="c:\ProgramData\Chocolatey\choco.exe" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                  <Parameter xsi:type="StringParameter" name="Value" value="" />
                </Condition>
                <Then>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocloatey deployment framework missing on this machine. Deploying." />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Command" value="@&quot;%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe&quot; -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command &quot;iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))&quot; &amp;&amp; SET &quot;PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin&quot;" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                </Then>
              </If>
              <Statement description="This pararmeter defines what application to deploy. Full package list here: https://chocolatey.org/packages" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="c:\ProgramData\Chocolatey\choco.exe install ublockorigin-chrome --limit-output --no-progress -y &gt;&gt;#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="chocolatey-deploy" />
              </Statement>
              <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocolatey Deployment Log: #chocolatey-deploy#" />
              </Statement>
            </Body>
          </Procedure>
          <Procedure name="Chocolatey Install - Windows - uBlock Origin Firefox" treePres="3" id="770235713" folderId="876835951384545" treeFullPath="Upstream Power Pack 2019-11-28.Chocolatey Application Mgmt 2019-01-18.Windows.Chocolatey Install">
            <Body description="">
              <If description="Procedure description: Deploy applications with Chocolatey. Read more here: https://chocolatey.org&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for exploits, ransomware, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule Once, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log and &quot;C:\ProgramData\chocolatey\logs\chocolatey.log&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-04-15&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
                <Condition name="TestFile">
                  <Parameter xsi:type="StringParameter" name="Path" value="c:\ProgramData\Chocolatey\choco.exe" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                  <Parameter xsi:type="StringParameter" name="Value" value="" />
                </Condition>
                <Then>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocloatey deployment framework missing on this machine. Deploying." />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Command" value="@&quot;%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe&quot; -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command &quot;iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))&quot; &amp;&amp; SET &quot;PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin&quot;" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                </Then>
              </If>
              <Statement description="This pararmeter defines what application to deploy. Full package list here: https://chocolatey.org/packages" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="c:\ProgramData\Chocolatey\choco.exe install ublockorigin-firefox --limit-output --no-progress -y &gt;&gt;#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="chocolatey-deploy" />
              </Statement>
              <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocolatey Deployment Log: #chocolatey-deploy#" />
              </Statement>
            </Body>
          </Procedure>
          <Procedure name="Chocolatey Install - Windows - VLC Media Player" treePres="3" id="1685069061" folderId="876835951384545" treeFullPath="Upstream Power Pack 2019-11-28.Chocolatey Application Mgmt 2019-01-18.Windows.Chocolatey Install">
            <Body description="">
              <If description="Procedure description: Deploy applications with Chocolatey. Read more here: https://chocolatey.org&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for exploits, ransomware, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule Once, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log and &quot;C:\ProgramData\chocolatey\logs\chocolatey.log&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-04-15&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
                <Condition name="TestFile">
                  <Parameter xsi:type="StringParameter" name="Path" value="c:\ProgramData\Chocolatey\choco.exe" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                  <Parameter xsi:type="StringParameter" name="Value" value="" />
                </Condition>
                <Then>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocloatey deployment framework missing on this machine. Deploying." />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Command" value="@&quot;%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe&quot; -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command &quot;iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))&quot; &amp;&amp; SET &quot;PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin&quot;" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                </Then>
              </If>
              <Statement description="This pararmeter defines what application to deploy. Full package list here: https://chocolatey.org/packages" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="c:\ProgramData\Chocolatey\choco.exe install vlc --limit-output --no-progress /y &gt;&gt;#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="chocolatey-deploy" />
              </Statement>
              <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocolatey Deployment Log: #chocolatey-deploy#" />
              </Statement>
            </Body>
          </Procedure>
          <Procedure name="Chocolatey Install - Windows - Zoom Meeting" treePres="3" id="1684809494" folderId="876835951384545" treeFullPath="Upstream Power Pack 2019-11-28.Chocolatey Application Mgmt 2019-01-18.Windows.Chocolatey Install">
            <Body description="">
              <If description="Procedure description: Deploy applications with Chocolatey. Read more here: https://chocolatey.org&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for exploits, ransomware, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule Once, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log and &quot;C:\ProgramData\chocolatey\logs\chocolatey.log&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-04-15&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
                <Condition name="TestFile">
                  <Parameter xsi:type="StringParameter" name="Path" value="c:\ProgramData\Chocolatey\choco.exe" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                  <Parameter xsi:type="StringParameter" name="Value" value="" />
                </Condition>
                <Then>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocloatey deployment framework missing on this machine. Deploying." />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Command" value="@&quot;%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe&quot; -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command &quot;iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))&quot; &amp;&amp; SET &quot;PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin&quot;" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                </Then>
              </If>
              <Statement description="This pararmeter defines what application to deploy. Full package list here: https://chocolatey.org/packages" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="c:\ProgramData\Chocolatey\choco.exe install zoom --limit-output --no-progress -y &gt;&gt;#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="chocolatey-deploy" />
              </Statement>
              <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocolatey Deployment Log: #chocolatey-deploy#" />
              </Statement>
            </Body>
          </Procedure>
        </Folder>
        <Folder name="Chocolatey Uninstall" treePres="3">
          <Procedure name="Chocolatey Uninstall - Windows - 7-Zip (Use as template for any other apps)" treePres="3" id="455106151" folderId="826304970833614" treeFullPath="Upstream Power Pack 2019-11-28.Chocolatey Application Mgmt 2019-01-18.Windows.Chocolatey Uninstall">
            <Body description="">
              <If description="Procedure description: Uninstall applications deployed with Chocolatey. Read more here: https://github.com/chocolatey/choco/wiki/CommandsUninstall&#xD;&#xA;Kaseya customer value: Procedure to secure clients by removing unwanted software.&#xD;&#xA;End user value: Limiting the risks for exploits, ransomware, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule Once, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log and &quot;C:\ProgramData\chocolatey\logs\chocolatey.log&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-04-15&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
                <Condition name="TestFile">
                  <Parameter xsi:type="StringParameter" name="Path" value="c:\ProgramData\Chocolatey\choco.exe" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                  <Parameter xsi:type="StringParameter" name="Value" value="" />
                </Condition>
                <Then>
                  <If description="In case of the app is running, kill it.">
                    <Condition name="ApplicationRunning">
                      <Parameter xsi:type="StringParameter" name="ApplicationName" value="7zFM.exe" />
                    </Condition>
                    <Then>
                      <Statement name="CloseApplication" continueOnFail="false" osType="Windows">
                        <Parameter xsi:type="StringParameter" name="ApplicationName" value="7zFM.exe" />
                      </Statement>
                    </Then>
                  </If>
                  <Statement description="This pararmeter defines what App to uninstall. Full package list here: https://chocolatey.org/packages" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Command" value="c:\ProgramData\Chocolatey\choco.exe uninstall 7zip.install --limit-output --no-progress -y &gt;&gt;#vAgentConfiguration.agentTempDir#\chocolatey-uninstall.log" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                  <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                    <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\chocolatey-uninstall.log" />
                    <Parameter xsi:type="StringParameter" name="VariableName" value="chocolatey-uninstall" />
                  </Statement>
                  <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\chocolatey-uninstall.log" />
                  </Statement>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocolatey Uninstall Log: #chocolatey-uninstall#" />
                  </Statement>
                </Then>
                <Else>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocolatey deployment framework is missing on this machine. You can only manage applications deployed by Chocolatey with Chocolatey." />
                  </Statement>
                </Else>
              </If>
            </Body>
          </Procedure>
        </Folder>
        <Folder name="Chocolatey Upgrade" treePres="3">
          <Procedure name="Chocolatey Upgrade - Windows - All Apps Managed By Chocolatey" treePres="3" id="1721054001" folderId="160492514148584" treeFullPath="Upstream Power Pack 2019-11-28.Chocolatey Application Mgmt 2019-01-18.Windows.Chocolatey Upgrade">
            <Body description="">
              <If description="Procedure description: Upgrade applications deployed with Chocolatey. Read more here: https://chocolatey.org/docs/commandsupgrade&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for exploits, ransomware, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule Once, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log and &quot;C:\ProgramData\chocolatey\logs\chocolatey.log&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-04-15&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
                <Condition name="TestFile">
                  <Parameter xsi:type="StringParameter" name="Path" value="c:\ProgramData\Chocolatey\choco.exe" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                  <Parameter xsi:type="StringParameter" name="Value" value="" />
                </Condition>
                <Then>
                  <Statement description="This pararmeter defines what App to upgrade. Full package list here: https://chocolatey.org/packages" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Command" value="c:\ProgramData\Chocolatey\choco.exe upgrade all --limit-output --no-progress -y &gt;&gt;#vAgentConfiguration.agentTempDir#\chocolatey-upgrade.log" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                  <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                    <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\chocolatey-upgrade.log" />
                    <Parameter xsi:type="StringParameter" name="VariableName" value="chocolatey-upgrade" />
                  </Statement>
                  <Statement name="DeleteFile" continueOnFail="true" osType="None">
                    <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\chocolatey-upgrade.log" />
                  </Statement>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocolatey Upgrade Log: #chocolatey-upgrade#" />
                  </Statement>
                </Then>
                <Else>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocolatey deployment framework is missing on this machine. You can only manage applications deployed by Chocolatey with Chocolatey." />
                  </Statement>
                </Else>
              </If>
            </Body>
          </Procedure>
        </Folder>
      </Folder>
    </Folder>
    <Folder name="Extended Audit (Custom Fields Required) 2019-11-28" treePres="3">
      <Folder name="Linux" treePres="3">
        <Procedure name="Custom Field - Audit - Linux Generic - System - Get Linux Kernel Version" treePres="3" id="1288353127" folderId="496405472185651" treeFullPath="Upstream Power Pack 2019-11-28.Extended Audit (Custom Fields Required) 2019-11-28.Linux">
          <Body description="">
            <Statement description="Create a custom field named &quot;CF Linux Kernel&quot; and update step 5 before running." name="ExecuteShellCommand" continueOnFail="false" osType="Linux">
              <Parameter xsi:type="StringParameter" name="Command" value="uname -r  &gt;&gt; #vAgentConfiguration.agentTempDir#/linux-kernel.result" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false" osType="Linux">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#/linux-kernel.result" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="linux-kernel" />
            </Statement>
            <Statement name="DeleteFile" continueOnFail="false" osType="Linux">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#/linux-kernel.result" />
            </Statement>
            <Statement name="UpdateSystemInfo" continueOnFail="false" osType="Linux">
              <Parameter xsi:type="StringParameter" name="ColumnName" value="Mac / Linux Kernel" />
              <Parameter xsi:type="StringParameter" name="Value" value="#linux-kernel#" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Linux">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: #linux-kernel# The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
            </Statement>
          </Body>
        </Procedure>
      </Folder>
      <Folder name="Mac" treePres="3">
        <Procedure name="Custom Field - Audit - Mac OS X - Get Current WIFI Signal Strength" treePres="3" id="2126661294" folderId="138017608801842" treeFullPath="Upstream Power Pack 2019-11-28.Extended Audit (Custom Fields Required) 2019-11-28.Mac">
          <Body description="Description: Detects current disk temperature and writes the results to a custom field and in the the script log.&#xA;&#xA;Kaseya customer value: Procedure to secure clients from unwanted downtime and data loss.&#xA;&#xA;End user value: Limiting the risks for unwanted downtime and data loss.&#xA;&#xA;Dependencies: Windows OS. Make sure you have created &quot;CF Disk Temp&quot; (string) under &quot;Audit, Custom Fields&quot;.&#xA;&#xA;Usage: Run at any given time.&#xA;&#xA;Report options: Procedure Log, content: &quot;GetDiskTemp:*&quot; and Aggregate Table, Diskt Temp.&#xA;&#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot;. No support included.">
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="Command" value="/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I | grep -w SSID | cut -c18- &gt;&gt;#vAgentConfiguration.agentTempDir#/current_wifi_ssid.result" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="Command" value="/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I | grep CtlRSSI | cut -c18- &gt;&gt;#vAgentConfiguration.agentTempDir#/current_wifi_signal_strength.result" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#/current_wifi_ssid.result" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="current_wifi_ssid" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#/current_wifi_signal_strength.result" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="current_wifi_signal_strength" />
            </Statement>
            <Statement name="UpdateSystemInfo" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="ColumnName" value="CF Last Used Wifi SSID" />
              <Parameter xsi:type="StringParameter" name="Value" value="#current_wifi_ssid#" />
            </Statement>
            <Statement name="UpdateSystemInfo" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="ColumnName" value="CF Last Wifi Signal Strength" />
              <Parameter xsi:type="StringParameter" name="Value" value="#current_wifi_signal_strength#" />
            </Statement>
            <Statement name="DeleteFile" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#/current_wifi_ssid.result" />
            </Statement>
            <Statement name="DeleteFile" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#/current_wifi_signal_strength.result" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Wifi Info: #current_wifi_ssid# #current_wifi_signal_strength#" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Custom Field - Audit - Mac OS X - System - Get Kernel Version" treePres="3" id="1168866076" folderId="138017608801842" treeFullPath="Upstream Power Pack 2019-11-28.Extended Audit (Custom Fields Required) 2019-11-28.Mac">
          <Body description="">
            <Statement description="Create a custom field named &quot;CF OS X Kernel&quot; and update step 5 before running." name="ExecuteShellCommand" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="Command" value="uname -r  &gt;&gt; #vAgentConfiguration.agentTempDir#/osx-kernel.result" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#/osx-kernel.result" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="osx-kernel" />
            </Statement>
            <Statement name="DeleteFile" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#/osx-kernel.result" />
            </Statement>
            <Statement name="UpdateSystemInfo" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="ColumnName" value="Mac / Linux Kernel" />
              <Parameter xsi:type="StringParameter" name="Value" value="#osx-kernel#" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Kernel Version: #osx-kernel#" />
            </Statement>
          </Body>
        </Procedure>
      </Folder>
      <Folder name="Windows" treePres="3">
        <Procedure name="Custom Field - Audit - Windows - Get Current WIFI Signal Strength" treePres="3" id="473384581" folderId="465226159042318" treeFullPath="Upstream Power Pack 2019-11-28.Extended Audit (Custom Fields Required) 2019-11-28.Windows">
          <Body description="">
            <Statement description="Procedure description: Get current WIFI SSID and signal strength.&#xD;&#xA;Kaseya customer value: Procedure for pro-active support and troubleshooting.&#xD;&#xA;End user value: Reducing productivity and support issues with using the wrong WIFI or slow connection.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for &quot;UPSTREAM: Wifi Info:&quot; before, during and after update deployment statements.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------" name="Execute Powershell" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="(netsh wlan show interfaces) -Match '^\s+Signal' -Replace '^\s+Signal\s+:\s+',''" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
            </Statement>
            <Statement name="UpdateSystemInfo" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="ColumnName" value="CF Last Wifi Signal Strength" />
              <Parameter xsi:type="StringParameter" name="Value" value="#global:psresult#" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="true" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Wifi Info: Wifi Strength is currently: #global:psresult#" />
            </Statement>
            <Statement description="------------------------------------------------------------------------------------------------------------" name="Execute Powershell" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="(netsh wlan show interfaces) -Match '^\s+SSID' -Replace '^\s+SSID\s+:\s+',''" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
            </Statement>
            <Statement name="UpdateSystemInfo" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="ColumnName" value="CF Last Used Wifi SSID" />
              <Parameter xsi:type="StringParameter" name="Value" value="#global:psresult#" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="true" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Wifi Info: Wifi SSID: #global:psresult#" />
            </Statement>
            <Statement description="------------------------------------------------------------------------------------------------------------" name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Wifi Info: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Custom Field - Audit - Windows - Get GPU Model And Driver" treePres="3" id="1355105632" folderId="465226159042318" treeFullPath="Upstream Power Pack 2019-11-28.Extended Audit (Custom Fields Required) 2019-11-28.Windows">
          <Body description="">
            <Statement description="Procedure description: Get the VGA model and driver.&#xD;&#xA;Kaseya customer value: Extended auditing and troubleshooting.&#xD;&#xA;End user value: Audit, security and compliance.&#xD;&#xA;Dependencies: Windows OS. Custom Fields.&#xD;&#xA;Usage: Schedule Once or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for &quot;UPSTREAM: Get VGA Driver/Model&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------" name="Execute Powershell" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-WmiObject Win32_VideoController | Select -Expand Caption" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
            </Statement>
            <Statement name="UpdateSystemInfo" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="ColumnName" value="CF GPU Model" />
              <Parameter xsi:type="StringParameter" name="Value" value="#global:psresult#" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Get VGA Model: #global:psresult#" />
            </Statement>
            <Statement name="Execute Powershell" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-WmiObject Win32_VideoController | Select -Expand DriverVersion" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
            </Statement>
            <Statement name="UpdateSystemInfo" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="ColumnName" value="CF GPU Driver" />
              <Parameter xsi:type="StringParameter" name="Value" value="#global:psresult#" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Get VGA Driver: #global:psresult#" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Custom Field - Audit - Windows - Get HDD Model And Serial" treePres="3" id="1815175649" folderId="465226159042318" treeFullPath="Upstream Power Pack 2019-11-28.Extended Audit (Custom Fields Required) 2019-11-28.Windows">
          <Body description="">
            <Statement description="Procedure description: Extend the audit capabilites with HDD Model and Serial.&#xD;&#xA;Kaseya customer value: Audit, warranty and compliance&#xD;&#xA;End user value: Audit, warranty and compliance&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule Once or resurring in a Policy.&#xD;&#xA;Report options:Custom Field report or Agent Procedure log. Look for &quot;UPSTREAM: Get HDD&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------" name="Execute Powershell" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="(Get-WMIObject -Class win32_DiskDrive | Select -Expand Model).Trim()" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: HDD Model: #global:psresult#" />
            </Statement>
            <Statement name="UpdateSystemInfo" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="ColumnName" value="CD HDD Model" />
              <Parameter xsi:type="StringParameter" name="Value" value="#global:psresult#" />
            </Statement>
            <Statement name="Execute Powershell" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="(Get-WMIObject -Class win32_PhysicalMedia | Select -Expand SerialNumber).Trim()" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: HDD Serial: #global:psresult#" />
            </Statement>
            <Statement name="UpdateSystemInfo" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="ColumnName" value="CF HDD Serial" />
              <Parameter xsi:type="StringParameter" name="Value" value="#global:psresult#" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Get HDD Model And Serial: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Custom Field - Audit - Windows - Get Hyper-V Host Name" treePres="3" id="938611166" folderId="465226159042318" treeFullPath="Upstream Power Pack 2019-11-28.Extended Audit (Custom Fields Required) 2019-11-28.Windows">
          <Body description="">
            <If description="Procedure description: Get Windows Hyper-V host from the registry.&#xD;&#xA;Kaseya customer value: Track the VM guests running on a Hyper-V hosts for auditing and managment.&#xD;&#xA;End user value: audit and compliance.&#xD;&#xA;Dependencies: Windows OS. Custom Field &quot;CF VM Host&quot; created. Run on a view based on manufacturer &quot;Microsoft*&quot;&#xD;&#xA;Usage: Schedule Recurringly or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for &quot;UPSTREAM: Get VM Host:&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
              <Condition name="Windows 32 or 64 Bit Check">
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              </Condition>
              <Then>
                <If description="">
                  <Condition name="CheckRegistryValue64">
                    <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Virtual Machine\Guest\Parameters\PhysicalHostName" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                    <Parameter xsi:type="StringParameter" name="Value" value="" />
                  </Condition>
                  <Then>
                    <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="EnumParameter" name="VariableType" value="RegistryValue64" />
                      <Parameter xsi:type="StringParameter" name="SourceContent" value="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Virtual Machine\Guest\Parameters\PhysicalHostName" />
                      <Parameter xsi:type="StringParameter" name="VariableName" value="HyperVHostName" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Get Hyper-V Host Name: #HyperVHostName#" />
                    </Statement>
                    <Statement name="UpdateSystemInfo" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="ColumnName" value="CF VM Host" />
                      <Parameter xsi:type="StringParameter" name="Value" value="#HyperVHostName#" />
                    </Statement>
                  </Then>
                  <Else>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Get Hyper-V Host Name: No Hyper-V host name detected in the registry." />
                    </Statement>
                  </Else>
                </If>
              </Then>
            </If>
            <If description="">
              <Condition name="Windows 32 or 64 Bit Check">
                <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
              </Condition>
              <Then>
                <If description="">
                  <Condition name="CheckRegistryValue">
                    <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Virtual Machine\Guest\Parameters\PhysicalHostName" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                    <Parameter xsi:type="StringParameter" name="Value" value="" />
                  </Condition>
                  <Then>
                    <Statement name="GetVariable" continueOnFail="false">
                      <Parameter xsi:type="EnumParameter" name="VariableType" value="RegistryValue" />
                      <Parameter xsi:type="StringParameter" name="SourceContent" value="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Virtual Machine\Guest\Parameters\PhysicalHostName" />
                      <Parameter xsi:type="StringParameter" name="VariableName" value="" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Get Hyper-V Host Name: #HyperVHostName#" />
                    </Statement>
                    <Statement name="UpdateSystemInfo" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="ColumnName" value="CF VM Host" />
                      <Parameter xsi:type="StringParameter" name="Value" value="#HyperVHostName#" />
                    </Statement>
                  </Then>
                  <Else>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Get Hyper-V Host Name: No Hyper-V host name detected in the registry." />
                    </Statement>
                  </Else>
                </If>
              </Then>
            </If>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Get Hyper-V Host Name: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Custom Field - Audit - Windows - Get OS Install Date" treePres="3" id="466461793" folderId="465226159042318" treeFullPath="Upstream Power Pack 2019-11-28.Extended Audit (Custom Fields Required) 2019-11-28.Windows">
          <Body description="">
            <Statement description="Procedure description: Get OS install date from command line.&#xD;&#xA;Kaseya customer value: Procedure for pro-active support and troubleshooting. Knowing the age of the OS.&#xD;&#xA;End user value: Knowing the age of the OS.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule once or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for &quot;Upstream: OS Install Date&quot; before, during and after update deployment statements.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------" name="Execute Powershell" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-date (([WMI]'').ConvertToDateTime((Get-WmiObject Win32_OperatingSystem).InstallDate)) -Format 'yyyy-MM-dd'" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
            </Statement>
            <Statement name="UpdateSystemInfo" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="ColumnName" value="CF OS Install Date" />
              <Parameter xsi:type="StringParameter" name="Value" value="#global:psresult#" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: OS Install Date: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Custom Field - Audit - Windows - Get OS Language" treePres="3" id="1229895230" folderId="465226159042318" treeFullPath="Upstream Power Pack 2019-11-28.Extended Audit (Custom Fields Required) 2019-11-28.Windows">
          <Body description="">
            <If description="Procedure description: Get OS language from the registry&#xD;&#xA;Kaseya customer value: Extended auditing and troubleshooting.&#xD;&#xA;End user value: Understand the importance of consistency in language versions.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule Once or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for &quot;UPSTREAM: Get OS Language:&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
              <Condition name="CheckRegistryValue">
                <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Nls\Language\InstallLanguage" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="RegistryValue" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Nls\Language\InstallLanguage" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="OSlanguage" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Get OS Language: Hex: #OSlanguage#" />
                </Statement>
                <Statement description="Let's get the language result back in to Kaseya by populating custom fields. Add more translation steps as you go.&#xD;&#xA;https://www.autoitscript.com/autoit3/docs/appendix/OSLangCodes.htm&#xD;&#xA;If we don't have a translation match for the language codes below we at least put the code visible for you in the Custom Field." name="UpdateSystemInfo" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="ColumnName" value="CF OS Language" />
                  <Parameter xsi:type="StringParameter" name="Value" value="#OSlanguage#" />
                </Statement>
                <If description="">
                  <Condition name="CheckVariable">
                    <Parameter xsi:type="StringParameter" name="VariableName" value="#OSlanguage#" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Equals" />
                    <Parameter xsi:type="StringParameter" name="Value" value="0409" />
                  </Condition>
                  <Then>
                    <Statement name="UpdateSystemInfo" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="ColumnName" value="CF OS Language" />
                      <Parameter xsi:type="StringParameter" name="Value" value="US English" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Get OS Language: US English." />
                    </Statement>
                  </Then>
                </If>
                <If description="">
                  <Condition name="CheckVariable">
                    <Parameter xsi:type="StringParameter" name="VariableName" value="#OSlanguage#" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Equals" />
                    <Parameter xsi:type="StringParameter" name="Value" value="0414" />
                  </Condition>
                  <Then>
                    <Statement name="UpdateSystemInfo" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="ColumnName" value="CF OS Language" />
                      <Parameter xsi:type="StringParameter" name="Value" value="Norwegian" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Get OS Language: Norwegian." />
                    </Statement>
                  </Then>
                </If>
                <If description="">
                  <Condition name="CheckVariable">
                    <Parameter xsi:type="StringParameter" name="VariableName" value="#OSlanguage#" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Equals" />
                    <Parameter xsi:type="StringParameter" name="Value" value="0406" />
                  </Condition>
                  <Then>
                    <Statement name="UpdateSystemInfo" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="ColumnName" value="CF OS Language" />
                      <Parameter xsi:type="StringParameter" name="Value" value="Danish" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Get OS Language: Dansish." />
                    </Statement>
                  </Then>
                </If>
                <If description="">
                  <Condition name="CheckVariable">
                    <Parameter xsi:type="StringParameter" name="VariableName" value="#OSlanguage#" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Equals" />
                    <Parameter xsi:type="StringParameter" name="Value" value="040B" />
                  </Condition>
                  <Then>
                    <Statement name="UpdateSystemInfo" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="ColumnName" value="CF OS Language" />
                      <Parameter xsi:type="StringParameter" name="Value" value="Finnish" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Get OS Language: Finnish." />
                    </Statement>
                  </Then>
                </If>
                <If description="">
                  <Condition name="CheckVariable">
                    <Parameter xsi:type="StringParameter" name="VariableName" value="#OSlanguage#" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Equals" />
                    <Parameter xsi:type="StringParameter" name="Value" value="041D" />
                  </Condition>
                  <Then>
                    <Statement name="UpdateSystemInfo" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="ColumnName" value="CF OS Language" />
                      <Parameter xsi:type="StringParameter" name="Value" value="Swedish" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Get OS Language: Swedish." />
                    </Statement>
                  </Then>
                </If>
                <If description="">
                  <Condition name="CheckVariable">
                    <Parameter xsi:type="StringParameter" name="VariableName" value="#OSlanguage#" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Equals" />
                    <Parameter xsi:type="StringParameter" name="Value" value="0809" />
                  </Condition>
                  <Then>
                    <Statement name="UpdateSystemInfo" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="ColumnName" value="CF OS Language" />
                      <Parameter xsi:type="StringParameter" name="Value" value="UK English" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Get OS Language: UK English." />
                    </Statement>
                  </Then>
                </If>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Get OS Language: Failed to get registry value." />
                </Statement>
              </Else>
            </If>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Get OS Language: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Custom Field - Audit - Windows - Get SMART Status" treePres="3" id="1113704234" folderId="465226159042318" treeFullPath="Upstream Power Pack 2019-11-28.Extended Audit (Custom Fields Required) 2019-11-28.Windows">
          <Body description="">
            <Statement description="Procedure description: Get the physical disk(s) SMART status ad update a Custom Field.&#xD;&#xA;Kaseya customer value: Pro-actively evaluate the SMART status to avoid hardware failure and data loss.&#xD;&#xA;End user value: Pro-actively evaluate the SMART status to avoid hardware failure and data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule recurringly (monthly perhaps) or Run Now.&#xD;&#xA;Report options: Custom Field and Agent Procedure log. Look for &quot;UPSTREAM: Get SMART Status&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------" name="Execute Powershell" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-WMIObject -Class Win32_DiskDrive | Select-Object -Expand Status" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Get SMART result back from command: #global:psresult#" />
            </Statement>
            <If description="">
              <Condition name="CheckVariable">
                <Parameter xsi:type="StringParameter" name="VariableName" value="#global:psresult#" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="DoesNotContain" />
                <Parameter xsi:type="StringParameter" name="Value" value="OK" />
              </Condition>
              <Then>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Get SMART Status: Warning" />
                </Statement>
                <Statement name="UpdateSystemInfo" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="ColumnName" value="CF SMART Status" />
                  <Parameter xsi:type="StringParameter" name="Value" value="Warning" />
                </Statement>
                <Statement description="Edit the below line if you would like to create a ticket to your Service Desk. Make sure to edit &quot;Perform Step On&quot;." name="SendEmail" continueOnFail="false" osType="None">
                  <Parameter xsi:type="StringParameter" name="To" value="Enter your Service Desk email here" />
                  <Parameter xsi:type="StringParameter" name="Subject" value="#vAgentConfiguration.machName# is reporting physical disk errors" />
                  <Parameter xsi:type="MultiLineStringParameter" name="Body" value="This machine is reporting physical disk errors from a SMART test. Please investigate.&#xA;&#xA;Machine neame: : #vAgentConfiguration.machName#&#xA;Organization name: #vAgentConfiguration.groupName#&#xA;User currently logged in: #vAgentConfiguration.currentUser#&#xA;SMART message: #global:psresult# " />
                </Statement>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Get SMART Status: OK" />
                </Statement>
              </Else>
            </If>
            <If description="Some error management.">
              <Condition name="CheckVariable">
                <Parameter xsi:type="StringParameter" name="VariableName" value="#global:psresult#" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                <Parameter xsi:type="StringParameter" name="Value" value="Windows PowerShell " />
              </Condition>
              <Then>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: WMI  SMART query failed to execute. Typically a problem on virtual machines." />
                </Statement>
                <Statement name="UpdateSystemInfo" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="ColumnName" value="CF SMART Status" />
                  <Parameter xsi:type="StringParameter" name="Value" value="No Data" />
                </Statement>
              </Then>
            </If>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Get SMART Status: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Custom Field - Audit - Windows - Get SQL Version" treePres="3" id="2105724818" folderId="465226159042318" treeFullPath="Upstream Power Pack 2019-11-28.Extended Audit (Custom Fields Required) 2019-11-28.Windows">
          <Body description="">
            <If description="Procedure description: Get the SQL version from the registry.&#xD;&#xA;Kaseya customer value: Knowing the SQL version and the associated costs.&#xD;&#xA;End user value: Knowing the SQL version and the associated costs.&#xD;&#xA;Dependencies: Windows OS. MS SQL present. Custom field CF SQL Version.&#xD;&#xA;Usage: Schedule once or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for &quot;UPSTREAM: Get SQL Version:&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;We do a REG query to get the SQL version regsitry information in a text text file.">
              <Condition name="Windows 32 or 64 Bit Check">
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              </Condition>
              <Then>
                <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="REG QUERY &quot;HKLM\SOFTWARE\Microsoft\Microsoft SQL Server&quot; /s /v /e /f Edition &gt;&gt; #vAgentConfiguration.agentTempDir#\sqlversion.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="True" />
                </Statement>
              </Then>
            </If>
            <If description="">
              <Condition name="Windows 32 or 64 Bit Check">
                <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
              </Condition>
              <Then>
                <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="REG QUERY &quot;HKLM\SOFTWARE\Microsoft\Microsoft SQL Server&quot; /s /v /e /f Edition &gt;&gt; #vAgentConfiguration.agentTempDir#\sqlversion.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
              </Then>
            </If>
            <Statement name="GetVariable" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\sqlversion.result" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="sqlout" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Get SQL Version: #sqlout#" />
            </Statement>
            <If description="By looking at the version presented in the text file we set the proper version in the custom filed &quot;CF SQL Vesion&quot;.">
              <Condition name="CheckVariable">
                <Parameter xsi:type="StringParameter" name="VariableName" value="#sqlout#" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                <Parameter xsi:type="StringParameter" name="Value" value="Express" />
              </Condition>
              <Then>
                <Statement name="UpdateSystemInfo" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="ColumnName" value="CF SQL Version" />
                  <Parameter xsi:type="StringParameter" name="Value" value="Express Edition" />
                </Statement>
              </Then>
            </If>
            <If description="">
              <Condition name="CheckVariable">
                <Parameter xsi:type="StringParameter" name="VariableName" value="#sqlout#" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                <Parameter xsi:type="StringParameter" name="Value" value="Developer" />
              </Condition>
              <Then>
                <Statement name="UpdateSystemInfo" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="ColumnName" value="CF SQL Version" />
                  <Parameter xsi:type="StringParameter" name="Value" value="Developer Edition" />
                </Statement>
              </Then>
            </If>
            <If description="">
              <Condition name="CheckVariable">
                <Parameter xsi:type="StringParameter" name="VariableName" value="#sqlout#" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                <Parameter xsi:type="StringParameter" name="Value" value="Standard" />
              </Condition>
              <Then>
                <Statement name="UpdateSystemInfo" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="ColumnName" value="CF SQL Version" />
                  <Parameter xsi:type="StringParameter" name="Value" value="Standard Edition" />
                </Statement>
              </Then>
            </If>
            <If description="">
              <Condition name="CheckVariable">
                <Parameter xsi:type="StringParameter" name="VariableName" value="#sqlout#" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                <Parameter xsi:type="StringParameter" name="Value" value="Enterprise" />
              </Condition>
              <Then>
                <Statement name="UpdateSystemInfo" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="ColumnName" value="CF SQL Version" />
                  <Parameter xsi:type="StringParameter" name="Value" value="Enterprise Edition" />
                </Statement>
              </Then>
            </If>
            <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\sqlversion.result" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Get SQL Version: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
            </Statement>
          </Body>
        </Procedure>
      </Folder>
    </Folder>
    <Folder name="Monitoring (2019-05-03)" treePres="3">
      <Folder name="Windows" treePres="3">
        <Procedure name="Monitoring - Windows - Send Event Log Alert With Additional Current User Info" treePres="3" id="728777687" folderId="613342622953162" treeFullPath="Upstream Power Pack 2019-11-28.Monitoring (2019-05-03).Windows">
          <Body description="">
            <Statement description="Procedure description: Get Azure AD specific information from the registry.&#xD;&#xA;Kaseya customer value: Audit if the computer is Azure AD joined or not.&#xD;&#xA;End user value: Track non Azure AD joined computers for compliance.&#xD;&#xA;Dependencies: &quot;UPSTREAM - Event Set - User Experience - Application Crashes/Hang&quot;.&#xD;&#xA;Usage: Associate this with &quot;UPSTREAM - Event Set - User Experience - Application Crashes/Hang&quot; to additionally extract the current user when triggering alarms.&#xD;&#xA;Report options: Agent Alert Log.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------" name="SendEmail" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="To" value="yoursupportemail@here.int" />
              <Parameter xsi:type="StringParameter" name="Subject" value="#subject#" />
              <Parameter xsi:type="MultiLineStringParameter" name="Body" value="This message indicates applicacion Crash or Application hang on a mchine. The following informaion is to be used for ticket creatin and troubleshooting.&#xA;&#xA;Currently logged in user: #vAgentConfiguration.currentUser#&#xA;&#xA;#body#" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Monitoring - Windows - Simulated Event Log Error" treePres="3" id="166680604" folderId="613342622953162" treeFullPath="Upstream Power Pack 2019-11-28.Monitoring (2019-05-03).Windows">
          <Body description="">
            <Statement description="Procedure description: Use this as template for creating customer Event Logs for auditing and tracking.&#xD;&#xA;Kaseya customer value: To be used in combination with automation, auditing and tracking.&#xD;&#xA;End user value: Auditing and tracking.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule from Kaseya Policy Manager or Run Now.&#xD;&#xA;Report options: Windows Event Log. Look for &quot; UPSTREAM: Simulated Event Log For Application Informational&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------" name="Create Event Log Entry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="UPSTREAM: Simulated Event Log For Application Informational" />
              <Parameter xsi:type="EnumParameter" name="Parameter2" value="Information" />
              <Parameter xsi:type="EnumParameter" name="Parameter3" value="Application" />
            </Statement>
          </Body>
        </Procedure>
      </Folder>
    </Folder>
    <Folder name="MS Office And Office 365 Mgmt 2019-05-03" treePres="3">
      <Folder name="Mac" treePres="3">
        <Folder name="MS Office 365 Deployment" treePres="3">
          <Procedure name="Application Deployment - Mac - Office 2016 for Mac (O365) - Deploy Latest" treePres="3" id="1629967232" folderId="966932206352674" treeFullPath="Upstream Power Pack 2019-11-28.MS Office And Office 365 Mgmt 2019-05-03.Mac.MS Office 365 Deployment">
            <Body description="">
              <Statement description="Under development." name="GetURL" continueOnFail="false" osType="MacOS">
                <Parameter xsi:type="StringParameter" name="URL" value="https://go.microsoft.com/fwlink/?LinkId=525133" />
                <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#/Office2016.pkg" />
                <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
              </Statement>
              <Statement name="ExecuteShellCommand" continueOnFail="false" osType="MacOS">
                <Parameter xsi:type="StringParameter" name="Command" value="installer -pkg #vAgentConfiguration.agentTempDir#/Office2016.pkg -target /" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement name="DeleteFile" continueOnFail="false" osType="MacOS">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#/Office2016.pkg" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="MacOS">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Office 2016 deployed or updated to latest version." />
              </Statement>
            </Body>
          </Procedure>
        </Folder>
      </Folder>
      <Folder name="Windows" treePres="3">
        <Procedure name="Application Update - Windows - Update Office 365 - Silent" treePres="3" id="1852485724" folderId="908629069201942" treeFullPath="Upstream Power Pack 2019-11-28.MS Office And Office 365 Mgmt 2019-05-03.Windows">
          <Body description="">
            <If description="Procedure description: Update Office 365 installation silently.&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for Office 365 exploits, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Office 365.&#xD;&#xA;Usage: Schedule Once or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for &quot;UPSTREAM: Office 365 Update:&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="&quot;C:\Program Files\Common Files\Microsoft Shared\ClickToRun\OfficeC2RClient.exe&quot;" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Office 365 Update: Scanning for updates." />
                </Statement>
                <Statement name="ExecuteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="&quot;C:\Program Files\Common Files\Microsoft Shared\ClickToRun\OfficeC2RClient.exe&quot;" />
                  <Parameter xsi:type="StringParameter" name="Arguments" value="/update user updatepromptuser=false forceappshutdown=true displaylevel=truee" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Office 365 Update: OfficeC2RClient.exe does not exist. Aborting." />
                </Statement>
              </Else>
            </If>
          </Body>
        </Procedure>
        <Procedure name="Application Update - Windows - Update Office 365 - User Interaction" treePres="3" id="48038366" folderId="908629069201942" treeFullPath="Upstream Power Pack 2019-11-28.MS Office And Office 365 Mgmt 2019-05-03.Windows">
          <Body description="">
            <If description="Procedure description: Update Office 365 installation with user informational prompts.&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest software.&#xD;&#xA;End user value: Limiting the risks for Office 365 exploits, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Office 365.&#xD;&#xA;Usage: Schedule Once or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for &quot;UPSTREAM: Office 365 Update:&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="&quot;C:\Program Files\Common Files\Microsoft Shared\ClickToRun\OfficeC2RClient.exe&quot;" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Office 365 Update: Scanning for updates." />
                </Statement>
                <Statement name="ExecuteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="&quot;C:\Program Files\Common Files\Microsoft Shared\ClickToRun\OfficeC2RClient.exe&quot;" />
                  <Parameter xsi:type="StringParameter" name="Arguments" value="/update user updatepromptuser=true forceappshutdown=true displaylevel=truee" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Office 365 Update: OfficeC2RClient.exe does not exist. Aborting." />
                </Statement>
              </Else>
            </If>
          </Body>
        </Procedure>
        <Procedure name="Audit - Windows - Check Office 365 License" treePres="3" id="900333797" folderId="908629069201942" treeFullPath="Upstream Power Pack 2019-11-28.MS Office And Office 365 Mgmt 2019-05-03.Windows">
          <Body description="">
            <If description="Procedure description: Get the license status for Office 365 ion local machine.&#xD;&#xA;Kaseya customer value: Audit, monitor and verify that local installation of Office 365 is licensed and activated.&#xD;&#xA;End user value: Validates the user perspective of a slow Internet connection if reported.&#xD;&#xA;Dependencies: Office 365 (Office16) and OSPP.VBS.&#xD;&#xA;Usage: Run Now or recurring Schedule.&#xD;&#xA;Report options: Agent Procedure log. Look for &quot;UPSTREAM: Check Office 365 License:&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-05-21.&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Let's use a VB script included with Office 365 to determine the status of license(s) on the local machine.">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="C:\Program Files (x86)\Microsoft Office\Office16\OSPP.VBS" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="cscript.exe //nologo &quot;C:\Program Files (x86)\Microsoft Office\Office16\OSPP.VBS&quot; /dstatus &gt;&gt;#vAgentConfiguration.agentTempDir#\O365License.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\O365License.result" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="O365License" />
                </Statement>
              </Then>
            </If>
            <If description="">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="C:\Program Files\Microsoft Office\Office16\OSPP.VBS" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="cscript.exe //nologo &quot;C:\Program Files\Microsoft Office\Office16\OSPP.VBS&quot; /dstatus &gt;&gt;#vAgentConfiguration.agentTempDir#\O365License.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\O365License.result" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="O365License" />
                </Statement>
              </Then>
            </If>
            <If description="">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\O365License.result" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                <Parameter xsi:type="StringParameter" name="Value" value="Processing" />
              </Condition>
              <Then>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Check Office 365 License: License file exists and contains data. Let's continue." />
                </Statement>
                <If description="The string &quot;Notifications&quot; indicates something is fishy, but it does not have to be a critical error. You have to evaluate.">
                  <Condition name="TestFile">
                    <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\O365License.result" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                    <Parameter xsi:type="StringParameter" name="Value" value="---NOTIFICATIONS---" />
                  </Condition>
                  <Then>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Check Office 365 License: Whoops. There may be potential problems with Office 365 licensing. Please investigate. Detailed license information: #O365License#" />
                    </Statement>
                    <Statement name="SendAlert" continueOnFail="false" osType="Windows" />
                    <Statement description="You can send a more detailed alert via email to you PSA/Ticketing system. The step below is inactivated as default." name="SendEmail" continueOnFail="false" osType="None">
                      <Parameter xsi:type="StringParameter" name="To" value="yoursupportemail@here.int" />
                      <Parameter xsi:type="StringParameter" name="Subject" value="Problems with Office 365 license activation on #vMachine.machName#." />
                      <Parameter xsi:type="MultiLineStringParameter" name="Body" value="This message indicates something wrong with the local Office 365 license activation. The following informaion is to be used for troubleshooting:&#xA;&#xA;Machine name: #vMachine.machName#.&#xA;Logged in user: #vAgentConfiguration.currentUser#&#xA;&#xA;Office 365 license information: #O365License#&#xA;" />
                    </Statement>
                  </Then>
                  <Else>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Check Office 365 License: License(s) found, activated and looking good!" />
                    </Statement>
                  </Else>
                </If>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Check Office 365 License: License file does not exist. Is Office 365 (Office16) really installed on this machine?" />
                </Statement>
              </Else>
            </If>
            <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\O365License.result" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Remove Application - Windows - Remove Office 2003 - Silent" treePres="3" id="141170532" folderId="908629069201942" treeFullPath="Upstream Power Pack 2019-11-28.MS Office And Office 365 Mgmt 2019-05-03.Windows">
          <Body description="">
            <Statement description="Procedure description: Procedure to completely remove specific Offic product without user interaction.&#xD;&#xA;Kaseya customer value: Removes any manual interaction when uninstalling Microsoft Office.&#xD;&#xA;End user value: No end user interaction needed.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule or Run Now.&#xD;&#xA;Report options: Look for log #vAgentConfiguration.agentTempDir#\OfficeRemoval.log&#xD;&#xA;Maintainer: powerpack@upstream.se Last change: 2018-05-04&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;https://github.com/OfficeDev/Office-IT-Pro-Deployment-Scripts/tree/master/Office-ProPlus-Deployment/Remove-PreviousOfficeInstalls" name="GetURL" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="URL" value="https://github.com/OfficeDev/Office-IT-Pro-Deployment-Scripts/blob/master/Office-ProPlus-Deployment/Remove-PreviousOfficeInstalls/OffScrub03.vbs" />
              <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\OffScrub.vbs" />
              <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Executing cscript #vAgentConfiguration.agentTempDir#\Offscrub.vbs, logs at #vAgentConfiguration.agentTempDir#\OffScrub_Logs" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="cscript #vAgentConfiguration.agentTempDir#\OffScrub.vbs ALL /Q /NoCancel /BYPASS 1 /Log #vAgentConfiguration.agentTempDir#\OfficeRemoval.log" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\OffScrub.vbs" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Ending Office 2003 removal." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Remove Application - Windows - Remove Office 2007 - Silent" treePres="3" id="1330848952" folderId="908629069201942" treeFullPath="Upstream Power Pack 2019-11-28.MS Office And Office 365 Mgmt 2019-05-03.Windows">
          <Body description="">
            <Statement description="Procedure description: Procedure to completely remove specific Offic product without user interaction.&#xD;&#xA;Kaseya customer value: Removes any manual interaction when uninstalling Microsoft Office.&#xD;&#xA;End user value: No end user interaction needed.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule or Run Now.&#xD;&#xA;Report options: Look for log #vAgentConfiguration.agentTempDir#\OfficeRemoval.log&#xD;&#xA;Maintainer: powerpack@upstream.se Last change: 2018-05-04&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;https://github.com/OfficeDev/Office-IT-Pro-Deployment-Scripts/tree/master/Office-ProPlus-Deployment/Remove-PreviousOfficeInstalls" name="GetURL" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="URL" value="https://github.com/OfficeDev/Office-IT-Pro-Deployment-Scripts/blob/master/Office-ProPlus-Deployment/Remove-PreviousOfficeInstalls/OffScrub07.vbs" />
              <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\OffScrub.vbs" />
              <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Executing cscript #vAgentConfiguration.agentTempDir#\Offscrub.vbs, logs at #vAgentConfiguration.agentTempDir#\OffScrub_Logs" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="cscript #vAgentConfiguration.agentTempDir#\OffScrub.vbs ALL /Q /NoCancel /BYPASS 1 /Log #vAgentConfiguration.agentTempDir#\OfficeRemoval.log" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\OffScrub.vbs" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Ending Office 2007 removal." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Remove Application - Windows - Remove Office 2010 - Silent" treePres="3" id="373053734" folderId="908629069201942" treeFullPath="Upstream Power Pack 2019-11-28.MS Office And Office 365 Mgmt 2019-05-03.Windows">
          <Body description="">
            <Statement description="Procedure description: Procedure to completely remove specific Offic product without user interaction.&#xD;&#xA;Kaseya customer value: Removes any manual interaction when uninstalling Microsoft Office.&#xD;&#xA;End user value: No end user interaction needed.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule or Run Now.&#xD;&#xA;Report options: Look for log #vAgentConfiguration.agentTempDir#\OfficeRemoval.log&#xD;&#xA;Maintainer: powerpack@upstream.se Last change: 2018-05-04&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;https://github.com/OfficeDev/Office-IT-Pro-Deployment-Scripts/tree/master/Office-ProPlus-Deployment/Remove-PreviousOfficeInstalls" name="GetURL" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="URL" value="https://github.com/OfficeDev/Office-IT-Pro-Deployment-Scripts/blob/master/Office-ProPlus-Deployment/Remove-PreviousOfficeInstalls/OffScrub10.vbs" />
              <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\OffScrub.vbs" />
              <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Executing cscript #vAgentConfiguration.agentTempDir#\Offscrub.vbs, logs at #vAgentConfiguration.agentTempDir#\OffScrub_Logs" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="cscript #vAgentConfiguration.agentTempDir#\OffScrub.vbs ALL /Q /NoCancel /BYPASS 1 /Log #vAgentConfiguration.agentTempDir#\OfficeRemoval.log" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\OffScrub.vbs" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Ending Office 2010 removal." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Remove Application - Windows - Remove Office 2013 - Silent" treePres="3" id="475039199" folderId="908629069201942" treeFullPath="Upstream Power Pack 2019-11-28.MS Office And Office 365 Mgmt 2019-05-03.Windows">
          <Body description="">
            <Statement description="Procedure description: Procedure to completely remove specific Offic product without user interaction.&#xD;&#xA;Kaseya customer value: Removes any manual interaction when uninstalling Microsoft Office.&#xD;&#xA;End user value: No end user interaction needed.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule or Run Now.&#xD;&#xA;Report options: Look for log #vAgentConfiguration.agentTempDir#\OfficeRemoval.log&#xD;&#xA;Maintainer: powerpack@upstream.se Last change: 2018-05-04&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;https://github.com/OfficeDev/Office-IT-Pro-Deployment-Scripts/tree/master/Office-ProPlus-Deployment/Remove-PreviousOfficeInstalls" name="GetURL" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="URL" value="https://github.com/OfficeDev/Office-IT-Pro-Deployment-Scripts/blob/master/Office-ProPlus-Deployment/Remove-PreviousOfficeInstalls/OffScrub_O15msi.vbs" />
              <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\OffScrub.vbs" />
              <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Executing cscript #vAgentConfiguration.agentTempDir#\Offscrub.vbs, logs at #vAgentConfiguration.agentTempDir#\OffScrub_Logs" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="cscript #vAgentConfiguration.agentTempDir#\OffScrub.vbs ALL /Q /NoCancel /BYPASS 1 /Log #vAgentConfiguration.agentTempDir#\OfficeRemoval.log" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\OffScrub.vbs" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Ending Office 2013 removal." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Remove Application - Windows - Remove Office 2016 - Silent" treePres="3" id="1880169454" folderId="908629069201942" treeFullPath="Upstream Power Pack 2019-11-28.MS Office And Office 365 Mgmt 2019-05-03.Windows">
          <Body description="">
            <Statement description="Procedure description: Procedure to completely remove specific Offic product without user interaction.&#xD;&#xA;Kaseya customer value: Removes any manual interaction when uninstalling Microsoft Office.&#xD;&#xA;End user value: No end user interaction needed.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule or Run Now.&#xD;&#xA;Report options: Look for log #vAgentConfiguration.agentTempDir#\OfficeRemoval.log&#xD;&#xA;Maintainer: powerpack@upstream.se Last change: 2018-05-04&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;https://github.com/OfficeDev/Office-IT-Pro-Deployment-Scripts/tree/master/Office-ProPlus-Deployment/Remove-PreviousOfficeInstalls" name="GetURL" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="URL" value="https://github.com/OfficeDev/Office-IT-Pro-Deployment-Scripts/blob/master/Office-ProPlus-Deployment/Remove-PreviousOfficeInstalls/OffScrub_O16msi.vbs" />
              <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\OffScrub.vbs" />
              <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Executing cscript #vAgentConfiguration.agentTempDir#\Offscrub.vbs, logs at #vAgentConfiguration.agentTempDir#\OffScrub_Logs" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="cscript #vAgentConfiguration.agentTempDir#\OffScrub.vbs ALL /Q /NoCancel /BYPASS 1 /Log #vAgentConfiguration.agentTempDir#\OfficeRemoval.log" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\OffScrub.vbs" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Ending Office 2016 removal." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Remove Application - Windows - Remove Office Click 2 Run - Silent" treePres="3" id="279830912" folderId="908629069201942" treeFullPath="Upstream Power Pack 2019-11-28.MS Office And Office 365 Mgmt 2019-05-03.Windows">
          <Body description="">
            <Statement description="Procedure description: Procedure to completely remove specific Offic product without user interaction.&#xD;&#xA;Kaseya customer value: Removes any manual interaction when uninstalling Microsoft Office.&#xD;&#xA;End user value: No end user interaction needed.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule or Run Now.&#xD;&#xA;Report options: Look for log #vAgentConfiguration.agentTempDir#\OfficeRemoval.log&#xD;&#xA;Maintainer: powerpack@upstream.se Last change: 2018-05-04&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;https://github.com/OfficeDev/Office-IT-Pro-Deployment-Scripts/tree/master/Office-ProPlus-Deployment/Remove-PreviousOfficeInstalls" name="GetURL" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="URL" value="https://github.com/OfficeDev/Office-IT-Pro-Deployment-Scripts/blob/master/Office-ProPlus-Deployment/Remove-PreviousOfficeInstalls/OffScrubc2r.vbs" />
              <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\OffScrub.vbs" />
              <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Executing cscript #vAgentConfiguration.agentTempDir#\Offscrub.vbs, logs at #vAgentConfiguration.agentTempDir#\OffScrub_Logs" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="cscript #vAgentConfiguration.agentTempDir#\OffScrub.vbs ALL /Q /NoCancel /BYPASS 1 /Log #vAgentConfiguration.agentTempDir#\OfficeRemoval.log" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\OffScrub.vbs" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Ending Office Click 2 Run removal." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Repair Application  - Windows - Office 365 Full Online Repair - Silent" treePres="3" id="1512117268" folderId="908629069201942" treeFullPath="Upstream Power Pack 2019-11-28.MS Office And Office 365 Mgmt 2019-05-03.Windows">
          <Body description="">
            <If description="Procedure description: Full online repair for Office 365 installation silently without user interaction.&#xD;&#xA;Kaseya customer value: Enhanced support experience. Quickly troubleshooting Office 365 realted problems.&#xD;&#xA;End user value: Enhanced support experience.&#xD;&#xA;Dependencies: Office 365.&#xD;&#xA;Usage: Schedule Once or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for &quot;UPSTREAM: Office 365 Online Repair&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="c:\program\common files\microsoft shared\ClickToRun\officeclicktorun.exe" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Office 365 Full Online Repair: Click2Run.exe exists. Contiuing ." />
                </Statement>
                <Statement name="ExecuteFile" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Path" value="c:\program\common files\microsoft shared\ClickToRun\officeclicktorun.exe" />
                  <Parameter xsi:type="StringParameter" name="Arguments" value="scenario=Repair forceappshutdown=True repairtype=FullRepair Displaylevel=False" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Office 365 Full Online Repair: Click2Run.exe does not exist. Aborting." />
                </Statement>
              </Else>
            </If>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Office 365 Full Online Repair: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Repair Application  - Windows - Office 365 Quick Repair - Silent" treePres="3" id="1651685516" folderId="908629069201942" treeFullPath="Upstream Power Pack 2019-11-28.MS Office And Office 365 Mgmt 2019-05-03.Windows">
          <Body description="">
            <If description="Procedure description: Quick repair for Office 365 installation silently without user interaction.&#xD;&#xA;Kaseya customer value: Enhanced support experience. Quickly troubleshooting Office 365 realted problems.&#xD;&#xA;End user value: Enhanced support experience.&#xD;&#xA;Dependencies: Office 365.&#xD;&#xA;Usage: Schedule Once or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for &quot;UPSTREAM: Office 365 Quick Repair&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="c:\program\common files\microsoft shared\ClickToRun\officeclicktorun.exe" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Office 365 Quick Repair: Click2Run.exe exists. Contiuing ." />
                </Statement>
                <Statement name="ExecuteFile" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Path" value="c:\program\common files\microsoft shared\ClickToRun\officeclicktorun.exe" />
                  <Parameter xsi:type="StringParameter" name="Arguments" value="scenario=Repair forceappshutdown=True repairtype=QuickRepair Displaylevel=False" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Office 365 Quick Repair: Click2Run.exe does not exist. Aborting." />
                </Statement>
              </Else>
            </If>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Office 365 Quick Repair: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
            </Statement>
          </Body>
        </Procedure>
      </Folder>
    </Folder>
    <Folder name="Other Vendors And Partners 2019-05-30" treePres="3">
      <Folder name="Auvik" treePres="3">
        <Folder name="Windows" treePres="3">
          <Procedure name="Auvik - Windows - Install Collector Service" treePres="3" id="1201187772" folderId="633505762942836" treeFullPath="Upstream Power Pack 2019-11-28.Other Vendors And Partners 2019-05-30.Auvik.Windows">
            <Body description="">
              <Statement description="Procedure description: Use Kaseya to install Auvik network collector. Read more here: https://support.auvik.com/hc/en-us/articles/208219653-How-to-install-the-Auvik-collector-using-the-Windows-service#topic_install&#xD;&#xA;Kaseya customer value: Procedure to speed up the delivery of Auvik network monitorng services.&#xD;&#xA;End user value:&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Run Now.&#xD;&#xA;Report options: Agent Procedure log and &quot;C:\Auvik\install.log&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-05-04&#xD;&#xA;------------------------------------------------------------------------------------------------------------" name="GetVariable" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="Your Auvik User Name (email)" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="auvik_account_name" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="Your Auvik Password" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="auvik_password" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="Teant Name (&quot;tenantname&quot;.my.auvik.com)" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="auvik_tenant_name" />
              </Statement>
              <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="md c:\Auvik" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement description="You can always manage your own files if you want. For convenience we have created a shared link." name="GetURL" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.eu.itglue.com/attachments/1104042948509942" />
                <Parameter xsi:type="StringParameter" name="ResponseFileName" value="c:\Auvik\AuvikService.exe" />
                <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
              </Statement>
              <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="c:\Auvik\AuvikService.exe -install -dir c:\auvik  -user #auvik_account_name# -password #auvik_password# -tenant https://#auvik_tenant_name#.my.auvik.com &gt;&gt;c:\auvik\install.log" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="c:\Auvik\install.log" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="auvik-install-log" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Auvik install log: #auvik-install-log#" />
              </Statement>
            </Body>
          </Procedure>
          <Procedure name="Auvik - Windows - Uninstall Collector Service" treePres="3" id="1230902649" folderId="633505762942836" treeFullPath="Upstream Power Pack 2019-11-28.Other Vendors And Partners 2019-05-30.Auvik.Windows">
            <Body description="">
              <If description="Procedure description: Use Kaseya to uninstall Auvik network collector. Read more here: https://support.auvik.com/hc/en-us/articles/208219653-How-to-install-the-Auvik-collector-using-the-Windows-service#topic_uninstall&#xD;&#xA;Kaseya customer value: Procedure to speed up the removal of Auvik network monitorng services.&#xD;&#xA;End user value:&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Run Now.&#xD;&#xA;Report options: Agent Procedure log and &quot;C:\Auvik\install.log&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-05-04&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
                <Condition name="TestFile">
                  <Parameter xsi:type="StringParameter" name="Path" value="c:\Auvik\AuvikService.exe" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                  <Parameter xsi:type="StringParameter" name="Value" value="" />
                </Condition>
                <Then>
                  <Statement name="GetURL" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/z8ioMnudahsqRh0/download" />
                    <Parameter xsi:type="StringParameter" name="ResponseFileName" value="c:\Auvik\AuvikService.exe" />
                    <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                  </Statement>
                </Then>
              </If>
              <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="c:\Auvik\AuvikService -remove &gt;&gt;c:\auvik\uninstall.log" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <If description="">
                <Condition name="Windows 32 or 64 Bit Check">
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                </Condition>
                <Then>
                  <Statement name="DeleteRegistryKey" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Path" value="HKEY_LOCAL_MACHINE\Software\Auvik\Agent\1.0" />
                  </Statement>
                </Then>
                <Else>
                  <Statement name="DeleteRegistryKey64" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Path" value="HKEY_LOCAL_MACHINE\Software\WOW6432Node\Auvik\Agent\1.0" />
                  </Statement>
                </Else>
              </If>
              <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="c:\auvik\uninstall.log" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="auvik-uninstall-log" />
              </Statement>
              <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="rd c:\auvik /s /q" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Auvik uninstall log: #auvik-uninstall-log#" />
              </Statement>
            </Body>
          </Procedure>
        </Folder>
      </Folder>
      <Folder name="IT Glue" treePres="3">
        <Folder name="Windows" treePres="3">
          <Folder name="API Integrations From Upstream" treePres="3">
            <Procedure name="IT Glue - Windows - Install And Activate IT Glue Module" treePres="3" id="616469873" folderId="917982218283219" treeFullPath="Upstream Power Pack 2019-11-28.Other Vendors And Partners 2019-05-30.IT Glue.Windows.API Integrations From Upstream">
              <Body description="">
                <Statement description="Procedure description: Automates the installation and setup of the IT Glue PowerShell wrapper.&#xD;&#xA;Kaseya customer value: Automated IT Glue wrapper installation.&#xD;&#xA;End user value: Documentation and compliance. Faster support.&#xD;&#xA;Dependencies: Windows Server OS with PowerShell 3 or later.&#xD;&#xA;Usage: Run once.&#xD;&#xA;Report options: Error output to kworking.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2019-09-14.&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Enter the correct static variables below. You will have to create one individual Agent Procedure per customer." name="GetVariable" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="ENTER IT GLUE API KEY HERE" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="ApiKey" />
                </Statement>
                <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="ENTER IT GLUE DATA CENTER HERE" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="DataCenter" />
                </Statement>
                <Statement description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;This section points the the &quot;Install-And-Activate-ITGlue-Module.ps1&quot; stored in you Kaseya VSA Managed Files" name="WriteFile" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\Install-And-Activate-ITGlue-Module.ps1" />
                  <Parameter xsi:type="StringParameter" name="ManagedFile" value="VSASharedFiles\UpstreamPowerPack\Powershell\Install-And-Activate-ITGlue-Module.ps1" />
                  <Parameter xsi:type="BooleanParameter" name="DeleteAfter" value="False" />
                </Statement>
                <Statement description="------------------------------------------------------------------------------------------------------------" name="Execute Powershell Command (64-bit, Run As System)" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                  <Parameter xsi:type="StringParameter" name="Parameter2" value="cd #vAgentConfiguration.agentTempDir#; .\Install-And-Activate-ITGlue-Module.ps1 -ApiKey #ApiKey# -DataCenter #DataCenter# -ReplaceApiKey -ReplaceDataCenter *&gt;&gt;&gt;&gt; #vAgentConfiguration.agentTempDir#\Install_and_update_ITGlue_module.log" />
                  <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\Install-And-Activate-ITGlue-Module.ps1" />
                </Statement>
              </Body>
            </Procedure>
            <Procedure name="IT Glue - Windows - Schedule WEBROOT Integration" treePres="3" id="1876241195" folderId="917982218283219" treeFullPath="Upstream Power Pack 2019-11-28.Other Vendors And Partners 2019-05-30.IT Glue.Windows.API Integrations From Upstream">
              <Body description="">
                <Statement description="Procedure description: Automates the scheduling of the API based WEBROOT IT Glue documentation from Upstream Power Pack.&#xD;&#xA;Kaseya customer value: Automated documentation for customers Webroot license usage.&#xD;&#xA;End user value: Documentation and compliance. Faster support.&#xD;&#xA;Dependencies: Windows Server OS.&#xD;&#xA;Usage: Schedule recurringly once a day.&#xD;&#xA;Report options: Agent Procedure log.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2019-09-14.&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;This section points the the &quot;ITGlue-Webroot-FeedFlexibleAsset.ps1&quot; stored in you Kaseya VSA Managed Files" name="WriteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ITGlue-Webroot-FeedFlexibleAsset.ps1" />
                  <Parameter xsi:type="StringParameter" name="ManagedFile" value="VSASharedFiles\UpstreamPowerPack\Powershell\ITGlue-Webroot-FeedFlexibleAsset.ps1" />
                  <Parameter xsi:type="BooleanParameter" name="DeleteAfter" value="False" />
                </Statement>
                <Statement description="------------------------------------------------------------------------------------------------------------" name="Execute Powershell Command (64-bit, Run As System)" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                  <Parameter xsi:type="StringParameter" name="Parameter2" value="ITGlue-Webroot-FeedFlexibleAsset.ps1 -vCenter &quot;#vCenterServer#&quot;" />
                  <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ITGlue-Webroot-FeedFlexibleAsset.ps1" />
                </Statement>
              </Body>
            </Procedure>
            <Procedure name="IT Glue - Windows - Schedule WMHOST Hyper-V Integration" treePres="3" id="338855477" folderId="917982218283219" treeFullPath="Upstream Power Pack 2019-11-28.Other Vendors And Partners 2019-05-30.IT Glue.Windows.API Integrations From Upstream">
              <Body description="">
                <Statement description="Procedure description: Automates the scheduling of the API based VMHOST IT Glue documentation from Upstream Power Pack.&#xD;&#xA;Kaseya customer value: Automated documentation for Hyper-V enviornments.&#xD;&#xA;End user value: Documentation and compliance. Faster support.&#xD;&#xA;Dependencies: Windows Server OS. Hyper-V enabled.&#xD;&#xA;Usage: Schedule recurringly twice a day.&#xD;&#xA;Report options: Verbose output to kworking.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2019-09-14.&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Enter the correct static variables below. You will have to create one individual Agent Procedure per customer." name="GetVariable" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="ENTER THE IT GLUE ORGANIZATION ID HERE" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="ITGlueOrganizationID" />
                </Statement>
                <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="ENTER THE IT GLUE FLEX ASSET TYPE ID HERE" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="ITGlueFlexibleAssetTypeID" />
                </Statement>
                <Statement name="GetVariable" continueOnFail="false">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="ENTER THE IT GLUE SUBDOMAIN HERE" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="SubDomain" />
                </Statement>
                <Statement description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;This section points the the &quot;ITGlue-VMHost-FeedFlexibleAssetVMware.ps1&quot; stored in you Kaseya VSA Managed Files" name="WriteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ITGlue-VMHost-FeedFlexibleAssetVMware.ps1" />
                  <Parameter xsi:type="StringParameter" name="ManagedFile" value="VSASharedFiles\UpstreamPowerPack\Powershell\ITGlue-VMHost-FeedFlexibleAssetHyperV.ps1" />
                  <Parameter xsi:type="BooleanParameter" name="DeleteAfter" value="False" />
                </Statement>
                <Statement description="------------------------------------------------------------------------------------------------------------" name="Execute Powershell Command (64-bit, Run As System)" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                  <Parameter xsi:type="StringParameter" name="Parameter2" value="cd #vAgentConfiguration.agentTempDir#; .\ITGlue-VMHost-FeedFlexibleAssetVMware.ps1 -vCenter &quot;#vCenterServer#&quot; -Username &quot;#Username#&quot; -Password&quot;#Password#&quot; -OrganizationID &quot;#ITGlueOrganizationID#&quot; -FlexibleAssetTypeID &quot;#ITGlueFlexibleAssetTypeID#&quot; -SubDomain #SubDomain# -Verbose *&gt;&gt;&gt;&gt; #vAgentConfiguration.agentTempDir#\VMHost.log" />
                  <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ITGlue-VMHost-FeedFlexibleAssetVMware.ps1" />
                </Statement>
              </Body>
            </Procedure>
            <Procedure name="IT Glue - Windows - Schedule WMHOST WMware Integration" treePres="3" id="732913232" folderId="917982218283219" treeFullPath="Upstream Power Pack 2019-11-28.Other Vendors And Partners 2019-05-30.IT Glue.Windows.API Integrations From Upstream">
              <Body description="">
                <Statement description="Procedure description: Automates the scheduling of the API based VMHOST IT Glue documentation from Upstream Power Pack.&#xD;&#xA;Kaseya customer value: Automated documentation for VMware enviornments.&#xD;&#xA;End user value: Documentation and compliance. Faster support.&#xD;&#xA;Dependencies: Windows Server OS. VMware vCenter and VMware PowerCLI Installed.&#xD;&#xA;Usage: Schedule recurringly twice a day.&#xD;&#xA;Report options: Verbose output to kworking.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2019-09-14.&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Enter the correct static variables below. You will have to create one individual Agent Procedure per customer." name="GetVariable" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="ENTER VCENTER SERVER IP HERE" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="vCenterServer" />
                </Statement>
                <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="ENTER VCENTER USERNAME HERE" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="Username" />
                </Statement>
                <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="ENTER VCENTER PASSWORD HERE" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="Password" />
                </Statement>
                <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="ENTER THE IT GLUE ORGANIZATION ID HERE" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="ITGlueOrganizationID" />
                </Statement>
                <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="ENTER THE IT GLUE FLEX ASSET TYPE ID HERE" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="ITGlueFlexibleAssetTypeID" />
                </Statement>
                <Statement name="GetVariable" continueOnFail="false">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="ENTER THE IT GLUE SUBDOMAIN HERE" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="SubDomain" />
                </Statement>
                <Statement description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;This section points the the &quot;ITGlue-VMHost-FeedFlexibleAssetVMware.ps1&quot; stored in you Kaseya VSA Managed Files" name="WriteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ITGlue-VMHost-FeedFlexibleAssetVMware.ps1" />
                  <Parameter xsi:type="StringParameter" name="ManagedFile" value="VSASharedFiles\UpstreamPowerPack\Powershell\ITGlue-VMHost-FeedFlexibleAssetVMware.ps1" />
                  <Parameter xsi:type="BooleanParameter" name="DeleteAfter" value="False" />
                </Statement>
                <Statement description="------------------------------------------------------------------------------------------------------------" name="Execute Powershell Command (64-bit, Run As System)" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                  <Parameter xsi:type="StringParameter" name="Parameter2" value="cd #vAgentConfiguration.agentTempDir#; .\ITGlue-VMHost-FeedFlexibleAssetVMware.ps1 -vCenter &quot;#vCenterServer#&quot; -Username &quot;#Username#&quot; -Password&quot;#Password#&quot; -OrganizationID &quot;#ITGlueOrganizationID#&quot; -FlexibleAssetTypeID &quot;#ITGlueFlexibleAssetTypeID#&quot; -SubDomain #SubDomain# -Verbose *&gt;&gt;&gt;&gt; #vAgentConfiguration.agentTempDir#\VMHost.log" />
                  <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ITGlue-VMHost-FeedFlexibleAssetVMware.ps1" />
                </Statement>
              </Body>
            </Procedure>
          </Folder>
          <Folder name="NetworkGlue" treePres="3">
            <Procedure name="IT Glue - Windows - Install NetworkGlue Collector" treePres="3" id="1516845139" folderId="351924095513264" treeFullPath="Upstream Power Pack 2019-11-28.Other Vendors And Partners 2019-05-30.IT Glue.Windows.NetworkGlue">
              <Body description="">
                <Statement description="Procedure description: Use Kaseya to install Auvik network collector. Read more here: https://support.auvik.com/hc/en-us/articles/208219653-How-to-install-the-Auvik-collector-using-the-Windows-service#topic_install&#xD;&#xA;Kaseya customer value: Procedure to speed up the delivery of Auvik network monitorng services.&#xD;&#xA;End user value:&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Run Now.&#xD;&#xA;Report options: Agent Procedure log and &quot;C:\Auvik\install.log&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-05-04&#xD;&#xA;------------------------------------------------------------------------------------------------------------" name="GetVariable" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="NetworkGlue Collector Key" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="CollectorKey" />
                </Statement>
                <Statement description="You can always manage your own files if you want. For convenience we have created a shared link." name="GetURL" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.eu.itglue.com/attachments/1104036827758837" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="c:\Auvik\AuvikService.exe" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="c:\Auvik\AuvikService.exe -install -dir c:\auvik  -user #auvik_account_name# -password #auvik_password# -tenant https://#auvik_tenant_name#.my.auvik.com &gt;&gt;c:\auvik\install.log" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="c:\Auvik\install.log" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="auvik-install-log" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Auvik install log: #auvik-install-log#" />
                </Statement>
              </Body>
            </Procedure>
          </Folder>
          <Procedure name="IT Glue - Windows - Install IT Glue Chrome Plug-In" treePres="3" id="505210561" folderId="564114929439553" treeFullPath="Upstream Power Pack 2019-11-28.Other Vendors And Partners 2019-05-30.IT Glue.Windows">
            <Body description="">
              <If description="Procedure description: Enable the IT Glue Chrome plug-in ona computer.&#xD;&#xA;Kaseya customer value: Speeds up password related tech supprot.&#xD;&#xA;End user value: Speeds up password related tech supprot.&#xD;&#xA;Dependencies: Windows OS, Chrome installed.&#xD;&#xA;Usage: Run Once.&#xD;&#xA;Report options: None.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Settings can be reviewed here: https://developer.chrome.com/extensions/external_extensions#registry">
                <Condition name="Windows 32 or 64 Bit Check">
                  <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                </Condition>
                <Then>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Command" value="reg add &quot;HKLM\SOFTWARE\Wow6432Node\Google\Chrome\Extensions\bfcdaalpeodhimbiipneeaoeogkkminc&quot; /v &quot;update_url&quot; /t REG_SZ /d &quot;https://clients2.google.com/service/update2/crx&quot;" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="User" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="True" />
                  </Statement>
                </Then>
              </If>
              <If description="">
                <Condition name="Windows 32 or 64 Bit Check">
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                </Condition>
                <Then>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Command" value="reg add &quot;HKLM\SOFTWARE\Google\Chrome\Extensions\bfcdaalpeodhimbiipneeaoeogkkminc&quot; /v &quot;update_url&quot; /t REG_SZ /d &quot;https://clients2.google.com/service/update2/crx&quot;" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                </Then>
              </If>
              <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="None">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Install IT Glue Chrome Plug-In: The Agent Procedure hit the last row and will now exit." />
              </Statement>
            </Body>
          </Procedure>
          <Procedure name="IT Glue - Windows - Install MyGlue Chrome Plug-In" treePres="3" id="23039110" folderId="564114929439553" treeFullPath="Upstream Power Pack 2019-11-28.Other Vendors And Partners 2019-05-30.IT Glue.Windows">
            <Body description="">
              <If description="Procedure description: Enable the MyGlue Chrome plug-in on a customers computer.&#xD;&#xA;Kaseya customer value: Speeds up password related tech support.&#xD;&#xA;End user value: Speeds up password related tech support.&#xD;&#xA;Dependencies: Windows OS, Chrome installed.&#xD;&#xA;Usage: Run Once.&#xD;&#xA;Report options: None.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Settings can be reviewed here: https://developer.chrome.com/extensions/external_extensions#registry">
                <Condition name="Windows 32 or 64 Bit Check">
                  <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                </Condition>
                <Then>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Command" value="reg add &quot;HKLM\SOFTWARE\Wow6432Node\Google\Chrome\Extensions\mlhdnjepakdfdaabohjgegnomlgeejep&quot; /v &quot;update_url&quot; /t REG_SZ /d &quot;https://clients2.google.com/service/update2/crx&quot;" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="User" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="True" />
                  </Statement>
                </Then>
              </If>
              <If description="">
                <Condition name="Windows 32 or 64 Bit Check">
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                </Condition>
                <Then>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Command" value="reg add &quot;HKLM\SOFTWARE\Google\Chrome\Extensions\mlhdnjepakdfdaabohjgegnomlgeejep&quot; /v &quot;update_url&quot; /t REG_SZ /d &quot;https://clients2.google.com/service/update2/crx&quot;" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                </Then>
              </If>
              <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Install MyGlue Chrome Plug-In: The Agent Procedure hit the last row and will now exit." />
              </Statement>
            </Body>
          </Procedure>
        </Folder>
      </Folder>
      <Folder name="Webroot" treePres="3">
        <Folder name="Mac" treePres="3">
          <Procedure name="Webroot - Mac OS X - Install Webroot AV Agent" treePres="3" id="760281244" folderId="191888607615553" treeFullPath="Upstream Power Pack 2019-11-28.Other Vendors And Partners 2019-05-30.Webroot.Mac">
            <Body description="&#xA;">
              <Statement description="Procedure description: Silently deploy Webroot AV Agent.&#xD;&#xA;Kaseya customer value: Speeds up deployment of Webroot on a csutomer site.&#xD;&#xA;End user value: Compliance and security benefits.&#xD;&#xA;Dependencies: Mac OS X.&#xD;&#xA;Usage: Run Once. Enter correct Webroot Key Code when prompted.&#xD;&#xA;Report options: Agent Procedure Log. Look for &quot;UPSTREAM: Webroot: Deployed Successfully.&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2017-02-02&#xD;&#xA;------------------------------------------------------------------------------------------------------------" name="GetVariable" continueOnFail="false" osType="MacOS">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="WebrootKeyCode" />
              </Statement>
              <If description="">
                <Condition name="ServiceIsRunning">
                  <Parameter xsi:type="StringParameter" name="ServiceName" value="WSDaemon" />
                </Condition>
                <Then>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="MacOS">
                    <Parameter xsi:type="StringParameter" name="Comment" value="Webroot is already installed" />
                  </Statement>
                </Then>
                <Else>
                  <Statement name="GetURL" continueOnFail="false" osType="MacOS">
                    <Parameter xsi:type="StringParameter" name="URL" value="http://anywhere.webrootcloudav.com/zerol/wsamacsme.dmg" />
                    <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#/wsamacsme.dmg" />
                    <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="MacOS">
                    <Parameter xsi:type="StringParameter" name="Command" value="sudo hdiutil attach -nobrowse #vAgentConfiguration.agentTempDir#/wsamacsme.dmg" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="MacOS">
                    <Parameter xsi:type="StringParameter" name="Command" value="cp -R /Volumes/Webroot\ SecureAnywhere/Webroot\ SecureAnywhere.app /Applications/" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="MacOS">
                    <Parameter xsi:type="StringParameter" name="Command" value="diskutil list | grep Webroot\ SecureAnywhere | diskutil unmount /Volumes/Webroot\ SecureAnywhere" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                  <Statement name="DeleteFile" continueOnFail="false" osType="MacOS">
                    <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#/wsamacsme.dmg" />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="MacOS">
                    <Parameter xsi:type="StringParameter" name="Command" value="sudo /Applications/Webroot\ SecureAnywhere.app/Contents/MacOS/Webroot\ SecureAnywhere install -language=en -keycode=#WebrootKeyCode# -silent" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                  <If description="">
                    <Condition name="ServiceIsRunning">
                      <Parameter xsi:type="StringParameter" name="ServiceName" value="WSDaemon" />
                    </Condition>
                    <Then>
                      <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                        <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Webroot: Deployed Successfully." />
                      </Statement>
                    </Then>
                    <Else>
                      <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                        <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Webroot: Deployment failed." />
                      </Statement>
                    </Else>
                  </If>
                </Else>
              </If>
            </Body>
          </Procedure>
        </Folder>
        <Folder name="Windows" treePres="3">
          <Procedure name="Webroot - Windows - Install Webroot AV Agent" treePres="3" id="1315711023" folderId="487067705992175" treeFullPath="Upstream Power Pack 2019-11-28.Other Vendors And Partners 2019-05-30.Webroot.Windows">
            <Body description="Deploy WebRoot AntiVirus to Windows Machine.">
              <Statement description="Procedure description: Silently deploy Webroot AV Agent.&#xD;&#xA;Kaseya customer value: Speeds up deployment of Webroot on a csutomer site.&#xD;&#xA;End user value: Compliance and security benefits.&#xD;&#xA;Dependencies: Windos OS.&#xD;&#xA;Usage: Run Once. Enter correct Webroot Key Code when prompted.&#xD;&#xA;Report options: Agent Procedure Log. Look for &quot;UPSTREAM: Webroot: Deployed Successfully.&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2019-05-03&#xD;&#xA;------------------------------------------------------------------------------------------------------------" name="GetVariable" continueOnFail="false">
                <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
                <Parameter xsi:type="StringParameter" name="SourceContent" value="Key Code" />
                <Parameter xsi:type="StringParameter" name="VariableName" value="keycode" />
              </Statement>
              <If description="Check if Webroot is already on the machine">
                <Condition name="ServiceIsRunning">
                  <Parameter xsi:type="StringParameter" name="ServiceName" value="WRSVC" />
                </Condition>
                <Then>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Comment" value="Webroot is already installed on #vAgentConfiguration.machName#" />
                  </Statement>
                </Then>
                <Else>
                  <Statement description="Deploy Webroot" name="GetURL" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="URL" value="http://anywhere.webrootcloudav.com/zerol/wsasme.msi" />
                    <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\wsasme.msi" />
                    <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Command" value="msiexec /i #vAgentConfiguration.agentTempDir#\wsasme.msi GUILIC=#keycode# CMDLINE=SME,quiet /qn /l*v install.log" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                  <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\wsasme.msi" />
                  </Statement>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="Comment" value="Webroot was successfully installed on #vAgentConfiguration.machName#" />
                  </Statement>
                </Else>
              </If>
            </Body>
          </Procedure>
          <Procedure name="Webroot - Windows - Uninstall Webroot AV Agent" treePres="3" id="2142373061" folderId="487067705992175" treeFullPath="Upstream Power Pack 2019-11-28.Other Vendors And Partners 2019-05-30.Webroot.Windows">
            <Body description="Deploy WebRoot AntiVirus to Windows Machine.">
              <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="&quot;C:\Program Files (x86)\Webroot\WRSA.exe&quot; -uninstall" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
            </Body>
          </Procedure>
        </Folder>
      </Folder>
    </Folder>
    <Folder name="Patch Management" treePres="3">
      <Folder name="Linux" treePres="3">
        <Procedure name="Patch Mgmnt - Linux - Debian Fork - Patch And Upgrade System" treePres="3" id="1948884458" folderId="968678606054129" treeFullPath="Upstream Power Pack 2019-11-28.Patch Management.Linux">
          <Body description="Description: Upgrades Debian based Linux systems with the latest software and patches.&#xA;&#xA;Kaseya customer value: Procedure to secure and enhance Linux servers and clients with the latest software and functions.&#xA;&#xA;End user value: Procedure to secure and enhance Linux servers and clients with the latest software and functions.&#xA;&#xA;Dependencies: Debian based Linux systems.&#xA;&#xA;Usage: Run at any given time.&#xA;&#xA;Report options: Procedure Log, content: &quot;Linux patch result:&quot;&#xA;&#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot;. No support included.">
            <Statement description="Let's update the list of Linux packages. This will not patch or upgrade the system." name="ExecuteShellCommand" continueOnFail="false" osType="Linux">
              <Parameter xsi:type="StringParameter" name="Command" value="apt-get update" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Linux">
              <Parameter xsi:type="StringParameter" name="Comment" value="Linux package list updated." />
            </Statement>
            <Statement description="Let's upgrade the Linux system with the latest packages. All available packages will get updated." name="ExecuteShellCommand" continueOnFail="false" osType="Linux">
              <Parameter xsi:type="StringParameter" name="Command" value="apt-get upgrade -y -q &gt;&gt; #vAgentConfiguration.agentTempDir#/linux-upgrade.result" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false" osType="Linux">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#/linux-upgrade.result" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="linux-upgrade" />
            </Statement>
            <Statement name="DeleteFile" continueOnFail="false" osType="Linux">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#/linux-upgrade.result" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Linux">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Linux patch result: #linux-upgrade#" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Patch Mgmnt - Linux - Debian Fork - Update The Package List" treePres="3" id="991089240" folderId="968678606054129" treeFullPath="Upstream Power Pack 2019-11-28.Patch Management.Linux">
          <Body description="Description: Updates the application list for Debian based Linux systems.&#xA;&#xA;Kaseya customer value: Procedure to secure and enhance Linux servers and clients with the latest software and functions.&#xA;&#xA;End user value: Procedure to secure and enhance Linux servers and clients with the latest software and functions.&#xA;&#xA;Dependencies: Debian based Linux systems.&#xA;&#xA;Usage: Run at any given time.&#xA;&#xA;Report options: Procedure Log, content: &quot;Linux package list updated.&quot;&#xA;&#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot;. No support included.">
            <Statement description="Let's update the list of Linux packages. This will not patch or upgrade the system." name="ExecuteShellCommand" continueOnFail="false" osType="Linux">
              <Parameter xsi:type="StringParameter" name="Command" value="apt-get update" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Linux">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Linux package list updated." />
            </Statement>
          </Body>
        </Procedure>
      </Folder>
      <Folder name="Mac" treePres="3">
        <Procedure name="Patch Mgmnt - Mac OS X - Download Patches" treePres="3" id="295607746" folderId="286377529700462" treeFullPath="Upstream Power Pack 2019-11-28.Patch Management.Mac">
          <Body description="Description: Downloads the available software updates locally for Mac OS X.&#xA;&#xA;Kaseya customer value: Procedure to secure and enhance Mac OS X servers and clients with the latest software and functions.&#xA;&#xA;End user value: Procedure to secure and enhance Mac OS X servers and clients with the latest software and functions.&#xA;&#xA;Dependencies: Mac OS X.&#xA;&#xA;Usage: Run at any given time.&#xA;&#xA;Report options: Procedure Log, content: &quot;Mac OS X software download:&quot;&#xA;&#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot;. No support included.">
            <Statement description="softwareupdate -l &gt;&gt; #agentpath#\softwarelist.txt" name="ExecuteShellCommand" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="Command" value="softwareupdate -d &gt;&gt; #vAgentConfiguration.agentTempDir#/osx-update-download.result" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement description="Create a named procedure variable and assign a value retrieved from the managed machine by the agent." name="GetVariable" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#/osx-update-download.result" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="osx-update-download" />
            </Statement>
            <Statement description="Delete the specified file - full path to the filename required." name="DeleteFile" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#/osx-update-download.result" />
            </Statement>
            <Statement description="Write an Entry into the Procedure Log" name="WriteScriptLogEntry" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="Comment" value="Mac OS X software download: #osx-update-download#" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Patch Mgmnt - Mac OS X - List Missing Patches" treePres="3" id="363391576" folderId="286377529700462" treeFullPath="Upstream Power Pack 2019-11-28.Patch Management.Mac">
          <Body description="Description: List the available software updates for Mac OS X.&#xA;&#xA;Kaseya customer value: Procedure to secure and enhance Mac OS X servers and clients with the latest software and functions.&#xA;&#xA;End user value: Procedure to secure and enhance Mac OS X servers and clients with the latest software and functions.&#xA;&#xA;Dependencies: Mac OS X.&#xA;&#xA;Usage: Run at any given time.&#xA;&#xA;Report options: Procedure Log, content: &quot;Mac OS X software list:&quot;&#xA;&#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot;. No support included.">
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="Command" value="softwareupdate -l &gt;&gt; #vAgentConfiguration.agentTempDir#/osx-update-update-list.result" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement description="Pause this procedure for N seconds to give a previous action time to complete." name="PauseScript" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="IntegerParameter" name="Seconds" value="60" />
            </Statement>
            <Statement description="Create a named procedure variable and assign a value retrieved from the managed machine by the agent." name="GetVariable" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#/osx-update-update-list.result" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="osx-update-list" />
            </Statement>
            <Statement description="Delete the specified file - full path to the filename required." name="DeleteFile" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#/osx-update-update-list.result" />
            </Statement>
            <Statement description="Write an Entry into the Procedure Log" name="WriteScriptLogEntry" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="Comment" value="Mac OS X software list: #osx-update-list#" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Patch Mgmnt - Mac OS X - Prevent OSX Catalina Upgrade" treePres="3" id="1056310447" folderId="286377529700462" treeFullPath="Upstream Power Pack 2019-11-28.Patch Management.Mac">
          <Body description="Description: Downloads the available software updates locally for Mac OS X.&#xA;&#xA;Kaseya customer value: Procedure to secure and enhance Mac OS X servers and clients with the latest software and functions.&#xA;&#xA;End user value: Procedure to secure and enhance Mac OS X servers and clients with the latest software and functions.&#xA;&#xA;Dependencies: Mac OS X.&#xA;&#xA;Usage: Run at any given time.&#xA;&#xA;Report options: Procedure Log, content: &quot;Mac OS X software download:&quot;&#xA;&#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot;. No support included.">
            <Statement description="Prevent uppgrade to Mac OS X Catalina." name="ExecuteShellCommand" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="Command" value="sudo softwareupdate --ignore &quot;macOS Catalina&quot; #vAgentConfiguration.agentTempDir#/osx-catalina.result" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#/osx-catalina.result" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="osx-catalina" />
            </Statement>
            <Statement name="DeleteFile" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#/osx-catalina.result" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Prevent OSX Catalina Upgrade: #osx-catalina#" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Patch Mgmnt - Mac OS X - Turn Off Automatic Updates" treePres="3" id="1365799115" folderId="286377529700462" treeFullPath="Upstream Power Pack 2019-11-28.Patch Management.Mac">
          <Body description="Description: Turn off the automatic software updates for Mac OS X.&#xA;&#xA;Kaseya customer value: Procedure reduce unwanted support issues regarding updating Mac OS X.&#xA;&#xA;End user value: Procedure to reduce unwanted update spalsh screen Mac OS X.&#xA;&#xA;Dependencies: Mac OS X.&#xA;&#xA;Usage: Run at any given time.&#xA;&#xA;Report options: Procedure Log, content: &quot;Mac OS X automatic update:&quot;&#xA;&#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot;. No support included.">
            <Statement description="softwareupdate -l &gt;&gt; #agentpath#\softwarelist.txt" name="ExecuteShellCommand" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="Command" value="softwareupdate --schedule off &gt;&gt; #vAgentConfiguration.agentTempDir#/automatic-update-check.result" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement description="Create a named procedure variable and assign a value retrieved from the managed machine by the agent." name="GetVariable" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#/automatic-update-check.result" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="automatic-update-check" />
            </Statement>
            <Statement description="Delete the specified file - full path to the filename required." name="DeleteFile" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#/automatic-update-check.result" />
            </Statement>
            <Statement description="Write an Entry into the Procedure Log" name="WriteScriptLogEntry" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="Comment" value="Mac OS X automatic update: #automatic-update-check#" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Patch Mgmnt - Mac OS X - Turn On Automatic Updates" treePres="3" id="408003897" folderId="286377529700462" treeFullPath="Upstream Power Pack 2019-11-28.Patch Management.Mac">
          <Body description="Description: Turn on the automatic software updates for Mac OS X.&#xA;&#xA;Kaseya customer value: Procedure reset the automatic software update to on in Mac OS X.&#xA;&#xA;End user value: Procedure to let the end user control automatic software update to on in Mac OS X.&#xA;&#xA;Dependencies: Mac OS X.&#xA;&#xA;Usage: Run at any given time.&#xA;&#xA;Report options: Procedure Log, content: &quot;Mac OS X automatic update:&quot;&#xA;&#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot;. No support included.">
            <Statement description="softwareupdate -l &gt;&gt; #agentpath#\softwarelist.txt" name="ExecuteShellCommand" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="Command" value="softwareupdate --schedule on &gt;&gt; #vAgentConfiguration.agentTempDir#/automatic-update-check.result" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement description="Create a named procedure variable and assign a value retrieved from the managed machine by the agent." name="GetVariable" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#/automatic-update-check.result" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="automatic-update-check" />
            </Statement>
            <Statement description="Delete the specified file - full path to the filename required." name="DeleteFile" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#/automatic-update-check.result" />
            </Statement>
            <Statement description="Write an Entry into the Procedure Log" name="WriteScriptLogEntry" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="Comment" value="#automatic-update-check#" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Patch Mgmnt - Mac OS X - Update System" treePres="3" id="176120695" folderId="286377529700462" treeFullPath="Upstream Power Pack 2019-11-28.Patch Management.Mac">
          <Body description="Description: Updates the available software updates for Mac OS X. No forced reboot, but reboot should be part of the process.&#xA;&#xA;Kaseya customer value: Procedure to secure and enhance Mac OS X servers and clients with the latest software and functions.&#xA;&#xA;End user value: Procedure to secure and enhance Mac OS X servers and clients with the latest software and functions.&#xA;&#xA;Dependencies: Mac OS X.&#xA;&#xA;Usage: Run at any given time.&#xA;&#xA;Report options: Procedure Log, content: &quot;Mac OS X software update:&quot;&#xA;&#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot;. No support included.">
            <Statement description="softwareupdate -l &gt;&gt; #agentpath#\softwarelist.txt" name="ExecuteShellCommand" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="Command" value="softwareupdate -i -a &gt;&gt; #vAgentConfiguration.agentTempDir#/osx-update.result" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement description="Create a named procedure variable and assign a value retrieved from the managed machine by the agent." name="GetVariable" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#/osx-update.result" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="osx-update" />
            </Statement>
            <Statement description="Delete the specified file - full path to the filename required." name="DeleteFile" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#/osx-update.result" />
            </Statement>
            <Statement description="Write an Entry into the Procedure Log" name="WriteScriptLogEntry" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="Comment" value="Mac OS X software update: #osx-update#" />
            </Statement>
          </Body>
        </Procedure>
      </Folder>
      <Folder name="Windows" treePres="3">
        <Procedure name="Patch Mgmt -  Windows - Reset Windows Update Cache" treePres="3" id="1745483393" folderId="492310663961018" treeFullPath="Upstream Power Pack 2019-11-28.Patch Management.Windows">
          <Body description="">
            <Statement description="Procedure description: To resolve lingering patch install issues from other RMM/management suites.&#xD;&#xA;Kaseya customer value: Procedure to on-board customers and ensure Patch Mgmnt will be properly automated after moving to Kaseya from another RMM/Mgmnt tool.&#xD;&#xA;End user value: Systems get patched.&#xD;&#xA;Dependencies: Windows OS. Reboot required.&#xD;&#xA;Usage: Schedule Once or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for before, during and after update deployment statements.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2017-06-20&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;First we stop four services to allow several files and settings to be reset" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="net stop bits" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="PauseScript" continueOnFail="false">
              <Parameter xsi:type="IntegerParameter" name="Seconds" value="15" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="net stop wuauserv" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="PauseScript" continueOnFail="false">
              <Parameter xsi:type="IntegerParameter" name="Seconds" value="15" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="net stop appidsvc" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="PauseScript" continueOnFail="false">
              <Parameter xsi:type="IntegerParameter" name="Seconds" value="15" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="net stop cryptsvc" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="PauseScript" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="IntegerParameter" name="Seconds" value="15" />
            </Statement>
            <Statement description="Delete the qmgr*.dat files" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="Del &quot;%ALLUSERSPROFILE%\Application Data\Microsoft\Network\Downloader\qmgr*.dat&quot;" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement description="Rename the softare distribution folders backup copies" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="Ren %systemroot%\SoftwareDistribution SoftwareDistribution.bak" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="Ren %systemroot%\system32\catroot2 catroot2.bak" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="PauseScript" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="IntegerParameter" name="Seconds" value="5" />
            </Statement>
            <Statement description="Reset the BITS service and the Windows Update service to the default security descriptor." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="sc.exe sdset bits D:(A;;CCLCSWRPWPDTLOCRRC;;;SY)(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;BA)(A;;CCLCSWLOCRRC;;;AU)(A;;CCLCSWRPWPDTLOCRRC;;;PU)" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="sc.exe sdset wuauserv D:(A;;CCLCSWRPWPDTLOCRRC;;;SY)(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;BA)(A;;CCLCSWLOCRRC;;;AU)(A;;CCLCSWRPWPDTLOCRRC;;;PU)" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="PauseScript" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="IntegerParameter" name="Seconds" value="5" />
            </Statement>
            <Statement description="Reregister the BITS files and the Windows Update files" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s atl.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s urlmon.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s mshtml.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s shdocvw.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s browseui.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s jscript.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s vbscript.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s scrrun.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s msxml.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s msxml3.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s msxml6.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s actxprxy.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s softpub.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s wintrust.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s dssenh.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s rsaenh.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s gpkcsp.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s sccbase.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s slbcsp.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s cryptdlg.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s oleaut32.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s ole32.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s shell32.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s initpki.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s wuapi.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s wuaueng.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s wuaueng1.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s wucltui.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s wups.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s wups2.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s wuweb.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s qmgr.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s qmgrprxy.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s wucltux.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s muweb.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="regsvr32 /s wuwebv.dll" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement description="Reset Winsock - requires restart" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="netsh winsock reset" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement description="Reset Proxy" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="netsh winhttp reset proxy" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement description="Restart the stopped services" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="net start bits" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="PauseScript" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="IntegerParameter" name="Seconds" value="10" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="net start wuauserv" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="PauseScript" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="IntegerParameter" name="Seconds" value="10" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="net start appidsvc" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="PauseScript" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="IntegerParameter" name="Seconds" value="10" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="net start cryptsvc" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Reset Windows Update Cache: Update has been reset, please restart this machine." />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Reset Windows Update Cache: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Patch Mgmt -  Windows - Update Nvidia GPU driver" treePres="3" id="829467290" folderId="492310663961018" treeFullPath="Upstream Power Pack 2019-11-28.Patch Management.Windows">
          <Body description="">
            <Statement description="Procedure description: Install latest nvidia driver with Chocolatey. Read more here: https://chocolatey.org&#xD;&#xA;Kaseya customer value: Procedure to secure clients with the latest nvidia driver.&#xD;&#xA;End user value: Limiting the risks for exploits, ransomware, phishing attacks, downtime and possible data loss.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule Once, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log and &quot;C:\ProgramData\chocolatey\logs\chocolatey.log&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2019-08-19.&#xD;&#xA;------------------------------------------------------------------------------------------------------------" name="Execute Powershell" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-WmiObject Win32_VideoController | Select -Expand Caption" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
            </Statement>
            <If description="">
              <Condition name="CheckVariable">
                <Parameter xsi:type="StringParameter" name="VariableName" value="#global:psresult#" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                <Parameter xsi:type="StringParameter" name="Value" value="nvidia" />
              </Condition>
              <Then>
                <If description="">
                  <Condition name="TestFile">
                    <Parameter xsi:type="StringParameter" name="Path" value="c:\ProgramData\Chocolatey\choco.exe" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                    <Parameter xsi:type="StringParameter" name="Value" value="" />
                  </Condition>
                  <Then>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocloatey deployment framework missing on this machine. Deploying." />
                    </Statement>
                    <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Command" value="@&quot;%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe&quot; -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command &quot;iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))&quot; &amp;&amp; SET &quot;PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin&quot;" />
                      <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                      <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                    </Statement>
                  </Then>
                </If>
                <Statement description="This pararmeter defines what application to deploy. Full package list here: https://chocolatey.org/packages" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="c:\ProgramData\Chocolatey\choco.exe install nvidia-display-driver --limit-output --no-progress -y &gt;&gt;#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="chocolatey-deploy" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\chocolatey-deploy.log" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Chocolatey Deployment Log: #chocolatey-deploy#" />
                </Statement>
              </Then>
            </If>
          </Body>
        </Procedure>
        <Procedure name="Patch Mgmt - Windows - Patch Windows From Command Line" treePres="3" id="2052241325" folderId="492310663961018" treeFullPath="Upstream Power Pack 2019-11-28.Patch Management.Windows">
          <Body description="">
            <If description="Procedure description: Execute instant Windows update from the commandline. Respect to Flemming Varmer at ABC-Deploy.com for this awesome freeware!&#xD;&#xA;Kaseya customer value: Kaseyas automatic patch schedule may take some time to finish. When in a support call or for quick patch results, run this procedure instead.&#xD;&#xA;End user value: Get the latest Windows patches now, not later.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Recurring schedule or Run Now. Run Patch Scan afterwords.&#xD;&#xA;Report options: Agent Procedure log.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\abc-update\abc-update.exe" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="GetURL" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="URL" value="http://abc-deploy.com/Files/ABC-Update.zip" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\ABC-Update.zip" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement name="Unzip file" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Parameter1" value="#vAgentConfiguration.agentTempDir#\ABC-Update.zip" />
                  <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\abc-update" />
                  <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ABC-Update\ABC-Update EULA.pdf" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ABC-Update\ABC-Update GUI.exe" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ABC-Update\ABC-Update GUI.exe.config" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ABC-Update\abc-update.exe.config" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ABC-Update\ABC-Update.pdf" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ABC-Update.zip" />
                </Statement>
              </Then>
            </If>
            <Statement description="The ABC Update commands can be views here: http://abc-deploy.com/files/abc" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="#vAgentConfiguration.agentTempDir#\abc-update\abc-update.exe /A:Install /R:N /Log:#vAgentConfiguration.agentTempDir#\WinUpdate-Commandline.log" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\WinUpdate-Commandline.log" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="WinUpdate_Commandline_results" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Patch From Command Line: #WinUpdate_Commandline_results#" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Patch From Command Line: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Patch Mgmt - Windows - Update Drivers From Command Line" treePres="3" id="136650890" folderId="492310663961018" treeFullPath="Upstream Power Pack 2019-11-28.Patch Management.Windows">
          <Body description="">
            <If description="Procedure description: Download and install available Windows drivers from Windows Update. This Kaseya can not do within the Patch engine.&#xD;&#xA;Kaseya customer value: Ensure all drivers are up to date for best system performance and troubleshooting.&#xD;&#xA;End user value: Best possible system performance.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Recurring schedule or Run Now.&#xD;&#xA;Report options: Agent Procedure log.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Let's start by downloading a freeware tool. Respect to Flemming Varmer at http://abc-deploy.com/abc-update/History">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\abc-update\abc-update.exe" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="GetURL" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="URL" value="http://abc-deploy.com/Files/ABC-Update.zip" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\ABC-Update.zip" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement name="Unzip file" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Parameter1" value="#vAgentConfiguration.agentTempDir#\ABC-Update.zip" />
                  <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\abc-update" />
                  <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
                </Statement>
                <Statement description="We only need the ABC-Update.exe, so let's clean up the rest." name="DeleteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ABC-Update\ABC-Update EULA.pdf" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ABC-Update\ABC-Update GUI.exe" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ABC-Update\ABC-Update GUI.exe.config" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ABC-Update\abc-update.exe.config" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ABC-Update\ABC-Update.pdf" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ABC-Update.zip" />
                </Statement>
              </Then>
            </If>
            <Statement description="The ABC Update commands can be views here: http://abc-deploy.com/files/abc-update.pdf" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="#vAgentConfiguration.agentTempDir#\abc-update\abc-update.exe /A:Install /Input:Exclude /T:Driver /R:N /Log:#vAgentConfiguration.agentTempDir#\WinDriversUpdate-Commandline.log" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\WinDriversUpdate-Commandline.log" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="WinDriversUpdate_Commandline_results" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: #WinDriversUpdate_Commandline_results#" />
            </Statement>
          </Body>
        </Procedure>
      </Folder>
    </Folder>
    <Folder name="Security &amp; 0-Day Fixes" treePres="3">
      <Folder name="Windows" treePres="3">
        <Procedure name="Security - Windows 2003 - KB4500331" treePres="3" id="1822258383" folderId="896765661238117" treeFullPath="Upstream Power Pack 2019-11-28.Security &amp; 0-Day Fixes.Windows">
          <Body description="">
            <If description="Procedure description: Patch critical flaw in Windows 2003 Server. https://support.microsoft.com/en-us/help/4500331/windows-update-kb4500331&#xD;&#xA;Kaseya customer value: Best effort securing old and unsupported Windows 2003 Servers.&#xD;&#xA;End user value: Limit the risk for ransomware and womable attacks.&#xD;&#xA;Dependencies: English Windows 2003 Server 32&amp;64Bit Service Pack 2.&#xD;&#xA;Usage: Schedule Once or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for &quot;UPSTREAM: Security:&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
              <Condition name="Windows 32 or 64 Bit Check">
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              </Condition>
              <Then>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="2003">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Security: US English 2003 Server 64Bit detected. Downloading correct patch." />
                </Statement>
                <Statement name="GetURL" continueOnFail="false" osType="2003">
                  <Parameter xsi:type="StringParameter" name="URL" value="http://download.windowsupdate.com/d/csa/csa/secu/2019/04/windowsserver2003-kb4500331-x64-custom-enu_e2fd240c402134839cfa22227b11a5ec80ddafcf.exe" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\kb4500331.exe" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="2003">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Security: US English 2003 Server 32Bit detected. Downloading correct patch." />
                </Statement>
                <Statement name="GetURL" continueOnFail="false" osType="2003">
                  <Parameter xsi:type="StringParameter" name="URL" value="http://download.windowsupdate.com/d/csa/csa/secu/2019/04/windowsserver2003-kb4500331-x86-custom-enu_62d416d73d413b590df86224b32a52e56087d4c0.exe" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\kb4500331.exe" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
              </Else>
            </If>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="2003">
              <Parameter xsi:type="StringParameter" name="Command" value="#vAgentConfiguration.agentTempDir#\kb4500331.exe /quiet /norestart" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="2003">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Security: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Security - Windows XP - KB4500331" treePres="3" id="536721994" folderId="896765661238117" treeFullPath="Upstream Power Pack 2019-11-28.Security &amp; 0-Day Fixes.Windows">
          <Body description="">
            <If description="Procedure description: Patch critical May 2019 flaw in Windows XP. https://support.microsoft.com/en-us/help/4500331/windows-update-kb4500331&#xD;&#xA;Kaseya customer value: Best effort securing old and unsupported Windows XP.&#xD;&#xA;End user value: Limit the risk for ransomware and wormable attacks.&#xD;&#xA;Dependencies: Windows XP Service Pack 3 32Bit.&#xD;&#xA;Usage: Schedule Once or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for &quot;UPSTREAM: Security:&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
              <Condition name="CheckRegistryValue">
                <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Nls\Language\InstallLanguage" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="GetVariable" continueOnFail="false" osType="XP">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="RegistryValue" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Nls\Language\InstallLanguage" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="OSlanguage" />
                </Statement>
                <If description="">
                  <Condition name="CheckVariable">
                    <Parameter xsi:type="StringParameter" name="VariableName" value="#OSlanguage#" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                    <Parameter xsi:type="StringParameter" name="Value" value="" />
                  </Condition>
                  <Then>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="XP">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Security: Your OS language Hex code is: #OSlanguage#. You may have to add your language." />
                    </Statement>
                    <If description="Let's get the OS language in order to dowload the correct KB from https://support.microsoft.com/en-us/help/4500331/windows-update-kb4500331&#xD;&#xA;https://www.autoitscript.com/autoit3/docs/appendix/OSLangCodes.htm">
                      <Condition name="CheckVariable">
                        <Parameter xsi:type="StringParameter" name="VariableName" value="#OSlanguage#" />
                        <Parameter xsi:type="EnumParameter" name="Condition" value="Equals" />
                        <Parameter xsi:type="StringParameter" name="Value" value="0409" />
                      </Condition>
                      <Then>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="XP">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Security: US English XP detected. Downloading correct patch." />
                        </Statement>
                        <Statement name="GetURL" continueOnFail="false" osType="XP">
                          <Parameter xsi:type="StringParameter" name="URL" value="http://download.windowsupdate.com/c/csa/csa/secu/2019/04/windowsxp-kb4500331-x86-custom-enu_d7206aca53552fececf72a3dee93eb2da0421188.exe" />
                          <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\kb4500331.exe" />
                          <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                        </Statement>
                      </Then>
                    </If>
                    <If description="">
                      <Condition name="CheckVariable">
                        <Parameter xsi:type="StringParameter" name="VariableName" value="#OSlanguage#" />
                        <Parameter xsi:type="EnumParameter" name="Condition" value="Equals" />
                        <Parameter xsi:type="StringParameter" name="Value" value="0809" />
                      </Condition>
                      <Then>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="XP">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Security: US English XP detected. Downloading correct patch." />
                        </Statement>
                        <Statement name="GetURL" continueOnFail="false" osType="XP">
                          <Parameter xsi:type="StringParameter" name="URL" value="http://download.windowsupdate.com/c/csa/csa/secu/2019/04/windowsxp-kb4500331-x86-custom-enu_d7206aca53552fececf72a3dee93eb2da0421188.exe" />
                          <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\kb4500331.exe" />
                          <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                        </Statement>
                      </Then>
                    </If>
                    <If description="">
                      <Condition name="CheckVariable">
                        <Parameter xsi:type="StringParameter" name="VariableName" value="#OSlanguage#" />
                        <Parameter xsi:type="EnumParameter" name="Condition" value="Equals" />
                        <Parameter xsi:type="StringParameter" name="Value" value="0414" />
                      </Condition>
                      <Then>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Security: Norwegian XP detected. Downloading correct patch." />
                        </Statement>
                        <Statement name="GetURL" continueOnFail="false" osType="XP">
                          <Parameter xsi:type="StringParameter" name="URL" value="http://download.windowsupdate.com/c/csa/csa/secu/2019/04/windowsxp-kb4500331-x86-custom-nor_8277bb602cbc5d6c12574f8b33d8ed6c9be57d7c.exe" />
                          <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\kb4500331.exe" />
                          <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                        </Statement>
                      </Then>
                    </If>
                    <If description="">
                      <Condition name="CheckVariable">
                        <Parameter xsi:type="StringParameter" name="VariableName" value="#OSlanguage#" />
                        <Parameter xsi:type="EnumParameter" name="Condition" value="Equals" />
                        <Parameter xsi:type="StringParameter" name="Value" value="0406" />
                      </Condition>
                      <Then>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="XP">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Security: Danish XP detected. Downloading correct patch." />
                        </Statement>
                        <Statement name="GetURL" continueOnFail="false" osType="XP">
                          <Parameter xsi:type="StringParameter" name="URL" value="http://download.windowsupdate.com/c/csa/csa/secu/2019/04/windowsxp-kb4500331-x86-custom-dan_09ccc4e6d0a986b25d8e6f4f890cec2d82c82666.exe" />
                          <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\kb4500331.exe" />
                          <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                        </Statement>
                      </Then>
                    </If>
                    <If description="">
                      <Condition name="CheckVariable">
                        <Parameter xsi:type="StringParameter" name="VariableName" value="#OSlanguage#" />
                        <Parameter xsi:type="EnumParameter" name="Condition" value="Equals" />
                        <Parameter xsi:type="StringParameter" name="Value" value="040B" />
                      </Condition>
                      <Then>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Security: Finnish XP detected. Downloading correct patch." />
                        </Statement>
                        <Statement name="GetURL" continueOnFail="false" osType="XP">
                          <Parameter xsi:type="StringParameter" name="URL" value="http://download.windowsupdate.com/c/csa/csa/secu/2019/04/windowsxp-kb4500331-x86-custom-fin_e1438d3937915442d38cd039888153830d567fff.exe" />
                          <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\kb4500331.exe" />
                          <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                        </Statement>
                      </Then>
                    </If>
                    <If description="">
                      <Condition name="CheckVariable">
                        <Parameter xsi:type="StringParameter" name="VariableName" value="#OSlanguage#" />
                        <Parameter xsi:type="EnumParameter" name="Condition" value="Equals" />
                        <Parameter xsi:type="StringParameter" name="Value" value="041D" />
                      </Condition>
                      <Then>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="XP">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Security: Swedish XP detected. Downloading correct patch." />
                        </Statement>
                        <Statement name="GetURL" continueOnFail="false" osType="XP">
                          <Parameter xsi:type="StringParameter" name="URL" value="http://download.windowsupdate.com/c/csa/csa/secu/2019/04/windowsxp-kb4500331-x86-custom-sve_2b1388f5df4e0f4f6a94774acb84fd183d5145ce.exe" />
                          <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\kb4500331.exe" />
                          <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                        </Statement>
                      </Then>
                    </If>
                    <Statement description="Execute the KB update." name="ExecuteShellCommand" continueOnFail="false" osType="XP">
                      <Parameter xsi:type="StringParameter" name="Command" value="#vAgentConfiguration.agentTempDir#\kb4500331.exe /quiet /norestart" />
                      <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                      <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                    </Statement>
                  </Then>
                  <Else>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="XP">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Security: Swedish XP detected. Downloading correct patch." />
                    </Statement>
                  </Else>
                </If>
              </Then>
            </If>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Security: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
            </Statement>
          </Body>
        </Procedure>
      </Folder>
    </Folder>
    <Folder name="System Management 2018-10-26" treePres="3">
      <Folder name="Linux" treePres="3" />
      <Folder name="Mac" treePres="3">
        <Procedure name="Sys Mgmt - Mac OS X - Install Powershell" treePres="3" id="1131345057" folderId="613713833975472" treeFullPath="Upstream Power Pack 2019-11-28.System Management 2018-10-26.Mac">
          <Body description="">
            <Statement description="Procedure description: Enable the IT Glue Chrome plug-in ona computer.&#xD;&#xA;Kaseya customer value: Speeds up password related tech supprot.&#xD;&#xA;End user value: Speeds up password related tech supprot.&#xD;&#xA;Dependencies: Windows OS, Chrome installed.&#xD;&#xA;Usage: Run Once.&#xD;&#xA;Report options: None.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------" name="ExecuteShellCommand" continueOnFail="false" osType="MacOS">
              <Parameter xsi:type="StringParameter" name="Command" value="brew cask install powershell" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="None">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Install IT Glue Chrome Plug-In: The Agent Procedure hit the last row and will now exit." />
            </Statement>
          </Body>
        </Procedure>
      </Folder>
      <Folder name="Windows" treePres="3">
        <Folder name="Power And Sleep Settings" treePres="3">
          <Procedure name="Sys Mgmnt - Windows - Power And Sleep Settings - Disable Hibernation" treePres="3" id="525374452" folderId="652774846811208" treeFullPath="Upstream Power Pack 2019-11-28.System Management 2018-10-26.Windows.Power And Sleep Settings">
            <Body description="Description: Run any shell command directly from the Kaseya Agent Procedure with interactive input. Great for testing ping or doing any command line related test on one or more machines at once.&#xA;&#xA;Dependencies: Windows OS.&#xA;&#xA;Kaseya customer value: A quick way to test or do changes on one or many machines at once without having to enter LiveConnect or remote control.&#xA;&#xA;End user value: A quick way to get help with various tasks in system management.&#xA;&#xA;Usage: Execute the procedure at any time.&#xA;&#xA;Report Parameters: Procedure Log, &quot;Results from shell command:&quot;&#xA; &#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot; No support included.">
              <Statement description="Procedure description: Disable hibernation in Energy Settings.&#xD;&#xA;Kaseya customer value: Procedure to disable hibernation.&#xD;&#xA;End user value: Remove unwantend hibernation settings on any machine.&#xD;&#xA;Dependencies: Windows OS. Edit the version string to latest for compliance check. Follow the important notes.&#xD;&#xA;Usage: Schedule or Run Now.&#xD;&#xA;Report options: Agent Procedure log.&#xD;&#xA;Maintainer: powerpack@upstream.se Last change: 2017-09-28&#xD;&#xA;------------------------------------------------------------------------------------------------------------" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="powercfg -h off" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Power And Sleep: Hibernation is now disabled." />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Power And Sleep: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
              </Statement>
            </Body>
          </Procedure>
          <Procedure name="Sys Mgmnt - Windows - Power And Sleep Settings - Energy Policy Example" treePres="3" id="1715052872" folderId="652774846811208" treeFullPath="Upstream Power Pack 2019-11-28.System Management 2018-10-26.Windows.Power And Sleep Settings">
            <Body description="">
              <Statement description="Procedure description: Enable and enforce a Energy Settings policy&#xD;&#xA;Kaseya customer value: Procedure to enforce a Enery Setting policy.&#xD;&#xA;End user value: Enamble a Energy Settign policy for &quot;green IT&quot;.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule or Run Now.&#xD;&#xA;Report options: Agent Procedure log.&#xD;&#xA;Maintainer: powerpack@upstream.se Last change: 2017-09-28&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Read more here: https://technet.microsoft.com/en-us/library/cc748940(v=ws.10).aspx&#xD;&#xA;Screen will turn off after 5 minutes when on battery power" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="powercfg -change -monitor-timeout-dc 5" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement description="Screen will turn off after 5 minutes when plugged in." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="powercfg -change -monitor-timeout-ac 10" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement description="Computer will sleep after 10 minutes when on battery power." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="powercfg -change -standby-timeout-dc 15" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement description="Computer will sleep after 30 minutes when plugged in." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="powercfg -change -standby-timeout-ac 30" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement description="Computer will hibernate after 20 minutes when on battery power." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="powercfg -change -hibernate -timeout-dc 20" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement description="Computer will hibernate after 60 minutes when plugged in." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="powercfg -change -hibernate -timeout-ac 60" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Power And Sleep: Energy Policy Example applied." />
              </Statement>
              <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Power And Sleep: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
              </Statement>
            </Body>
          </Procedure>
        </Folder>
        <Folder name="Windows TS Specific" treePres="3">
          <Procedure name="Sys Mgmnt - Windows - Set TS Servers To EXECUTE Mode" treePres="3" id="1752574293" folderId="622746293536734" treeFullPath="Upstream Power Pack 2019-11-28.System Management 2018-10-26.Windows.Windows TS Specific">
            <Body description="">
              <If description="">
                <Condition name="ServiceIsRunning">
                  <Parameter xsi:type="StringParameter" name="ServiceName" value="TermService" />
                </Condition>
                <Then>
                  <Statement description="Execute shell command and verify on Windows 2003 Servers with running TermServices." name="ExecuteShellCommand" continueOnFail="false" osType="2003">
                    <Parameter xsi:type="StringParameter" name="Command" value="change user /execute" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="2003">
                    <Parameter xsi:type="StringParameter" name="Command" value="change user /query &gt;&gt;#vAgentConfiguration.agentTempDir#\tsinstallmode.result" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                  <Statement name="GetVariable" continueOnFail="false" osType="2003">
                    <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                    <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\tsinstallmode.result" />
                    <Parameter xsi:type="StringParameter" name="VariableName" value="tsinstallmode" />
                  </Statement>
                  <Statement name="DeleteFile" continueOnFail="false" osType="2003">
                    <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\tsinstallmode.result" />
                  </Statement>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="2003">
                    <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: TS InstallMode Swtiched to: #tsinstallmode#" />
                  </Statement>
                  <Statement description="Execute shell command and verify on Windows 2008 Servers with running TermServices." name="ExecuteShellCommand" continueOnFail="false" osType="2008">
                    <Parameter xsi:type="StringParameter" name="Command" value="change user /execute" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="2008">
                    <Parameter xsi:type="StringParameter" name="Command" value="change user /query &gt;&gt;#vAgentConfiguration.agentTempDir#\tsinstallmode.result" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                  <Statement name="GetVariable" continueOnFail="false" osType="2008">
                    <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                    <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\tsinstallmode.result" />
                    <Parameter xsi:type="StringParameter" name="VariableName" value="tsinstallmode" />
                  </Statement>
                  <Statement name="DeleteFile" continueOnFail="false" osType="2008">
                    <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\tsinstallmode.result" />
                  </Statement>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="2008">
                    <Parameter xsi:type="StringParameter" name="Comment" value="UPSTERAM: TS InstallMode Swtiched to: #tsinstallmode#" />
                  </Statement>
                  <Statement description="Execute shell command and verify on Windows 2012 Servers with running TermServices." name="ExecuteShellCommand" continueOnFail="false" osType="2012">
                    <Parameter xsi:type="StringParameter" name="Command" value="change user /execute" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="2012">
                    <Parameter xsi:type="StringParameter" name="Command" value="change user /query &gt;&gt;#vAgentConfiguration.agentTempDir#\tsinstallmode.result" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                  <Statement name="GetVariable" continueOnFail="false" osType="2012">
                    <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                    <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\tsinstallmode.result" />
                    <Parameter xsi:type="StringParameter" name="VariableName" value="tsinstallmode" />
                  </Statement>
                  <Statement name="DeleteFile" continueOnFail="false" osType="2012">
                    <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\tsinstallmode.result" />
                  </Statement>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="2012">
                    <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: TS InstallMode Swtiched to: #tsinstallmode#" />
                  </Statement>
                </Then>
              </If>
            </Body>
          </Procedure>
          <Procedure name="Sys Mgmnt - Windows - Set TS Servers To INSTALL Mode" treePres="3" id="1820358123" folderId="622746293536734" treeFullPath="Upstream Power Pack 2019-11-28.System Management 2018-10-26.Windows.Windows TS Specific">
            <Body description="">
              <If description="">
                <Condition name="ServiceIsRunning">
                  <Parameter xsi:type="StringParameter" name="ServiceName" value="TermService" />
                </Condition>
                <Then>
                  <Statement description="Execute shell command and verify on Windows 2003 Servers with running TermServices." name="ExecuteShellCommand" continueOnFail="false" osType="2003">
                    <Parameter xsi:type="StringParameter" name="Command" value="change user /install" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="2003">
                    <Parameter xsi:type="StringParameter" name="Command" value="change user /query &gt;&gt;#vAgentConfiguration.agentTempDir#\tsinstallmode.result" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                  <Statement name="GetVariable" continueOnFail="false" osType="2003">
                    <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                    <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\tsinstallmode.result" />
                    <Parameter xsi:type="StringParameter" name="VariableName" value="tsinstallmode" />
                  </Statement>
                  <Statement name="DeleteFile" continueOnFail="false" osType="2003">
                    <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\tsinstallmode.result" />
                  </Statement>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="2003">
                    <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: TS InstallMode Swtiched to: #tsinstallmode#" />
                  </Statement>
                  <Statement description="Execute shell command and verify on Windows 2008 Servers with running TermServices." name="ExecuteShellCommand" continueOnFail="false" osType="2008">
                    <Parameter xsi:type="StringParameter" name="Command" value="change user /install" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="2008">
                    <Parameter xsi:type="StringParameter" name="Command" value="change user /query &gt;&gt;#vAgentConfiguration.agentTempDir#\tsinstallmode.result" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                  <Statement name="GetVariable" continueOnFail="false" osType="2008">
                    <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                    <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\tsinstallmode.result" />
                    <Parameter xsi:type="StringParameter" name="VariableName" value="tsinstallmode" />
                  </Statement>
                  <Statement name="DeleteFile" continueOnFail="false" osType="2008">
                    <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\tsinstallmode.result" />
                  </Statement>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="2008">
                    <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: TS InstallMode Swtiched to: #tsinstallmode#" />
                  </Statement>
                  <Statement description="Execute shell command and verify on Windows 2012 Servers with running TermServices." name="ExecuteShellCommand" continueOnFail="false" osType="2012">
                    <Parameter xsi:type="StringParameter" name="Command" value="change user /install" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                  <Statement name="ExecuteShellCommand" continueOnFail="false" osType="2012">
                    <Parameter xsi:type="StringParameter" name="Command" value="change user /query &gt;&gt;#vAgentConfiguration.agentTempDir#\tsinstallmode.result" />
                    <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                    <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                  </Statement>
                  <Statement name="GetVariable" continueOnFail="false" osType="2012">
                    <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                    <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\tsinstallmode.result" />
                    <Parameter xsi:type="StringParameter" name="VariableName" value="tsinstallmode" />
                  </Statement>
                  <Statement name="DeleteFile" continueOnFail="false" osType="2012">
                    <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\tsinstallmode.result" />
                  </Statement>
                  <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="2012">
                    <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: TS InstallMode Swtiched to: #tsinstallmode#" />
                  </Statement>
                </Then>
              </If>
            </Body>
          </Procedure>
          <Procedure name="Sys Mgmnt - Windows - Set TS Shadowing For KRC ON" treePres="3" id="862562905" folderId="622746293536734" treeFullPath="Upstream Power Pack 2019-11-28.System Management 2018-10-26.Windows.Windows TS Specific">
            <Body description="">
              <Statement description="This procedure will set Terminal Service servers to allow shadowing of session with Kaseya remote control&#xD;&#xA;Kaseya Customer Value: removes the need to change this manually&#xD;&#xA;End User Value: Allows support of TS sessions via kaseya&#xD;&#xA;Dependencies: WIndows OS&#xD;&#xA;Report options: Agent Procedure log. Look for &quot;UPSTREAM: TS Shadow Enabled&quot;&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;---------------------------------------------------------------------------------------------------------------------------&#xD;&#xA;registry 32 bit - 2 is the correct setting 1 and 0 both will not work with kaseya" name="SetRegistryValue" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services\shadow" />
                <Parameter xsi:type="StringParameter" name="Value" value="2" />
                <Parameter xsi:type="EnumParameter" name="DataType" value="Integer" />
              </Statement>
              <Statement description="registry 64 bit - 2 is the correct setting 1 and 0 both will not work with kaseya" name="SetRegistryValue64" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services\shadow" />
                <Parameter xsi:type="StringParameter" name="Value" value="2" />
                <Parameter xsi:type="EnumParameter" name="DataType" value="Integer" />
              </Statement>
            </Body>
          </Procedure>
        </Folder>
        <Procedure name="Sys Mgmt - Windows - Add SQL Tcp Port 1433 Allowed Firewall Rule Example" treePres="3" id="1558212512" folderId="642622796326234" treeFullPath="Upstream Power Pack 2019-11-28.System Management 2018-10-26.Windows">
          <Body description="">
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Command" value="netsh advfirewall firewall add rule name = SQLPort dir = in protocol = tcp action = allow localport = 1433 remoteip = localsubnet profile = DOMAIN" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Sys Mgmt - Windows - Change Computer Name (Prompt For Name)" treePres="3" id="1448470563" folderId="642622796326234" treeFullPath="Upstream Power Pack 2019-11-28.System Management 2018-10-26.Windows">
          <Body description="">
            <Statement description="Create a named procedure variable and assign a value retrieved from the managed machine by the agent." name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="oldname" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="oldname" />
            </Statement>
            <Statement description="Create a named procedure variable and assign a value retrieved from the managed machine by the agent." name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="newname" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="newname" />
            </Statement>
            <Statement description="Execute the given command as if it were typed in at a command prompt." name="ExecuteShellCommand" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Command" value="wmic computersystem where name=&quot;#oldname#&quot; call rename name=&quot;#newname#&quot;" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="User" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement description="Write an Entry into the Procedure Log" name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="Compter name is changed to #newname#" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Sys Mgmt - Windows - Create 3GB Dummy File Example" treePres="3" id="1625996342" folderId="642622796326234" treeFullPath="Upstream Power Pack 2019-11-28.System Management 2018-10-26.Windows">
          <Body description="">
            <Statement description="Procedure description: Creates a 3GB dummy file in the Kworking folder.&#xD;&#xA;Kaseya customer value: Forced Low Disk Alerting and simulations.&#xD;&#xA;End user value: None.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for before, during and after update or deployment statements.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="fsutil file createnew #vAgentConfiguration.agentTempDir#\dummy.file 3221225472" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <If description="">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value=" #vAgentConfiguration.agentTempDir#\dummy.file" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="FileSize" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\dummy.file " />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="#FileSize#" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Dummy file: File created. Size: ##FileSize##" />
                </Statement>
              </Then>
            </If>
          </Body>
        </Procedure>
        <Procedure name="Sys Mgmt - Windows - Create Windows Application Event Example" treePres="3" id="480930243" folderId="642622796326234" treeFullPath="Upstream Power Pack 2019-11-28.System Management 2018-10-26.Windows">
          <Body description="">
            <Statement name="Create Event Log Entry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="This is a test" />
              <Parameter xsi:type="EnumParameter" name="Parameter2" value="Information" />
              <Parameter xsi:type="EnumParameter" name="Parameter3" value="Application" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Sys Mgmt - Windows - Delete User Profiles Older Than 90 Days" treePres="3" id="900084326" folderId="642622796326234" treeFullPath="Upstream Power Pack 2019-11-28.System Management 2018-10-26.Windows">
          <Body description="">
            <If description="Procedure description: Procedure to do a standardized disk cleanup.&#xD;&#xA;Kaseya customer value: Speed up the troubleshooting an maintenance work.&#xD;&#xA;End user value: Assure that the system is healthy.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Report options: Agent Procedure log. Look for &quot;UPSTREAM: Disk Cleanup:&quot; statements.&#xD;&#xA;Report options: Agent Procedure log.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2017-09-28&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;First we need a command line tool. Download if missing.">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\delprof2.exe" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="GetURL" continueOnFail="false" osType="None">
                  <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/aUGgf7A4Vyv5dgR/download" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\sfk.exe" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
              </Then>
            </If>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="#vAgentConfiguration.agentTempDir#\sfk space c: &gt;&gt;#vAgentConfiguration.agentTempDir#\free_disk_on_c.result" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\free_disk_on_c.result" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="free_disk_on_c" />
            </Statement>
            <Statement description="Start documenting the progress in disk_cleanup.log" name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="UPSTREAM: Beginning Disk Cleanup. This log will show all the cleanup steps by order of execution." />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="Disk available before Disk Cleanup on C: #free_disk_on_c#" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Command" value="type &quot;Status before Disk Cleanup: #free_disk_on_c#&quot;&quot; &gt;&gt;&gt;&gt;#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="User" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Disk Cleanup: Status before Disk Cleanup: #free_disk_on_c#" />
            </Statement>
            <Statement description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 2: Disk cleanup&#xD;&#xA;Delete user profiles older than 90 days." name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Disk Cleanup: Remove User Profiels older not used within 90 days." />
            </Statement>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="--------------------------------------------------------------" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="UPSTREAM: UPSTREAM: Disk Cleanup: Remove older User Profiels not used within 90 days.cleanup steps by order of execution." />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="true" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="#vAgentConfiguration.agentTempDir#\delprof2 /u /d:90 /ed:Admin*,Default,Public* /l &gt;&gt;&gt;&gt;#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement description="Remove superseded and unused system files from an online image with DISM command." name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Disk Cleanup: Attempting to a DISM cleanup. Continuing with other Disk Cleanup tasks." />
            </Statement>
            <If description="">
              <Condition name="Windows 32 or 64 Bit Check">
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              </Condition>
              <Then>
                <Statement name="ExecuteShellCommand" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="dism /online /Cleanup-Image /StartComponentCleanup &gt;&gt;&gt;&gt;#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="True" />
                </Statement>
              </Then>
              <Else>
                <Statement name="ExecuteShellCommand" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="dism /online /Cleanup-Image /StartComponentCleanup &gt;&gt;&gt;&gt;#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
              </Else>
            </If>
            <Statement description="Remove C:\Windows\Temp files." name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="--------------------------------------------------------------" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="UPSTREAM: Remove files and sub-folders in &quot;C:\Windows\Temp\&quot;" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="true" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="del C:\Windows\Temp\* /Q /S &gt;&gt;&gt;&gt;#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement description="Remove CBS logs in C:\Windows\Logs\CBS." name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="--------------------------------------------------------------" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="UPSTREAM: Remove files in &quot;C:\Windows\Logs\CBS\&quot;." />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="true" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="del C:\Windows\Logs\CBS\* /Q /S &gt;&gt;&gt;&gt;#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement description="PatchCache clean up." name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="--------------------------------------------------------------" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="UPSTREAM: Remove files in &quot;c:\Windows\installer\$PatchCache$\&quot;." />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <If description="">
              <Condition name="ServiceIsRunning">
                <Parameter xsi:type="StringParameter" name="ServiceName" value="msiserver" />
              </Condition>
              <Then>
                <Statement name="Stop Windows Service" continueOnFail="true">
                  <Parameter xsi:type="StringParameter" name="Parameter1" value="msiserver" />
                </Statement>
                <Statement name="PauseScript" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="IntegerParameter" name="Seconds" value="15" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Disk Cleanup: Attempting to remove &quot;%WINDIR%\Installer\$PatchCache$*&quot;. Continuing with other Disk Cleanup tasks." />
                </Statement>
                <Statement name="ExecuteShellCommand" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="del %WINDIR%\Installer\$PatchCache$\* /q /s &gt;&gt;&gt;&gt;#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement name="Start Windows Service" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Parameter1" value="msiserver" />
                  <Parameter xsi:type="StringParameter" name="Parameter2" value="False" />
                </Statement>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Disk Cleanup: Attempting to clean &quot;%WINDIR%\Installer\$PatchCache$&quot;. Continuing with other Disk Cleanup tasks." />
                </Statement>
                <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="del %WINDIR%\Installer\$PatchCache$\* /q /s &gt;&gt;&gt;&gt;#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
              </Else>
            </If>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="--------------------------------------------------------------" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="UPSTREAM: Remove files in  &quot;c:\Windows\SoftwareDistribution\Download\&quot;" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <If description="">
              <Condition name="ServiceIsRunning">
                <Parameter xsi:type="StringParameter" name="ServiceName" value="wuauserv" />
              </Condition>
              <Then>
                <Statement name="Stop Windows Service" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Parameter1" value="wuauserv" />
                </Statement>
                <Statement name="PauseScript" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="IntegerParameter" name="Seconds" value="15" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Disk Cleanup: Attempting to remove &quot;%WINDIR%\SoftwareDistribution\Download&quot;. Continuing with other Disk Cleanup tasks." />
                </Statement>
                <Statement name="ExecuteShellCommand" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="del %WINDIR%\SoftwareDistribution\Download\* /q /s &gt;&gt;&gt;&gt;#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement name="Start Windows Service" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Parameter1" value="wuauserv" />
                  <Parameter xsi:type="StringParameter" name="Parameter2" value="False" />
                </Statement>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Disk Cleanup: Attempting to remove &quot;%WINDIR%\SoftwareDistribution\Download&quot;. Continuing with other Disk Cleanup tasks." />
                </Statement>
                <Statement name="ExecuteShellCommand" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="del %WINDIR%\SoftwareDistribution\Download\* /q /s &gt;&gt;&gt;&gt;#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
              </Else>
            </If>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="--------------------------------------------------------------" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="UPSTREAM: Remove files in  &quot;c:\dell&quot;" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="del c:\dell\* /q /s" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="rd c:\dell /S /Q" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="--------------------------------------------------------------" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="UPSTREAM: Remove files in  &quot;c:\lenovo&quot;" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="del c:\lenovo\* /q /s" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="rd c:\lenovo /S /Q" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="--------------------------------------------------------------" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="UPSTREAM: Remove files in  &quot;c:\hp&quot;" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="del c:\hp\* /q /s" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="rd c:\hp /S /Q" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 3: Post Disk Cleanup check for available disk space." name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="--------------------------------------------------------------" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="UPSTREAM: Disk Cleanup complete." />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="Disk available before Disk Cleanup on C: #free_disk_on_c#" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="#vAgentConfiguration.agentTempDir#\sfk space c: &gt;&gt;#vAgentConfiguration.agentTempDir#\free_disk_on_c.result" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\free_disk_on_c.result" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="free_disk_on_c" />
            </Statement>
            <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\free_disk_on_c.result" />
            </Statement>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="Disk available after Disk Cleanup on C: #free_disk_on_c#" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Disk Cleanup: Status after Disk Cleanup: #free_disk_on_c#" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Disk Cleanup: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Sys Mgmt - Windows - Disable RDP" treePres="3" id="1783004814" folderId="642622796326234" treeFullPath="Upstream Power Pack 2019-11-28.System Management 2018-10-26.Windows">
          <Body description="Description: This procedure will disable RDP for remote control.&#xA;&#xA;Kaseya customer value: This procedure disables RDP in the registry and disables RDP connections from Kaseya Live Connect. Security, support and control.&#xA;&#xA;End user value: Security, support and control.&#xA;&#xA;Dependencies: Windows.&#xA;&#xA;Usage: Execute the procedure at any time.&#xA;&#xA;Report options: Procedure Log, content: &quot;RDP is now disabled.&quot;&#xA; &#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot; No support included.">
            <Statement description="fDenyTSConnections set to 0 will enable RDP." name="SetRegistryValue" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\fDenyTSConnections" />
              <Parameter xsi:type="StringParameter" name="Value" value="0" />
              <Parameter xsi:type="EnumParameter" name="DataType" value="Integer" />
            </Statement>
            <Statement description="Writes a procedure log entry." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: RDP is now disabled." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Sys Mgmt - Windows - Disk Cleanup (With Extensive Logging)" treePres="3" id="825209596" folderId="642622796326234" treeFullPath="Upstream Power Pack 2019-11-28.System Management 2018-10-26.Windows">
          <Body description="">
            <If description="Procedure description: Procedure to do a standardized disk cleanup.&#xD;&#xA;Kaseya customer value: Speed up the troubleshooting and maintenance work.&#xD;&#xA;End user value: Assure that the system is healthy.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Report options: Agent Procedure log. Look for &quot;UPSTREAM: Disk Cleanup:&quot; statements.&#xD;&#xA;Report options: Agent Procedure log.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2018-11-21&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;If previous Disk Cleanup log file exists, let's remove it.">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
                </Statement>
              </Then>
            </If>
            <If description="First we need some command line tools. Download if missing.">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\sfk.exe" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="GetURL" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/aUGgf7A4Vyv5dgR/download" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\sfk.exe" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
              </Then>
            </If>
            <If description="">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\delprof2.exe" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="GetURL" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/dwE362qzhvPQxsw/download" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\delprof2.exe" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
              </Then>
            </If>
            <Statement description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 1: Check for available disk space." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="#vAgentConfiguration.agentTempDir#\sfk space c: &gt;&gt;#vAgentConfiguration.agentTempDir#\free_disk_on_c.result" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\free_disk_on_c.result" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="free_disk_on_c" />
            </Statement>
            <Statement description="Start documenting the progress in disk_cleanup.log" name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="UPSTREAM: Beginning Disk Cleanup. This log will show all the cleanup steps by order of execution." />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="Disk available before Disk Cleanup on C: #free_disk_on_c#" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Command" value="type &quot;Status before Disk Cleanup: #free_disk_on_c#&quot;&quot; &gt;&gt;&gt;&gt;#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="User" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Disk Cleanup: Status before Disk Cleanup: #free_disk_on_c#" />
            </Statement>
            <Statement description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 2: Disk cleanup&#xD;&#xA;Delete user profiles older than 90 days." name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Disk Cleanup: Remove User Profiles older not used within 90 days." />
            </Statement>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="--------------------------------------------------------------" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="UPSTREAM: Disk Cleanup: Remove older User Profiels not used within 90 days." />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="true" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="#vAgentConfiguration.agentTempDir#\delprof2 /u /d:90 /ed:Admin*,Default,Public* &gt;&gt;&gt;&gt;#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Disk Cleanup: Attempting to a DISM cleanup. Continuing with other Disk Cleanup tasks." />
            </Statement>
            <Statement description="Remove superseded and unused system files from an online image with DISM command." name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Disk Cleanup: Remove superseded and unused system files from an online image with DISM command." />
            </Statement>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="--------------------------------------------------------------" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <If description="">
              <Condition name="Windows 32 or 64 Bit Check">
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              </Condition>
              <Then>
                <Statement name="ExecuteShellCommand" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="dism /online /Cleanup-Image /StartComponentCleanup &gt;&gt;#vAgentConfiguration.agentTempDir#\dism_cleanup.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="True" />
                </Statement>
              </Then>
              <Else>
                <Statement name="ExecuteShellCommand" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="dism /online /Cleanup-Image /StartComponentCleanup &gt;&gt;#vAgentConfiguration.agentTempDir#\dism_cleanup.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
              </Else>
            </If>
            <If description="">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\dism_cleanup.result" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="successfully" />
              </Condition>
              <Then>
                <If description="">
                  <Condition name="TestFile">
                    <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\dism_cleanup.result" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                    <Parameter xsi:type="StringParameter" name="Value" value="successfully" />
                  </Condition>
                  <Then>
                    <Statement name="Write text to file" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="UPSTREAM: DISM cleanup success. Continuing with other cleanup tasks." />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Disk Cleanup: DISM cleanup success. Continuing with other Disk Cleanup tasks." />
                    </Statement>
                  </Then>
                  <Else>
                    <Statement name="Write text to file" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="UPSTREAM: DISM cleanup failed. Continuing with other cleanup tasks." />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Disk Cleanup: DISM cleanup failed. Continuing with other Disk Cleanup tasks." />
                    </Statement>
                  </Else>
                </If>
              </Then>
            </If>
            <Statement description="Remove C:\Windows\Temp files." name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="--------------------------------------------------------------" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="UPSTREAM: Remove files and sub-folders in &quot;C:\Windows\Temp\&quot;" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="true" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="del C:\Windows\Temp\* /Q /S &gt;&gt;&gt;&gt;#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement description="Remove CBS logs in C:\Windows\Logs\CBS." name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="--------------------------------------------------------------" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="UPSTREAM: Remove files in &quot;C:\Windows\Logs\CBS\&quot;." />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="true" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="del C:\Windows\Logs\CBS\* /Q /S &gt;&gt;&gt;&gt;#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement description="PatchCache clean up." name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="--------------------------------------------------------------" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="UPSTREAM: Remove files in &quot;c:\Windows\installer\$PatchCache$\&quot;." />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <If description="">
              <Condition name="ServiceIsRunning">
                <Parameter xsi:type="StringParameter" name="ServiceName" value="msiserver" />
              </Condition>
              <Then>
                <Statement name="Stop Windows Service" continueOnFail="true">
                  <Parameter xsi:type="StringParameter" name="Parameter1" value="msiserver" />
                </Statement>
                <Statement name="PauseScript" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="IntegerParameter" name="Seconds" value="15" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Disk Cleanup: Attempting to remove &quot;%WINDIR%\Installer\$PatchCache$*&quot;. Continuing with other Disk Cleanup tasks." />
                </Statement>
                <Statement name="ExecuteShellCommand" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="del %WINDIR%\Installer\$PatchCache$\* /q /s &gt;&gt;&gt;&gt;#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement name="Start Windows Service" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Parameter1" value="msiserver" />
                  <Parameter xsi:type="StringParameter" name="Parameter2" value="False" />
                </Statement>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Disk Cleanup: Attempting to clean &quot;%WINDIR%\Installer\$PatchCache$&quot;. Continuing with other Disk Cleanup tasks." />
                </Statement>
                <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="del %WINDIR%\Installer\$PatchCache$\* /q /s &gt;&gt;&gt;&gt;#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
              </Else>
            </If>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="--------------------------------------------------------------" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="UPSTREAM: Remove files in  &quot;c:\Windows\SoftwareDistribution\Download\&quot;" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <If description="">
              <Condition name="ServiceIsRunning">
                <Parameter xsi:type="StringParameter" name="ServiceName" value="wuauserv" />
              </Condition>
              <Then>
                <Statement name="Stop Windows Service" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Parameter1" value="wuauserv" />
                </Statement>
                <Statement name="PauseScript" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="IntegerParameter" name="Seconds" value="15" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Disk Cleanup: Attempting to remove &quot;%WINDIR%\SoftwareDistribution\Download&quot;. Continuing with other Disk Cleanup tasks." />
                </Statement>
                <Statement name="ExecuteShellCommand" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="del %WINDIR%\SoftwareDistribution\Download\* /q /s &gt;&gt;&gt;&gt;#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement name="Start Windows Service" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Parameter1" value="wuauserv" />
                  <Parameter xsi:type="StringParameter" name="Parameter2" value="False" />
                </Statement>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Disk Cleanup: Attempting to remove &quot;%WINDIR%\SoftwareDistribution\Download&quot;. Continuing with other Disk Cleanup tasks." />
                </Statement>
                <Statement name="ExecuteShellCommand" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Command" value="del %WINDIR%\SoftwareDistribution\Download\* /q /s &gt;&gt;&gt;&gt;#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
              </Else>
            </If>
            <Statement description="Delete various vendors driver folders. Disabled in this example but can easily be enabled." name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="--------------------------------------------------------------" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="UPSTREAM: Remove files in  &quot;c:\dell&quot;" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="None">
              <Parameter xsi:type="StringParameter" name="Command" value="del c:\dell\* /q /s &gt;&gt;&gt;&gt;#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="None">
              <Parameter xsi:type="StringParameter" name="Command" value="rd c:\dell /S /Q" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="--------------------------------------------------------------" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="UPSTREAM: Remove files in  &quot;c:\lenovo&quot;" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="None">
              <Parameter xsi:type="StringParameter" name="Command" value="del c:\lenovo\* /q /s &gt;&gt;&gt;&gt;#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="None">
              <Parameter xsi:type="StringParameter" name="Command" value="rd c:\lenovo /S /Q" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="--------------------------------------------------------------" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="UPSTREAM: Remove files in  &quot;c:\hp&quot;" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="None">
              <Parameter xsi:type="StringParameter" name="Command" value="del c:\hp\* /q /s &gt;&gt;&gt;&gt;#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="None">
              <Parameter xsi:type="StringParameter" name="Command" value="rd c:\hp /S /Q" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 3: Post Disk Cleanup check for available disk space." name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="--------------------------------------------------------------" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="UPSTREAM: Disk Cleanup complete." />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="Disk available before Disk Cleanup on C: #free_disk_on_c#" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="#vAgentConfiguration.agentTempDir#\sfk space c: &gt;&gt;#vAgentConfiguration.agentTempDir#\free_disk_on_c.result" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\free_disk_on_c.result" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="free_disk_on_c" />
            </Statement>
            <Statement name="GetFile" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="RemoteFileName" value="#vAgentConfiguration.agentTempDir#\free_disk_on_c.result" />
              <Parameter xsi:type="StringParameter" name="KServerFileName" value="..\Docs\free_disk_on_c.txt" />
              <Parameter xsi:type="EnumParameter" name="Action" value="SaveExistingNoAlert" />
            </Statement>
            <Statement name="Write text to file" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="Disk available after Disk Cleanup on C: #free_disk_on_c#" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\disk_cleanup.log" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\free_disk_on_c.result" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Disk Cleanup: Status after Disk Cleanup: #free_disk_on_c#" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Disk Cleanup: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Sys Mgmt - Windows - Enable RDP" treePres="3" id="1237272780" folderId="642622796326234" treeFullPath="Upstream Power Pack 2019-11-28.System Management 2018-10-26.Windows">
          <Body description="Description: This procedure will enable RDP for remote control.&#xA;&#xA;Kaseya customer value: This procedure enables RDP in the registry and enables RDP connections from Kaseya Live Connect. Security, support and control.&#xA;&#xA;End user value: Security, support and control.&#xA;&#xA;Dependencies: Windows.&#xA;&#xA;Usage: Execute the procedure at any time.&#xA;&#xA;Report options: Procedure Log, content: &quot;RDP is now enabled.&quot;&#xA; &#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot; No support included.">
            <Statement description="fDenyTSConnections set to 0 will enable RDP." name="SetRegistryValue" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\fDenyTSConnections" />
              <Parameter xsi:type="StringParameter" name="Value" value="0" />
              <Parameter xsi:type="EnumParameter" name="DataType" value="Integer" />
            </Statement>
            <Statement description="Writes a procedure log entry." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: RDP is now enabled." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Sys Mgmt - Windows - Execute Shell Command - Interactive" treePres="3" id="279477562" folderId="642622796326234" treeFullPath="Upstream Power Pack 2019-11-28.System Management 2018-10-26.Windows">
          <Body description="Description: Run any shell command directly from the Kaseya Agent Procedure with interactive input. Great for testing ping or doing any command line related test on one or more machines at once.&#xA;&#xA;Dependencies: Windows OS.&#xA;&#xA;Kaseya customer value: A quick way to test or do changes on one or many machines at once without having to enter LiveConnect or remote control.&#xA;&#xA;End user value: A quick way to get help with various tasks in system management.&#xA;&#xA;Usage: Execute the procedure at any time.&#xA;&#xA;Report Parameters: Procedure Log, &quot;Results from shell command:&quot;&#xA; &#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot; No support included.">
            <Statement name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="Enter shell command to execute (example: ping www.kaseyea.com)" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="command" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Command" value="#command# &gt;&gt; #vAgentConfiguration.agentTempDir#\command.result" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="PauseScript" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="IntegerParameter" name="Seconds" value="20" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\command.result" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="command-result" />
            </Statement>
            <Statement name="DeleteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\command.result" />
            </Statement>
            <Statement description="Writes a procedure log for easy reporting." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Results from shell command: &quot;#command-result#&quot;" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Sys Mgmt - Windows - Get Latest File Example" treePres="3" id="92206681" folderId="642622796326234" treeFullPath="Upstream Power Pack 2019-11-28.System Management 2018-10-26.Windows">
          <Body description="">
            <If description="Procedure description: Transfer the most recent updated file in a folder to the Kaseya server.&#xD;&#xA;Kaseya customer value: Backup and audit purposes.&#xD;&#xA;End user value: Backup and audit purposes.&#xD;&#xA;Dependencies: Windows OS. Sfk.exe from Stahlworks.&#xD;&#xA;Usage: Schedule, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for before, during and after update or deployment statements.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 1: Check for missing dependencies.&#xD;&#xA;The IF statement below will look for existing trace of sfk.exe utility. Http://stahlworks.com/dev/swiss-file-knife.html">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\sfk.exe" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="GetURL" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/aUGgf7A4Vyv5dgR/download" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\sfk.exe" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
              </Then>
            </If>
            <Statement description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 2: File audit.&#xD;&#xA;Let's execute the application and put the resultin a text file. In this example we look at the root of the D: drive." name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Command" value="#vAgentConfiguration.agentTempDir#\sfk.exe list -late=1 -nosub -quiet -relnames -pure d:\ &gt;&gt; #vAgentConfiguration.agentTempDir#\latestfile.result" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\latestfile.result" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="latestfile" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: #latestfile# identified as newst file. Preparing to upload file to Kaseya server." />
            </Statement>
            <Statement description="Let's do some house cleaning." name="DeleteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\latestfile.result" />
            </Statement>
            <Statement description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 3: File transfer.&#xD;&#xA;Based on the findings in stage 2 we upload the latest file to the Kaseya server agent specific web folder.&#xD;&#xA;Example path on Kaseya server: &quot;d:\kaseya\userprofiles\&lt;agentid&gt;\getfiles\filetransfer\&quot;" name="GetFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="RemoteFileName" value="d:\#latestfile#" />
              <Parameter xsi:type="StringParameter" name="KServerFileName" value="FileTransfer\#latestfile#" />
              <Parameter xsi:type="EnumParameter" name="Action" value="OverwriteNoAlert" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: &quot;#latestfile#&quot; transfered successfully to the Kaseya server." />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="sys Mgmt - Windows - Print Spooler Cleanup" treePres="3" id="1580175308" folderId="642622796326234" treeFullPath="Upstream Power Pack 2019-11-28.System Management 2018-10-26.Windows">
          <Body description="">
            <Statement description="Procedure description: Resetting the print spooler and deletes all pending documents.&#xD;&#xA;Kaseya customer value: Use to auto-remediate pringting issues. &#xD;&#xA;End user value: Auto-remediate printing issues.&#xD;&#xA;Dependencies: Windows&#xD;&#xA;Usage: Schedule from Monitor Set or Run Now.&#xD;&#xA;Report options: Agent Procedure log.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------" name="Stop Windows Service" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="spooler" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="%windir%\system32\spool\printers\*.shd /q" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="del %windir%\system32\spool\printers\*.spl /q" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="Start Windows Service" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="spooler" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="False" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Sys Mgmt - Windows - Purge IIS Log Files Older Than 14 Days" treePres="3" id="743243966" folderId="642622796326234" treeFullPath="Upstream Power Pack 2019-11-28.System Management 2018-10-26.Windows">
          <Body description="Description: A simle automated task to delet log diles older than a 14 days in IIS Inetpub folder.&#xA;&#xA;Kaseya customer value: Procedure to automate a common managment task in IIS.&#xA;&#xA;End user value: Limiting the risk fo service interruptions and unwanted downtime.&#xA;&#xA;Dependencies: Windows OS.&#xA;&#xA;Usage: Run at any given time.&#xA;&#xA;Report options: Procedure Log, content: &quot;FindPSTFiles:*&quot;&#xA;&#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot;. No support included.">
            <Statement description="This example will delete IIS log files older than 14 days on the first web site in Microsoft IIS Inetpub folder on the C: drive.&#xD;&#xA;Read more about the forfiles syntax here: http://technet.microsoft.com/en-us/library/cc753551.aspx" name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Command" value="forfiles /P &quot;C:\inetpub\logs\LogFiles\W3SVC1&quot; /S /M *.log /D -14 /C &quot;cmd /c del @path&quot;" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: ISS Inetpub cleanup on C:\inetpub\logs\LogFiles\W3SVC1\ executed." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Sys Mgmt - Windows - Restart Stopped Auto Services Except Blacklisted" treePres="3" id="1813435335" folderId="642622796326234" treeFullPath="Upstream Power Pack 2019-11-28.System Management 2018-10-26.Windows">
          <Body description="">
            <Statement description="Procedure description: Evaluate stopped Windows Services (except blacklisted) that are set to Auto-run and restart them.&#xD;&#xA;Kaseya customer value: Procedure to quickly log and repair stopped Windows Services marked as auto-run.&#xD;&#xA;End user value: Limiting the risk for unwanted downtime and disrutption of services.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Schedule, Recurring or Run Now. May replace &quot;*ALL&quot; Windows Services Monitor Set.&#xD;&#xA;Report options: Agent Procedure log. Look for before, during and after update deployment statements.&#xD;&#xA;Maintainer: ronny@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 1: Let's evaluate if there are any Windows Services stopped (named Services excluded in a blacklist)." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Restart Services: Stage 1: Auditing stopped Windows Services." />
            </Statement>
            <Statement description="The varibale below will set the blacklist for Services to be ignored. Add more Services if needed." name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="ConstantValue" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="and name!='airprint' and name!='sppsvc' and name!='clr_optimization_v4.0.30319_32' and name!='clr_optimization_v4.0.30319_64' and name!='gupdate' and name!='nvUpdatusService'" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="service_blacklist" />
            </Statement>
            <Statement description="Some Windows Services (such as sppsvc) are set as Auto but still Stopped.&#xD;&#xA;This can be a pain to monitor with *ALL Services Counter in Kaseya. This procedures may repalce that Monitor Set.&#xD;&#xA;The WMIC command below will look for Windows Services that are Auto, Stopped but not name!='XXX'. You can add more blacklisted Windows Servicses in the constant variable &quot;service_blacklist&quot; above." name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Command" value="wmic service where &quot;startmode='auto' and state='stopped' #service_blacklist#&quot; get caption, name, startmode, state, exitcode &gt;&gt;#vAgentConfiguration.agentTempDir#\stopped_valid_services.result" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Command" value="type #vAgentConfiguration.agentTempDir#\stopped_valid_services.result &gt;&gt; #vAgentConfiguration.agentTempDir#\stopped_valid_services_utf.result" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\stopped_valid_services_utf.result" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="stopped_valid_services" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Restart Services: Stage 1: Stopped Windows Services: #stopped_valid_services#" />
            </Statement>
            <Statement description="Let's do some cleanup." name="DeleteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\stopped_valid_services.result" />
            </Statement>
            <Statement name="DeleteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\stopped_valid_services_utf.result" />
            </Statement>
            <Statement description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 2: If there are any stopped Windows Services (except blacklisted) we have to take action." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Restart Services: Stage 2: Evaluating action for Stopped Services." />
            </Statement>
            <If description="">
              <Condition name="CheckVariable">
                <Parameter xsi:type="StringParameter" name="VariableName" value="#stopped_valid_services#" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                <Parameter xsi:type="StringParameter" name="Value" value="Caption" />
              </Condition>
              <Then>
                <Statement description="The WMIC command below will restart Windows Services that are Auto, Stopped but not name!='XXX'. You can add more blacklisted Windows Servicses in the list. Typically it's the same list as in stage 1 above." name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Command" value="wmic service where &quot;startmode='auto' and state='stopped' #service_blacklist#&quot; call startservice &gt;&gt;#vAgentConfiguration.agentTempDir#\restarted_valid_services.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Command" value="type #vAgentConfiguration.agentTempDir#\restarted_valid_services.result &gt;&gt;#vAgentConfiguration.agentTempDir#\restarted_valid_services_utf.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\restarted_valid_services_utf.result" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="restarted_valid_services" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Restart Services: Stage 2: Restarted Services: #restarted_valid_services#" />
                </Statement>
                <Statement description="Let's do some cleanup." name="DeleteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\restarted_valid_services.result" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\restarted_valid_services_utf.result" />
                </Statement>
                <Statement description="------------------------------------------------------------------------------------------------------------&#xD;&#xA;Stage 3: Let's evaluate if there are any Windows Services stopped (named Services excluded in a blacklist) after above restart action." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Restart Services: Stage 3: Auditing stopped Windows Services after restart attempt." />
                </Statement>
                <Statement name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Command" value="wmic service where &quot;startmode='auto' and state='stopped' #service_blacklist#&quot; get caption, name, startmode, state, exitcode &gt;&gt;#vAgentConfiguration.agentTempDir#\stopped_valid_services.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Command" value="type #vAgentConfiguration.agentTempDir#\stopped_valid_services.result &gt;&gt; #vAgentConfiguration.agentTempDir#\stopped_valid_services_utf.result" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\stopped_valid_services_utf.result" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="stopped_valid_services" />
                </Statement>
                <Statement description="Let's do some cleanup." name="DeleteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\stopped_valid_services.result" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\stopped_valid_services_utf.result" />
                </Statement>
                <If description="If any Windows Services (named Services not included in the blacklist) still isn't running we have to raise alert.">
                  <Condition name="CheckVariable">
                    <Parameter xsi:type="StringParameter" name="VariableName" value="#stopped_valid_services#" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                    <Parameter xsi:type="StringParameter" name="Value" value="Caption" />
                  </Condition>
                  <Then>
                    <Statement description="Here you can raise alert or email if Service still isn't up after restart attempt." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Restart Services: Stage 3: One or more Windows Services still isn't running: #stopped_valid_services#" />
                    </Statement>
                  </Then>
                  <Else>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Restart Services: Stage 3: Restart attempt on stopped Services successful. No stopped Services (except blacklisted) detected." />
                    </Statement>
                  </Else>
                </If>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Restart Services: Exiting: No Windows Services stopped. No action taken." />
                </Statement>
              </Else>
            </If>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Restart Services: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Sys Mgmt - Windows - Set Data Execution Policy To Opt In" treePres="3" id="10241051" folderId="642622796326234" treeFullPath="Upstream Power Pack 2019-11-28.System Management 2018-10-26.Windows">
          <Body description="">
            <Statement description="Procedure description: Procedure to enable opt in for Data Execution Prevention. http://windowsitpro.com/systems-management/q-how-do-i-use-bcdedit-set-data-execution-prevention-dep-mode&#xD;&#xA;Kaseya customer value: Secure the OS.&#xD;&#xA;End user value: Secure the OS.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Report options: Agent Procedure log. Look for &quot;UPSTREAM: Disk Cleanup:&quot; statements.&#xD;&#xA;Report options: Agent Procedure log.&#xD;&#xA;Maintainer: powerpack@upstream.se Latest update: 2017-08-28&#xD;&#xA;------------------------------------------------------------------------------------------------------------" name="ExecuteShellCommand" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Command" value="wmic OS Get DataExecutionPrevention_SupportPolicy &gt;&gt;#vAgentConfiguration.agentTempDir#\dep_status.result" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="type #vAgentConfiguration.agentTempDir#\dep_status.result &gt;&gt; #vAgentConfiguration.agentTempDir#\dep_status_utf.result" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\dep_status_utf.result" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="GLOBAL:DEP_Value" />
            </Statement>
            <If description="">
              <Condition name="CheckVariable">
                <Parameter xsi:type="StringParameter" name="VariableName" value="#GLOBAL:DEP_Value#" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="DoesNotContain" />
                <Parameter xsi:type="StringParameter" name="Value" value="2" />
              </Condition>
              <Then>
                <If description="">
                  <Condition name="TestFile">
                    <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\dep_status.result" />
                    <Parameter xsi:type="EnumParameter" name="Condition" value="DoesNotContain" />
                    <Parameter xsi:type="StringParameter" name="Value" value="2" />
                  </Condition>
                  <Then>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: DEP Opt In: DEP  value currently #GLOBAL:DEP_Value#" />
                    </Statement>
                    <If description="">
                      <Condition name="Windows 32 or 64 Bit Check">
                        <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                      </Condition>
                      <Then>
                        <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Command" value="bcdedit /set {current} nx OptIn" />
                          <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                          <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="True" />
                        </Statement>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: DEP Opt In: Setting DEP value to 2 (Opt In)." />
                        </Statement>
                      </Then>
                    </If>
                    <If description="">
                      <Condition name="Windows 32 or 64 Bit Check">
                        <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                      </Condition>
                      <Then>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: DEP Opt In: Setting DEP value to 2 (Opt In)." />
                        </Statement>
                        <Statement name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Command" value="bcdedit /set {current} nx OptIn" />
                          <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
                          <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                        </Statement>
                      </Then>
                    </If>
                  </Then>
                  <Else>
                    <If description="">
                      <Condition name="CheckVariable">
                        <Parameter xsi:type="StringParameter" name="VariableName" value="#GLOBAL:DEP_Value#" />
                        <Parameter xsi:type="EnumParameter" name="Condition" value="Equals" />
                        <Parameter xsi:type="StringParameter" name="Value" value="2" />
                      </Condition>
                      <Then>
                        <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                          <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: DEP Opt In: DEP correct. Current value: #global:cmdresults#" />
                        </Statement>
                      </Then>
                    </If>
                  </Else>
                </If>
              </Then>
            </If>
            <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\dep_status.result" />
            </Statement>
            <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\dep_status_utf.result" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: DEP Opt In: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Sys Mgmt - Windows - Test Pinging Internal Server" treePres="3" id="541791285" folderId="642622796326234" treeFullPath="Upstream Power Pack 2019-11-28.System Management 2018-10-26.Windows">
          <Body description="">
            <Statement description="Test if you have access to a specific internal server. Then you know you are inside the corporate network." name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="ping 192.168.0.102 &gt;&gt;#vAgentConfiguration.agentTempDir#\ping.result" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="User" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <If description="">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ping.result" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                <Parameter xsi:type="StringParameter" name="Value" value="Lost = 4 (100% loss)," />
              </Condition>
              <Then>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: 100% Ping loss. Agent Procedure will not continue." />
                </Statement>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Internal server reachable. Agent Procedure will continue." />
                </Statement>
              </Else>
            </If>
            <Statement description="Some house cleaning." name="DeleteFile" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ping.result" />
            </Statement>
          </Body>
        </Procedure>
      </Folder>
    </Folder>
    <Folder name="User Experience 2018-10-26" treePres="3">
      <Folder name="Windows" treePres="3">
        <Folder name="Manipulate Windows System Tray Icons" treePres="3">
          <Procedure name="User Experience - Windows - Always Show Kaseya Agent In System Tray" treePres="3" id="3150151" folderId="449159947060588" treeFullPath="Upstream Power Pack 2019-11-28.User Experience 2018-10-26.Windows.Manipulate Windows System Tray Icons">
            <Body description="">
              <If description="Procedure description: This example will make the Kaseya Agent always visible in the Windows System Tray down to the right. This cool tool was found at: hianz.wordpress.com&#xD;&#xA;Kaseya customer value: Simple way to make any system tray icon always visible.&#xD;&#xA;End user value: Easy access to the most used softwares in the system tray.&#xD;&#xA;Dependencies: Windows OS&#xD;&#xA;Usage: Schedule recurring or run now.&#xD;&#xA;Report options: Agent Procedure log.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
                <Condition name="TestFile">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\traymanager.exe" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                  <Parameter xsi:type="StringParameter" name="Value" value="" />
                </Condition>
                <Then>
                  <Statement name="GetURL" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/EkrAUrl0rLBbCAg/download" />
                    <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\traymanager.exe" />
                    <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                  </Statement>
                </Then>
              </If>
              <If description="">
                <Condition name="TestFile">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\TrayNotificationManagement.dll " />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                  <Parameter xsi:type="StringParameter" name="Value" value="" />
                </Condition>
                <Then>
                  <Statement name="GetURL" continueOnFail="false" osType="10">
                    <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/kiDfx4HGBk2SDT0/download" />
                    <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\TrayNotificationManagement.dll " />
                    <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                  </Statement>
                  <Statement name="GetURL" continueOnFail="false" osType="8.1">
                    <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/kiDfx4HGBk2SDT0/download" />
                    <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\TrayNotificationManagement.dll " />
                    <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                  </Statement>
                  <Statement name="GetURL" continueOnFail="false" osType="8">
                    <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/kiDfx4HGBk2SDT0/download" />
                    <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\TrayNotificationManagement.dll " />
                    <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                  </Statement>
                  <Statement description="For Windows 7, Vista and XP we need to download a different additional DLL, same name though." name="GetURL" continueOnFail="false" osType="7">
                    <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/kYv7HDkYaJkDZ7c/download" />
                    <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\TrayNotificationManagement.dll " />
                    <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                  </Statement>
                  <Statement name="GetURL" continueOnFail="false" osType="Vista">
                    <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/kYv7HDkYaJkDZ7c/download" />
                    <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\TrayNotificationManagement.dll " />
                    <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                  </Statement>
                  <Statement name="GetURL" continueOnFail="false" osType="XP">
                    <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/kYv7HDkYaJkDZ7c/download" />
                    <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\TrayNotificationManagement.dll " />
                    <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                  </Statement>
                </Then>
              </If>
              <Statement description="Ok, now we use &quot;traymanager.exe&quot; to pin our preffered icon to always visible. Read more here: https://hianz.wordpress.com/" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="#vAgentConfiguration.agentTempDir#\traymanager.exe -p &quot;KaUsrTsk.exe&quot; 2" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="User" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement description="We keep the tools in the Kworking folder for reuse in the future." name="WriteScriptLogEntry" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM.: Kasyea Agent System tray: Always visible." />
              </Statement>
            </Body>
          </Procedure>
          <Procedure name="User Experience - Windows - Always Show Skype 4 Business Agent In System Tray" treePres="3" id="47762472" folderId="449159947060588" treeFullPath="Upstream Power Pack 2019-11-28.User Experience 2018-10-26.Windows.Manipulate Windows System Tray Icons">
            <Body description="">
              <If description="Procedure description: This example will make the Skype 4 Business Agent always visible in the Windows System Tray down to the right. This cool tool was found at: hianz.wordpress.com&#xD;&#xA;Kaseya customer value: Simple way to make any system tray icon always visible.&#xD;&#xA;End user value: Easy access to the most used softwares in the system tray.&#xD;&#xA;Dependencies: Windows OS&#xD;&#xA;Usage: Schedule recurring or run now.&#xD;&#xA;Report options: Agent Procedure log.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
                <Condition name="TestFile">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\traymanager.exe" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                  <Parameter xsi:type="StringParameter" name="Value" value="" />
                </Condition>
                <Then>
                  <Statement name="GetURL" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/EkrAUrl0rLBbCAg/download" />
                    <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\traymanager.exe" />
                    <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                  </Statement>
                </Then>
              </If>
              <If description="For Windows 10, 8.1 and 8 we need to download a additional DLL.">
                <Condition name="TestFile">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\TrayNotificationManagement.dll " />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                  <Parameter xsi:type="StringParameter" name="Value" value="" />
                </Condition>
                <Then>
                  <Statement name="GetURL" continueOnFail="false" osType="10">
                    <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/kiDfx4HGBk2SDT0/download" />
                    <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\TrayNotificationManagement.dll " />
                    <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                  </Statement>
                  <Statement name="GetURL" continueOnFail="false" osType="8.1">
                    <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/kiDfx4HGBk2SDT0/download" />
                    <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\TrayNotificationManagement.dll " />
                    <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                  </Statement>
                  <Statement name="GetURL" continueOnFail="false" osType="8">
                    <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/kiDfx4HGBk2SDT0/download" />
                    <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\TrayNotificationManagement.dll " />
                    <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                  </Statement>
                  <Statement description="For Windows 7, Vista and XP we need to download a different additional DLL, same name though." name="GetURL" continueOnFail="false" osType="7">
                    <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/kYv7HDkYaJkDZ7c/download" />
                    <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\TrayNotificationManagement.dll " />
                    <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                  </Statement>
                  <Statement name="GetURL" continueOnFail="false" osType="Vista">
                    <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/kYv7HDkYaJkDZ7c/download" />
                    <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\TrayNotificationManagement.dll " />
                    <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                  </Statement>
                  <Statement name="GetURL" continueOnFail="false" osType="XP">
                    <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/kYv7HDkYaJkDZ7c/download" />
                    <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\TrayNotificationManagement.dll " />
                    <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                  </Statement>
                </Then>
              </If>
              <Statement description="Ok, now we use &quot;traymanager.exe&quot; to pin the Kaseya user tray icon to always visible. Read more here: https://hianz.wordpress.com/" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="#vAgentConfiguration.agentTempDir#\traymanager.exe -p &quot;lync.exe&quot; 2" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="User" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement description="We keep the tools in the Kworking folder for reuse in the future." name="WriteScriptLogEntry" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM.: Webroot Agent System tray: Always visible." />
              </Statement>
            </Body>
          </Procedure>
          <Procedure name="User Experience - Windows - Always Show Skype Agent In System Tray" treePres="3" id="698799758" folderId="449159947060588" treeFullPath="Upstream Power Pack 2019-11-28.User Experience 2018-10-26.Windows.Manipulate Windows System Tray Icons">
            <Body description="">
              <If description="Procedure description: This example will make the Skype Agent always visible in the Windows System Tray down to the right. This cool tool was found at: hianz.wordpress.com&#xD;&#xA;Kaseya customer value: Simple way to make any system tray icon always visible.&#xD;&#xA;End user value: Easy access to the most used softwares in the system tray.&#xD;&#xA;Dependencies: Windows OS&#xD;&#xA;Usage: Schedule recurring or run now.&#xD;&#xA;Report options: Agent Procedure log.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
                <Condition name="TestFile">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\traymanager.exe" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                  <Parameter xsi:type="StringParameter" name="Value" value="" />
                </Condition>
                <Then>
                  <Statement name="GetURL" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/EkrAUrl0rLBbCAg/download" />
                    <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\traymanager.exe" />
                    <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                  </Statement>
                </Then>
              </If>
              <If description="For Windows 10, 8.1 and 8 we need to download a additional DLL.">
                <Condition name="TestFile">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\TrayNotificationManagement.dll " />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                  <Parameter xsi:type="StringParameter" name="Value" value="" />
                </Condition>
                <Then>
                  <Statement name="GetURL" continueOnFail="false" osType="10">
                    <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/kiDfx4HGBk2SDT0/download" />
                    <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\TrayNotificationManagement.dll " />
                    <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                  </Statement>
                  <Statement name="GetURL" continueOnFail="false" osType="8.1">
                    <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/kiDfx4HGBk2SDT0/download" />
                    <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\TrayNotificationManagement.dll " />
                    <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                  </Statement>
                  <Statement name="GetURL" continueOnFail="false" osType="8">
                    <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/kiDfx4HGBk2SDT0/download" />
                    <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\TrayNotificationManagement.dll " />
                    <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                  </Statement>
                  <Statement description="For Windows 7, Vista and XP we need to download a different additional DLL, same name though." name="GetURL" continueOnFail="false" osType="7">
                    <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/kYv7HDkYaJkDZ7c/download" />
                    <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\TrayNotificationManagement.dll " />
                    <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                  </Statement>
                  <Statement name="GetURL" continueOnFail="false" osType="Vista">
                    <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/kYv7HDkYaJkDZ7c/download" />
                    <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\TrayNotificationManagement.dll " />
                    <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                  </Statement>
                  <Statement name="GetURL" continueOnFail="false" osType="XP">
                    <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/kYv7HDkYaJkDZ7c/download" />
                    <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\TrayNotificationManagement.dll " />
                    <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                  </Statement>
                </Then>
              </If>
              <Statement description="Ok, now we use &quot;traymanager.exe&quot; to pin the Kaseya user tray icon to always visible. Read more here: https://hianz.wordpress.com/" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="#vAgentConfiguration.agentTempDir#\traymanager.exe -p &quot;skype.exe&quot; 2" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="User" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement description="We keep the tools in the Kworking folder for reuse in the future." name="WriteScriptLogEntry" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM.: Webroot Agent System tray: Always visible." />
              </Statement>
            </Body>
          </Procedure>
          <Procedure name="User Experience - Windows - Always Show Webroot Agent In System Tray" treePres="3" id="811195909" folderId="449159947060588" treeFullPath="Upstream Power Pack 2019-11-28.User Experience 2018-10-26.Windows.Manipulate Windows System Tray Icons">
            <Body description="">
              <If description="Procedure description: This example will make the Webroot Agent always visible in the Windows System Tray down to the right. This cool tool was found at: hianz.wordpress.com&#xD;&#xA;Kaseya customer value: Simple way to make any system tray icon always visible.&#xD;&#xA;End user value: Easy access to the most used softwares in the system tray.&#xD;&#xA;Dependencies: Windows OS&#xD;&#xA;Usage: Schedule recurring or run now.&#xD;&#xA;Report options: Agent Procedure log.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
                <Condition name="TestFile">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\traymanager.exe" />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                  <Parameter xsi:type="StringParameter" name="Value" value="" />
                </Condition>
                <Then>
                  <Statement name="GetURL" continueOnFail="false" osType="Windows">
                    <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/EkrAUrl0rLBbCAg/download" />
                    <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\traymanager.exe" />
                    <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                  </Statement>
                </Then>
              </If>
              <If description="For Windows 10, 8.1 and 8 we need to download a additional DLL.">
                <Condition name="TestFile">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\TrayNotificationManagement.dll " />
                  <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                  <Parameter xsi:type="StringParameter" name="Value" value="" />
                </Condition>
                <Then>
                  <Statement name="GetURL" continueOnFail="false" osType="10">
                    <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/kiDfx4HGBk2SDT0/download" />
                    <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\TrayNotificationManagement.dll " />
                    <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                  </Statement>
                  <Statement name="GetURL" continueOnFail="false" osType="8.1">
                    <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/kiDfx4HGBk2SDT0/download" />
                    <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\TrayNotificationManagement.dll " />
                    <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                  </Statement>
                  <Statement name="GetURL" continueOnFail="false" osType="8">
                    <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/kiDfx4HGBk2SDT0/download" />
                    <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\TrayNotificationManagement.dll " />
                    <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                  </Statement>
                  <Statement description="For Windows 7, Vista and XP we need to download a different additional DLL, same name though." name="GetURL" continueOnFail="false" osType="7">
                    <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/kYv7HDkYaJkDZ7c/download" />
                    <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\TrayNotificationManagement.dll " />
                    <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                  </Statement>
                  <Statement name="GetURL" continueOnFail="false" osType="Vista">
                    <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/kYv7HDkYaJkDZ7c/download" />
                    <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\TrayNotificationManagement.dll " />
                    <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                  </Statement>
                  <Statement name="GetURL" continueOnFail="false" osType="XP">
                    <Parameter xsi:type="StringParameter" name="URL" value="https://upstream.dattodrive.com/index.php/s/kYv7HDkYaJkDZ7c/download" />
                    <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\TrayNotificationManagement.dll " />
                    <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                  </Statement>
                </Then>
              </If>
              <Statement description="Ok, now we use &quot;traymanager.exe&quot; to pin the Kaseya user tray icon to always visible. Read more here: https://hianz.wordpress.com/" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
                <Parameter xsi:type="StringParameter" name="Command" value="#vAgentConfiguration.agentTempDir#\traymanager.exe -p &quot;WRSA.exe&quot; 2" />
                <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="User" />
                <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
              </Statement>
              <Statement description="We keep the tools in the Kworking folder for reuse in the future." name="WriteScriptLogEntry" continueOnFail="false">
                <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM.: Webroot Agent System tray: Always visible." />
              </Statement>
            </Body>
          </Procedure>
        </Folder>
        <Procedure name="User Experience - Windows - Change Yes/No Buttons" treePres="3" id="1342746143" folderId="115912461055402" treeFullPath="Upstream Power Pack 2019-11-28.User Experience 2018-10-26.Windows">
          <Body description="Thsi is a sample procedure showing you how to use interactive YES/NO buttons in conversation with the customer. You can customize the output as the step one indicates. Each of the actions can trigger different sub procedures.&#xA;&#xA;Kind regards&#xA;The upstream Tech Team&#xA;&#xA;">
            <If description="Sample script. Don't schedule.">
              <Condition name="UserResponseIsYes">
                <Parameter xsi:type="StringParameter" name="Message" value="+++YES:Sure, why not!++++++NO:No way!+++Do you really want to do this?" />
                <Parameter xsi:type="IntegerParameter" name="Timeout" value="1" />
              </Condition>
              <Then>
                <Statement name="SendMessage" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Message" value="You answered: Sure, why not!" />
                  <Parameter xsi:type="BooleanParameter" name="Immediate" value="True" />
                </Statement>
              </Then>
              <Else>
                <Statement name="SendMessage" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Message" value="You answered: No way!" />
                  <Parameter xsi:type="BooleanParameter" name="Immediate" value="True" />
                </Statement>
              </Else>
            </If>
          </Body>
        </Procedure>
        <Procedure name="User Experience - Windows - Clean-up Auto Updates And Desktop" treePres="3" id="804105009" folderId="115912461055402" treeFullPath="Upstream Power Pack 2019-11-28.User Experience 2018-10-26.Windows">
          <Body description="Description: This procedure will remove many annoying autostart features of common programs.&#xA;&#xA;Dependencies: Windows OS.&#xA;&#xA;Kaseya customer value: Enhances user experience.&#xA;&#xA;End user value: Enhances the user experience.&#xA;&#xA;Usage: Execute the procedure at any time. Requires reboot to take effect.&#xA;&#xA;Report Parameters: Procedyre Log, &quot;User Experience - Clean-up Auto Updates And Desktop Executed&quot;.&#xA; &#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot; No support included.">
            <Statement description="------------------------------------------------------------------------------&#xD;&#xA;Adobe Reader: Disable auto-update." name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Command" value="REG ADD &quot;HKLM\SOFTWARE\Adobe\Adobe ARM\1.0\ARM&quot; /v &quot;iCheckReader&quot; /d &quot;0&quot; /t REG_DWORD /f" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement description="Adobe Reader: Disable misc auto-run stuff." name="ExecuteShellCommand" continueOnFail="true" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Command" value="REG DELETE &quot;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run&quot; /v &quot;Adobe ARM&quot; /f" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement description="Adobe Reader: Disable misc auto-run stuff." name="ExecuteShellCommand" continueOnFail="true" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Command" value="REG DELETE &quot;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run&quot; /v &quot;Adobe Reader Speed Launcher&quot; /f" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement description="Adobe Reader: Disable misc auto-run stuff." name="ExecuteShellCommand" continueOnFail="true" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Command" value="REG DELETE &quot;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run&quot; /v &quot;AdobeAAMUpdater-1.0&quot; /f" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement description="Adobe Reader: Remove desktop link. English XP." name="ExecuteShellCommand" continueOnFail="true" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Command" value="del /q &quot;%AllUsersProfile%\Desktop\Adobe Reader *.lnk&quot;" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement description="Adobe Reader: Remove desktop link. Swedish XP." name="ExecuteShellCommand" continueOnFail="true" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Command" value="del /q &quot;%AllUsersProfile%\Skrivbord\Adobe Reader *.lnk&quot;" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement description="Adobe Reader: Remove desktop link. Vista &amp; Windows 7, 8 ,10. All languages." name="ExecuteShellCommand" continueOnFail="true" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Command" value="del /q &quot;%Public%\Desktop\Adobe Reader *.lnk&quot;" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <If description="------------------------------------------------------------------------------&#xD;&#xA;Oracle Java JRE: Disable 32 bit auto-update registry values.">
              <Condition name="TestRegistryKey">
                <Parameter xsi:type="StringParameter" name="Path" value="HKEY_LOCAL_MACHINE\SOFTWARE\JavaSoft" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              </Condition>
              <Then>
                <Statement name="SetRegistryValue" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_LOCAL_MACHINE\SOFTWARE\JavaSoft\Java Update\Policy\EnableJavaUpdateCheck" />
                  <Parameter xsi:type="StringParameter" name="Value" value="0" />
                  <Parameter xsi:type="EnumParameter" name="DataType" value="Integer" />
                </Statement>
                <Statement name="SetRegistryValue" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_LOCAL_MACHINE\SOFTWARE\JavaSoft\Java Update\Policy\EnableJavaUpdate" />
                  <Parameter xsi:type="StringParameter" name="Value" value="0" />
                  <Parameter xsi:type="EnumParameter" name="DataType" value="Integer" />
                </Statement>
              </Then>
            </If>
            <If description="Oracle Java JRE: Disable 64 bit auto-update registry values.">
              <Condition name="TestRegistryKey64">
                <Parameter xsi:type="StringParameter" name="Path" value="HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\JavaSoft" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              </Condition>
              <Then>
                <Statement name="SetRegistryValue64" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\JavaSoft\Java Update\Policy\NotifyDownload" />
                  <Parameter xsi:type="StringParameter" name="Value" value="0" />
                  <Parameter xsi:type="EnumParameter" name="DataType" value="Integer" />
                </Statement>
                <Statement name="SetRegistryValue64" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\JavaSoft\Java Update\Policy\EnableJavaUpdate" />
                  <Parameter xsi:type="StringParameter" name="Value" value="0" />
                  <Parameter xsi:type="EnumParameter" name="DataType" value="Integer" />
                </Statement>
              </Then>
            </If>
            <If description="Oracle Java JRE: Removes the Java Update Scheduler app from the system.">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="&quot;C:\Program Files (x86)\Common Files\Java\Java Update\jusched.exe&quot;" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="SendMessage" continueOnFail="false">
                  <Parameter xsi:type="StringParameter" name="Message" value="Java scheduler found" />
                  <Parameter xsi:type="BooleanParameter" name="Immediate" value="True" />
                </Statement>
              </Then>
            </If>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: User Experience - Clean-up Auto Updates And Desktop Executed." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="User Experience - Windows - Custom Logon Welcome Message - Disable" treePres="3" id="1267871413" folderId="115912461055402" treeFullPath="Upstream Power Pack 2019-11-28.User Experience 2018-10-26.Windows">
          <Body description="Description: This procedure will remove the welcome message on Windows machines before logon if set.&#xA;&#xA;Kaseya customer value: A quick way to remove previous welcome messages.&#xA;&#xA;End user value: Remove outdated and annoying welcome messages.&#xA;&#xA;Usage: Execute the procedure at any time.&#xA;&#xA;Dependencies: Windows OS.&#xA;&#xA;Report Parameters: Procedure Log, &quot;Custom Logon Welcome Message Disabled&quot;&#xA; &#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot; No support included.">
            <If description="">
              <Condition name="CheckRegistryValue">
                <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\legalnoticecaption" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="DeleteRegistryValue" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\legalnoticecaption" />
                </Statement>
              </Then>
            </If>
            <If description="">
              <Condition name="CheckRegistryValue">
                <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\legalnoticecaption" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="DeleteRegistryValue" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Path" value="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\legalnoticetext" />
                </Statement>
              </Then>
            </If>
            <Statement description="Writes entry in the procedure log for easy reporting." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Custom Logon Welcome Message Disabled" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="User Experience - Windows - Custom Logon Welcome Message - Enable" treePres="3" id="190589144" folderId="115912461055402" treeFullPath="Upstream Power Pack 2019-11-28.User Experience 2018-10-26.Windows">
          <Body description="Description: This procedure will display a welcome message on Windows machines before logon.&#xA;&#xA;Dependencies: Microsoft Windows operating system.&#xA;&#xA;Kaseya customer value: Creates a source of information to the end customer. Enhance customer interactions and relations.&#xA;&#xA;End user value: Creates a source of information from the IT service provider.&#xA;&#xA;Usage: Execute the procedure at any time.&#xA;&#xA;Report Parameters: Procedure Log, &quot;Custom Logon Welcome Message Set To:&quot;&#xA; &#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot; No support included.">
            <Statement name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="Enter Logon Message Heading" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="heading" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="Enter Logon Welcome Message" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="message" />
            </Statement>
            <Statement description="Setting the caption of the message." name="SetRegistryValue" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\legalnoticecaption" />
              <Parameter xsi:type="StringParameter" name="Value" value="#heading#" />
              <Parameter xsi:type="EnumParameter" name="DataType" value="String" />
            </Statement>
            <Statement description="Setting the content of the message." name="SetRegistryValue" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\legalnoticetext" />
              <Parameter xsi:type="StringParameter" name="Value" value="#message#" />
              <Parameter xsi:type="EnumParameter" name="DataType" value="String" />
            </Statement>
            <Statement description="Writes a procedure log entry." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Custom Logon Welcome Message Set To: #message#" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="User Experience - Windows - Send Message To User - Interactive" treePres="3" id="954022581" folderId="115912461055402" treeFullPath="Upstream Power Pack 2019-11-28.User Experience 2018-10-26.Windows">
          <Body description="Description: This procedure will display a pop-up message to the user.&#xA;&#xA;Dependencies: None.&#xA;&#xA;Kaseya customer value: Creates a source of information to the end customer. Enhance customer interactions and relations.&#xA;&#xA;End user value: Creates a source of information from the IT service provider.&#xA;&#xA;Usage: Execute the procedure at any time.&#xA;&#xA;Report Parameters: Procedure Log, &quot;This message was sent to the user:&quot;&#xA; &#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot; No support included.">
            <Statement name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="Enter Message To User:" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="message" />
            </Statement>
            <Statement name="SendMessage" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Message" value="#message#" />
              <Parameter xsi:type="BooleanParameter" name="Immediate" value="True" />
            </Statement>
            <Statement description="Writes a procedure log for easy reporting." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: This message was sent to the user: &quot;#message#&quot;" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="User Experience - Windows - Send Message To User - Static" treePres="3" id="1956430120" folderId="115912461055402" treeFullPath="Upstream Power Pack 2019-11-28.User Experience 2018-10-26.Windows">
          <Body description="Description: This procedure will display a pop-up message to the user.&#xA;&#xA;Dependencies: None.&#xA;&#xA;Kaseya customer value: Creates a source of information to the end customer. Enhance customer interactions and relations.&#xA;&#xA;End user value: Creates a source of information from the IT service provider.&#xA;&#xA;Usage: Execute the procedure at any time.&#xA;&#xA;Report Parameters: Procedure Log, &quot;This message was sent to the user:&quot;&#xA; &#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot; No support included.">
            <Statement name="SendMessage" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Message" value="Demo message." />
              <Parameter xsi:type="BooleanParameter" name="Immediate" value="True" />
            </Statement>
            <Statement description="Writes a procedure log for easy reporting." name="WriteScriptLogEntry" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: This message was sent to the user: Demo message." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="User Experience - Windows - Send Web Page To User" treePres="3" id="647264649" folderId="115912461055402" treeFullPath="Upstream Power Pack 2019-11-28.User Experience 2018-10-26.Windows">
          <Body description="Description: This procedure will display a web page in the default browser for the user.&#xA;&#xA;Dependencies: None.&#xA;&#xA;Kaseya customer value: Creates a source of information to the end customer. Enhance customer interactions and relations.&#xA;&#xA;End user value: Creates a source of information from the IT service provider.&#xA;&#xA;Usage: Execute the procedure at any time.&#xA;&#xA;Report Parameters: Procedure Log, &quot;This URL was sent to the user:&quot;&#xA; &#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot; No support included.">
            <Statement name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="Enter or paste URL (http://www.site.com/page):" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="url" />
            </Statement>
            <Statement name="SendURL" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="URL" value="#url#" />
              <Parameter xsi:type="BooleanParameter" name="Immediate" value="True" />
            </Statement>
            <Statement description="Writes a procedure log for easy reporting." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: This URL was sent to the user: &quot;#url#&quot;" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="User Experience - Windows - Set Default Web Page For IE - Interactive" treePres="3" id="108623514" folderId="115912461055402" treeFullPath="Upstream Power Pack 2019-11-28.User Experience 2018-10-26.Windows">
          <Body description="Description: This procedure will set the default start page in IE.&#xA;&#xA;Dependencies: Internet Explorer, any version.&#xA;&#xA;Kaseya customer value: Policy enforcement and quality of service.&#xA;&#xA;End user value: Policy enforcement and quality of service.&#xA;&#xA;Usage: Execute the procedure at any time.&#xA;&#xA;Report Parameters: Procedure Log, &quot;Default IE Start Page Set To:&quot;&#xA; &#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot; No support included.">
            <Statement name="GetVariable" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="Enter Default Start Page:" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="IEstart" />
            </Statement>
            <Statement name="SetRegistryValue" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer\Main\Start Page" />
              <Parameter xsi:type="StringParameter" name="Value" value="#IEstart#" />
              <Parameter xsi:type="EnumParameter" name="DataType" value="String" />
            </Statement>
            <Statement description="Writes a procedure log for easy reporting." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Default IE Start Page Set To: #IEstart#" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="User Experience - Windows - Set Default Web Page For IE - Static" treePres="3" id="1949339220" folderId="115912461055402" treeFullPath="Upstream Power Pack 2019-11-28.User Experience 2018-10-26.Windows">
          <Body description="Description: This procedure will set the default start page in IE.&#xA;&#xA;Dependencies: Internet Explorer, any version.&#xA;&#xA;Kaseya customer value: Policy enforcement and quality of service.&#xA;&#xA;End user value: Policy enforcement and quality of service.: &#xA;&#xA;Usage: Execute the procedure at any time.&#xA;&#xA;Report Parameters: Procedure Log, &quot;Default IE Start Page Set To:&quot;&#xA; &#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot; No support included.">
            <Statement name="SetRegistryValue" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer\Main\Start Page" />
              <Parameter xsi:type="StringParameter" name="Value" value="www.upstream.se" />
              <Parameter xsi:type="EnumParameter" name="DataType" value="String" />
            </Statement>
            <Statement description="Writes a procedure log for easy reporting." name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Default IE Start Page Set To: www.upstream.se" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="User Experience - Windows - Start Dropbox" treePres="3" id="33748784" folderId="115912461055402" treeFullPath="Upstream Power Pack 2019-11-28.User Experience 2018-10-26.Windows">
          <Body description="">
            <If description="">
              <Condition name="ApplicationRunning">
                <Parameter xsi:type="StringParameter" name="ApplicationName" value="dropbox.exe" />
              </Condition>
              <Then>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Dropbox is running. No action taken." />
                </Statement>
              </Then>
              <Else>
                <Statement name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Command" value="&quot;%userprofile%\AppData\Roaming\Dropbox\bin\Dropbox.exe&quot; /home" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="User" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Dropbox started automatically." />
                </Statement>
              </Else>
            </If>
          </Body>
        </Procedure>
        <Procedure name="User Experience - Windows - Start Skype" treePres="3" id="565299019" folderId="115912461055402" treeFullPath="Upstream Power Pack 2019-11-28.User Experience 2018-10-26.Windows">
          <Body description="">
            <If description="">
              <Condition name="ApplicationRunning">
                <Parameter xsi:type="StringParameter" name="ApplicationName" value="skype.exe" />
              </Condition>
              <Then>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Skype is running. No action taken." />
                </Statement>
              </Then>
              <Else>
                <Statement name="ExecuteShellCommand" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Command" value="&quot;%programfiles%\skype\phone\skype.exe&quot;" />
                  <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="User" />
                  <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="NT4|2000|XP|2003|Vista|2008">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTEAM: Skype started automatically." />
                </Statement>
              </Else>
            </If>
          </Body>
        </Procedure>
        <Procedure name="User Experience - Windows - Text To Speech Message" treePres="3" id="373975055" folderId="115912461055402" treeFullPath="Upstream Power Pack 2019-11-28.User Experience 2018-10-26.Windows">
          <Body description="">
            <Statement name="GetVariable" continueOnFail="false">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="Prompt" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="text" />
            </Statement>
            <Statement name="Execute Powershell" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="[Reflection.Assembly]::LoadWithPartialName('System.Speech') | Out-Null;  (New-Object System.Speech.Synthesis.SpeechSynthesizer).Speak('#text#')" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
          </Body>
        </Procedure>
      </Folder>
    </Folder>
    <Folder name="Windows 10 Specific 2019-11-28" treePres="3">
      <Folder name="Windows 10 Audit" treePres="3">
        <Procedure name="Audit - Windows 10 - Custom Field - Compliance Test" treePres="3" id="526976846" folderId="155813151158305" treeFullPath="Upstream Power Pack 2019-11-28.Windows 10 Specific 2019-11-28.Windows 10 Audit">
          <Body description="">
            <Statement name="WriteFile" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\RMM-Audit-Win10-ComputerComplianceTest.ps1" />
              <Parameter xsi:type="StringParameter" name="ManagedFile" value="VSASharedFiles\UpstreamPowerPack\Powershell\RMM-Audit-Win10-ComputerComplianceTest.ps1" />
              <Parameter xsi:type="BooleanParameter" name="DeleteAfter" value="False" />
            </Statement>
            <Statement name="ExecuteShellCommand" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="Command" value="PowerShell.exe -ExecutionPolicy Bypass -File #vAgentConfiguration.agentTempDir#\RMM-Audit-Win10-ComputerComplianceTest.ps1 &gt;&gt;#vAgentConfiguration.agentTempDir#\RMM-Audit-Win10-ComputerComplianceTest.result" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="PauseScript" continueOnFail="true" osType="10">
              <Parameter xsi:type="IntegerParameter" name="Seconds" value="300" />
            </Statement>
            <Statement name="Execute Shell Command - Get Results to Variable" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="date /T" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="False" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false" osType="10">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\RMM-Audit-Win10-ComputerComplianceTest.result" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="ComputerComplianceResult" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="Comment" value="#ComputerComplianceResult#" />
            </Statement>
            <If description="">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\RMM-Audit-Win10-ComputerComplianceTest.result" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                <Parameter xsi:type="StringParameter" name="Value" value="UPSTREAM: Is this computer compliant: NO" />
              </Condition>
              <Then>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Is this computer compliant: NO" />
                </Statement>
                <Statement name="UpdateSystemInfo" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="ColumnName" value="CF Compliant" />
                  <Parameter xsi:type="StringParameter" name="Value" value="NO #global:cmdresults#" />
                </Statement>
              </Then>
            </If>
            <If description="">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\RMM-Audit-Win10-ComputerComplianceTest.result" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                <Parameter xsi:type="StringParameter" name="Value" value="UPSTREAM: Is this computer compliant: YES" />
              </Condition>
              <Then>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Is this computer compliant: YES" />
                </Statement>
                <Statement name="UpdateSystemInfo" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="ColumnName" value="CF Compliant" />
                  <Parameter xsi:type="StringParameter" name="Value" value="YES #global:cmdresults#" />
                </Statement>
              </Then>
            </If>
            <Statement name="DeleteFile" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="Path" value="VSASharedFiles\UpstreamPowerPack\RMM-Audit-Win10-ComputerComplianceTest.ps1" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Audit - Windows 10 - Custom Field - Get Azure AD Tenant And User" treePres="3" id="1331139952" folderId="155813151158305" treeFullPath="Upstream Power Pack 2019-11-28.Windows 10 Specific 2019-11-28.Windows 10 Audit">
          <Body description="">
            <Statement description="Procedure description: Get Azure AD specific information from the registry.&#xD;&#xA;Kaseya customer value: Audit if the computer is Azure AD joined or not.&#xD;&#xA;End user value: Track non Azure AD joined computers for compliance.&#xD;&#xA;Dependencies: Windows 10. Custom Fields &quot;CF Azure AD Tenant&quot; &amp; &quot;CF Azure AD User&quot; created. Powershell files uploaded to Managed Files.&#xD;&#xA;Usage: Schedule from Kaseya Policy Manager or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for &quot;UPSTREAM: Get Azure Info:&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Before executing this Agent Procedure, upload the Upstream Power Pack Powershell scripts below to &quot;VSASharedFiles\UpstreamPowerPack\Powershell&quot;." name="WriteFile" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\KaseyaVSA-Audit-GetAzureTenantName.ps1" />
              <Parameter xsi:type="StringParameter" name="ManagedFile" value="VSASharedFiles\UpstreamPowerPack\Powershell\KaseyaVSA-Audit-GetAzureTenantName.ps1" />
              <Parameter xsi:type="BooleanParameter" name="DeleteAfter" value="False" />
            </Statement>
            <Statement name="WriteFile" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\KaseyaVSA-Audit-GetAzureUserName.ps1" />
              <Parameter xsi:type="StringParameter" name="ManagedFile" value="VSASharedFiles\UpstreamPowerPack\Powershell\KaseyaVSA-Audit-GetAzureUserName.ps1" />
              <Parameter xsi:type="BooleanParameter" name="DeleteAfter" value="False" />
            </Statement>
            <Statement description="Let's get the Azure AD tenant name." name="Execute Powershell" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="#vAgentConfiguration.agentTempDir#\KaseyaVSA-Audit-GetAzureTenantName.ps1" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
            </Statement>
            <If description="">
              <Condition name="CheckVariable">
                <Parameter xsi:type="StringParameter" name="VariableName" value="#global:psresult#" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="DoesNotContain" />
                <Parameter xsi:type="StringParameter" name="Value" value="Cannot find path" />
              </Condition>
              <Then>
                <Statement name="UpdateSystemInfo" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="ColumnName" value="CF Azure AD Tenant" />
                  <Parameter xsi:type="StringParameter" name="Value" value="#global:psresult#" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Get Azure Info: Tenant Name: #global:psresult#" />
                </Statement>
              </Then>
              <Else>
                <Statement name="UpdateSystemInfo" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="ColumnName" value="CF Azure AD Tenant" />
                  <Parameter xsi:type="StringParameter" name="Value" value="Not Detected" />
                </Statement>
              </Else>
            </If>
            <Statement description="Let's get the Azure AD user." name="Execute Powershell" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="#vAgentConfiguration.agentTempDir#\KaseyaVSA-Audit-GetAzureUserName.ps1" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
            </Statement>
            <If description="">
              <Condition name="CheckVariable">
                <Parameter xsi:type="StringParameter" name="VariableName" value="#global:psresult#" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="DoesNotContain" />
                <Parameter xsi:type="StringParameter" name="Value" value="Cannot find path" />
              </Condition>
              <Then>
                <Statement name="UpdateSystemInfo" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="ColumnName" value="CF Azure AD User" />
                  <Parameter xsi:type="StringParameter" name="Value" value="#global:psresult#" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Get Azure Info: User Name: #global:psresult#" />
                </Statement>
              </Then>
              <Else>
                <Statement name="UpdateSystemInfo" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="ColumnName" value="CF Azure AD User" />
                  <Parameter xsi:type="StringParameter" name="Value" value="Not Detected" />
                </Statement>
              </Else>
            </If>
            <Statement description="Let's do some cleanup." name="DeleteFile" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\KaseyaVSA-Audit-GetAzureUserName.ps1" />
            </Statement>
            <Statement name="DeleteFile" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\KaseyaVSA-Audit-GetAzureUserName.ps1" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Audit - Windows 10 - Custom Field - Get Disk Encryption Status" treePres="3" id="2032368826" folderId="155813151158305" treeFullPath="Upstream Power Pack 2019-11-28.Windows 10 Specific 2019-11-28.Windows 10 Audit">
          <Body description="">
            <Statement description="Procedure description: Checks if Bitlocker is enabled and what level of encryption is provided.&#xD;&#xA;Kaseya customer value: Audit and compliance. Enforce encryption policies.&#xD;&#xA;End user value: Audit and compliance.&#xD;&#xA;Dependencies: Windows 10&#xD;&#xA;Usage: Schedule Once or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for &quot;UPSTREAM: Disk Encryption Status&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Let's ask Windows for current disk encryption status." name="Execute Powershell" continueOnFail="false">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-BitLockerVolume -MountPoint &quot;C:&quot; | Select -Expand VolumeStatus" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Disk Encryption Status: #global:psresult#" />
            </Statement>
            <Statement name="UpdateSystemInfo" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="ColumnName" value="CF Encryption" />
              <Parameter xsi:type="StringParameter" name="Value" value="#global:psresult#" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Disk Encryption Status: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Audit - Windows 10 - Custom Field - Get OneDrive Version" treePres="3" id="723433494" folderId="155813151158305" treeFullPath="Upstream Power Pack 2019-11-28.Windows 10 Specific 2019-11-28.Windows 10 Audit">
          <Body description="">
            <If description="Procedure description: Get OneDrive Version from the registry.&#xD;&#xA;Kaseya customer value: For compliance and troubleshooting.&#xD;&#xA;End user value: Ensure compliance and  OneDrive feature support.&#xD;&#xA;Dependencies: Windows 10. Custom Field &quot;CF OneDrive Version&quot;.&#xD;&#xA;Usage: Schedule recurringly from Kaseya Policy Manager or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for &quot;UPSTREAM: Get OneDrive Version:&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
              <Condition name="CheckRegistryValue">
                <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_CURRENT_USER\Software\Microsoft\OneDrive\Version" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="GetVariable" continueOnFail="false" osType="10">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="RegistryValue" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="HKEY_CURRENT_USER\Software\Microsoft\OneDrive\Version" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="OneDriveVersion" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Get OneDrive Version: #OneDriveVersion#" />
                </Statement>
                <Statement name="UpdateSystemInfo" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="ColumnName" value="CF OneDrive Version" />
                  <Parameter xsi:type="StringParameter" name="Value" value="#OneDriveVersion#" />
                </Statement>
              </Then>
            </If>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Get Win 10 Version: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Audit - Windows 10 - Custom Field - Get Win 10 Version" treePres="3" id="1567706558" folderId="155813151158305" treeFullPath="Upstream Power Pack 2019-11-28.Windows 10 Specific 2019-11-28.Windows 10 Audit">
          <Body description="">
            <If description="Procedure description: Get Windows 10 Version from the registry&#xD;&#xA;Kaseya customer value: Patching, compliance and troubleshooting.&#xD;&#xA;End user value: Ensure to meet any compliande.&#xD;&#xA;Dependencies: Windows OS. Custom Field &quot;CF Win 10 Version&quot; created.&#xD;&#xA;Usage: Schedule recurringly from Kaseya Policy Manager or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for &quot;UPSTREAM: Get Win 10 Version:&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
              <Condition name="CheckRegistryValue">
                <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ReleaseID" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="GetVariable" continueOnFail="false" osType="10">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="RegistryValue" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ReleaseID" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="Win10Version" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Get Win 10 Version: #Win10Version#" />
                </Statement>
                <Statement name="UpdateSystemInfo" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="ColumnName" value="CF Win 10 Version" />
                  <Parameter xsi:type="StringParameter" name="Value" value="#Win10Version#" />
                </Statement>
              </Then>
            </If>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Get Win 10 Version: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Audit - Windows 10 - Custom Field - Get Windows Experience Index (WEI)" treePres="3" id="1148390551" folderId="155813151158305" treeFullPath="Upstream Power Pack 2019-11-28.Windows 10 Specific 2019-11-28.Windows 10 Audit">
          <Body description="">
            <Statement description="Procedure description: Get the Windows Experience Index score.&#xD;&#xA;Kaseya customer value: Evaluate the hardware performance from a sales standpoint.&#xD;&#xA;End user value: Evaluate the hardware from a productivity adn performance standpoint.&#xD;&#xA;Dependencies: Windows 10&#xD;&#xA;Usage: Schedule Once or Run Now.&#xD;&#xA;Report options: Custom Field and Agent Procedure log. Look for &quot;UPSTREAM: Get WEI Score:&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;This command will do a full performance assesment on the machine." name="ExecuteShellCommand" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="Command" value="winsat formal" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="PauseScript" continueOnFail="false" osType="10">
              <Parameter xsi:type="IntegerParameter" name="Seconds" value="180" />
            </Statement>
            <If description="Now we grab the latest test results from a Powerhell one-liner and update a Kaseya Custom Field.">
              <Condition name="Windows 32 or 64 Bit Check">
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              </Condition>
              <Then>
                <Statement name="Execute Powershell Command (64-bit, Run As System)" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                  <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-WmiObject -class Win32_WinSAT | Select -Expand WinSPRLevel" />
                  <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
                </Statement>
              </Then>
              <Else>
                <Statement name="Execute Powershell Command (32-bit, Run As System)" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                  <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-WmiObject -class Win32_WinSAT | Select -Expand WinSPRLevel" />
                  <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
                </Statement>
              </Else>
            </If>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Get WEI Score: #gloval:psresult#" />
            </Statement>
            <Statement name="UpdateSystemInfo" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="ColumnName" value="CF WEI Score" />
              <Parameter xsi:type="StringParameter" name="Value" value="#global:psresult#" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Get WEI Score: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
            </Statement>
          </Body>
        </Procedure>
      </Folder>
      <Folder name="Windows 10 Patch Management" treePres="3">
        <Procedure name="Patch Mgmt - Windows 10 - Patch From Command Line - No Reboot" treePres="3" id="715216591" folderId="433852593197418" treeFullPath="Upstream Power Pack 2019-11-28.Windows 10 Specific 2019-11-28.Windows 10 Patch Management">
          <Body description="">
            <If description="Procedure description: Kaseya can not patch post Windows 10 Anniversary Eedition that good. This Freeware from Flemming Varmer at ABC-Deploy.com do the trick.&#xD;&#xA;Kaseya customer value: Ensures that Windows 10 Anniversary Edition gets patched.&#xD;&#xA;End user value: Secure Windows 10 Anniversary Edition (Any Win 10) with the latest patches.&#xD;&#xA;Dependencies: Windows 10.&#xD;&#xA;Usage: Recurring schedule or Run Now.&#xD;&#xA;Report options: Agent Procedure log.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\abc-update\abc-update.exe" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="GetURL" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="URL" value="http://abc-deploy.com/Files/ABC-Update.zip" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\ABC-Update.zip" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement name="Unzip file" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="Parameter1" value="#vAgentConfiguration.agentTempDir#\ABC-Update.zip" />
                  <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\abc-update" />
                  <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ABC-Update\ABC-Update EULA.pdf" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ABC-Update\ABC-Update GUI.exe" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ABC-Update\ABC-Update GUI.exe.config" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ABC-Update\abc-update.exe.config" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ABC-Update\ABC-Update.pdf" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ABC-Update.zip" />
                </Statement>
              </Then>
            </If>
            <Statement description="The ABC Update commands can be views here: http://abc-deploy.com/files/abc" name="ExecuteShellCommand" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="Command" value="#vAgentConfiguration.agentTempDir#\abc-update\abc-update.exe /A:Install /R:N /Log:#vAgentConfiguration.agentTempDir#\WinUpdate-Commandline.log" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false" osType="10">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\WinUpdate-Commandline.log" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="WinUpdate_Commandline_results" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Patch Windows 10: : #WinUpdate_Commandline_results#" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Patch Mgmt - Windows 10 - Test For Reboot Pending" treePres="3" id="463189573" folderId="433852593197418" treeFullPath="Upstream Power Pack 2019-11-28.Windows 10 Specific 2019-11-28.Windows 10 Patch Management">
          <Body description="">
            <If description="https://gallery.technet.microsoft.com/scriptcenter/Get-PendingReboot-Query-bdb79542">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="c:\kworking\rebootpending.result" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="c:\kworking\rebootpending.result" />
                </Statement>
              </Then>
            </If>
            <If description="">
              <Condition name="TestRegistryKey">
                <Parameter xsi:type="StringParameter" name="Path" value="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate\AutoUpdate\RebootRequired" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              </Condition>
              <Then>
                <Statement name="Write text to file" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Parameter1" value="RegKey exists. Reboot required: &quot;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate\AutoUpdate\RebootRequired&quot;" />
                  <Parameter xsi:type="StringParameter" name="Parameter2" value="c:\kworking\rebootpending.result" />
                  <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
                </Statement>
              </Then>
            </If>
            <If description="">
              <Condition name="TestRegistryKey">
                <Parameter xsi:type="StringParameter" name="Path" value="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Component Based Servicing\RebootPending" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              </Condition>
              <Then>
                <Statement name="Write text to file" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Parameter1" value="RegKey exists. Reboot required: &quot;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Component Based Servicing\RebootPending&quot;" />
                  <Parameter xsi:type="StringParameter" name="Parameter2" value="c:\kworking\rebootpending.result" />
                  <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                </Statement>
              </Then>
            </If>
            <If description="">
              <Condition name="TestRegistryKey">
                <Parameter xsi:type="StringParameter" name="Path" value="HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\PendingFileRenameOperations" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              </Condition>
              <Then>
                <Statement name="Write text to file" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Parameter1" value="RegKey exists. Reboot required. &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\PendingFileRenameOperations&quot;" />
                  <Parameter xsi:type="StringParameter" name="Parameter2" value="c:\kworking\rebootpending.result" />
                  <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                </Statement>
              </Then>
            </If>
            <If description="">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="c:\kworking\rebootpending.result" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="GetVariable" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="c:\kworking\rebootpending.result" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="RebootPending" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Test For Pending Reboot: Reboot Pending!" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Test For Pending Reboot: #RebootPending#" />
                </Statement>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Test For Pending Reboot: No reboot needed." />
                </Statement>
              </Else>
            </If>
            <Statement name="DeleteFile" continueOnFail="true" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Path" value="c:\kworking\rebootpending.result" />
            </Statement>
            <Statement name="Execute Powershell" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="Install-Module -Name PendingReboot -Confirm" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Patch Mgmt - Windows 10 - Update Drivers From Command Line" treePres="3" id="1788060088" folderId="433852593197418" treeFullPath="Upstream Power Pack 2019-11-28.Windows 10 Specific 2019-11-28.Windows 10 Patch Management">
          <Body description="">
            <If description="Procedure description: Download and install available Windows drivers from Windows Update. This Kaseya can not do within the Patch engine.&#xD;&#xA;Kaseya customer value: Ensure all drivers are up to date for best system performance and troubleshooting.&#xD;&#xA;End user value: Best possible system performance.&#xD;&#xA;Dependencies: Windows OS.&#xD;&#xA;Usage: Recurring schedule or Run Now.&#xD;&#xA;Report options: Agent Procedure log.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Let's start by downloading a freeware tool. Respect to Flemming Varmer at http://abc-deploy.com/abc-update/History">
              <Condition name="TestFile">
                <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\abc-update\abc-update.exe" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                <Parameter xsi:type="StringParameter" name="Value" value="" />
              </Condition>
              <Then>
                <Statement name="GetURL" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="URL" value="http://abc-deploy.com/Files/ABC-Update.zip" />
                  <Parameter xsi:type="StringParameter" name="ResponseFileName" value="#vAgentConfiguration.agentTempDir#\ABC-Update.zip" />
                  <Parameter xsi:type="BooleanParameter" name="WaitComplete" value="True" />
                </Statement>
                <Statement name="Unzip file" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Parameter1" value="#vAgentConfiguration.agentTempDir#\ABC-Update.zip" />
                  <Parameter xsi:type="StringParameter" name="Parameter2" value="#vAgentConfiguration.agentTempDir#\abc-update" />
                  <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
                </Statement>
                <Statement description="We only need the ABC-Update.exe, so let's clean up the rest." name="DeleteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ABC-Update\ABC-Update EULA.pdf" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ABC-Update\ABC-Update GUI.exe" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ABC-Update\ABC-Update GUI.exe.config" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ABC-Update\abc-update.exe.config" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ABC-Update\ABC-Update.pdf" />
                </Statement>
                <Statement name="DeleteFile" continueOnFail="false" osType="Windows">
                  <Parameter xsi:type="StringParameter" name="Path" value="#vAgentConfiguration.agentTempDir#\ABC-Update.zip" />
                </Statement>
              </Then>
            </If>
            <Statement description="The ABC Update commands can be views here: http://abc-deploy.com/files/abc-update.pdf" name="ExecuteShellCommand" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Command" value="#vAgentConfiguration.agentTempDir#\abc-update\abc-update.exe /A:Install /Input:Exclude /T:Driver /R:N /Log:#vAgentConfiguration.agentTempDir#\WinDriversUpdate-Commandline.log" />
              <Parameter xsi:type="EnumParameter" name="ExecuteAccount" value="System" />
              <Parameter xsi:type="BooleanParameter" name="Is64Bit" value="False" />
            </Statement>
            <Statement name="GetVariable" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="EnumParameter" name="VariableType" value="FileContent" />
              <Parameter xsi:type="StringParameter" name="SourceContent" value="#vAgentConfiguration.agentTempDir#\WinDriversUpdate-Commandline.log" />
              <Parameter xsi:type="StringParameter" name="VariableName" value="WinDriversUpdate_Commandline_results" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="Windows">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: #WinDriversUpdate_Commandline_results#" />
            </Statement>
          </Body>
        </Procedure>
      </Folder>
      <Folder name="Windows 10 Policy Mgmt" treePres="3">
        <Procedure name="Policy Mgmt -  Windows 10 - Remove Modern Apps for Current User" treePres="3" id="1246766826" folderId="810447584330312" treeFullPath="Upstream Power Pack 2019-11-28.Windows 10 Specific 2019-11-28.Windows 10 Policy Mgmt">
          <Body description="">
            <If description="Procedure description: Removes the Windows 10 modern apps for the current user.&#xD;&#xA;Kaseya customer value: Streamline the Windows 10 current user start menu.&#xD;&#xA;End user value: Removes non business and unwanted apps from the Windows 10 start menu for a clean look and feel.&#xD;&#xA;Dependencies: Windows 10.&#xD;&#xA;Usage: Schedule, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for before, during and after statements.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
              <Condition name="UserIsLoggedIn">
                <Parameter xsi:type="StringParameter" name="UserName" value="" />
              </Condition>
              <Then>
                <If description="">
                  <Condition name="Windows 32 or 64 Bit Check">
                    <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
                  </Condition>
                  <Then>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="10">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Remove Windows 10 Modern Apps: Current user is #vAgentConfiguration.CurrentUser#" />
                    </Statement>
                    <Statement description="First we take a look at the current apps installed." name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="10">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Remove Windows 10 Modern Apps: Apps before removal: #global:psresult#" />
                    </Statement>
                    <Statement description="Let's remove a bunch of Microsoft modern apps (if present) for the current user." name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="false" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *3dbuilder* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *alarms* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement description="Note: We decided to keep the Windows Calculator in this example. You may enable the step and remove if you wish." name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="None">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *calculator* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *communications* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *camera* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *officehub* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *skypeapp* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *getstarted* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *zunemusic* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *maps* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *solitairecollection* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *bingfinance* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *zunevideo* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *bingnews* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *onenote* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *people* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *windowsphone* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *photos* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement description="Note: We decided to keep the Windows store in this example. You may enable the step and remove if you wish." name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="false" osType="None">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *windowsstore* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="false" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *bingsports* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="false" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *soundrecorder* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="false" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *bingweather* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="false" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *sway* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="false" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *xbox* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement description="Let's remove other non Microsoft apps (if present) for the current user." name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="false" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *CandyCrushSodaSaga* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="false" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *twitter* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement description="How do the list after removal compare with the one before?" name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="10">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Remove Windows 10 Modern Apps: Apps after removal: #global:psresult#" />
                    </Statement>
                  </Then>
                </If>
                <If description="">
                  <Condition name="Windows 32 or 64 Bit Check">
                    <Parameter xsi:type="EnumParameter" name="Condition" value="NotExists" />
                  </Condition>
                  <Then>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="10">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Remove Windows 10 Modern Apps: Current user is #vAgentConfiguration.CurrentUser#" />
                    </Statement>
                    <Statement description="First we take a look at the current apps installed." name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="10">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Remove Windows 10 Modern Apps: Apps before removal: #global:psresult#" />
                    </Statement>
                    <Statement description="Let's remove a bunch of Microsoft modern apps (if present) for the current user." name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="false" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *3dbuilder* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *alarms* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement description="Note: We decided to keep the Windows Calculator in this example. You may enable the step and remove if you wish." name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="None">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *calculator* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *communications* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *camera* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *officehub* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *skypeapp* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *getstarted* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *zunemusic* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *maps* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *solitairecollection* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *bingfinance* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *zunevideo* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *bingnews* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *onenote* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *people* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *windowsphone* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *photos* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement description="Note: We decided to keep the Windows store in this example. You may enable the step and remove if you wish." name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="false" osType="None">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *windowsstore* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="false" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *bingsports* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="false" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *soundrecorder* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="false" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *bingweather* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="false" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *sway* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="false" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *xbox* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement description="Let's remove other non Microsoft apps (if present) for the current user." name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="false" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *CandyCrushSodaSaga* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="false" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage *twitter* | Remove-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
                    </Statement>
                    <Statement description="How do the list after removal compare with the one before?" name="Execute Powershell Command (64-bit, Run As User)" continueOnFail="true" osType="10">
                      <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
                      <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-AppxPackage" />
                      <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
                    </Statement>
                    <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="10">
                      <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Remove Windows 10 Modern Apps: Apps after removal: #global:psresult#" />
                    </Statement>
                  </Then>
                </If>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Remove Windows 10 Modern Apps: No action taken. There is no user logged in." />
                </Statement>
              </Else>
            </If>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Remove Windows 10 Modern Apps: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Policy Mgmt - Windows 10 - Disable Storage Sense" treePres="3" id="2071087211" folderId="810447584330312" treeFullPath="Upstream Power Pack 2019-11-28.Windows 10 Specific 2019-11-28.Windows 10 Policy Mgmt">
          <Body description="Description: This procedure will enable RDP for remote control.&#xA;&#xA;Kaseya customer value: This procedure enables RDP in the registry and enables RDP connections from Kaseya Live Connect. Security, support and control.&#xA;&#xA;End user value: Security, support and control.&#xA;&#xA;Dependencies: Windows.&#xA;&#xA;Usage: Execute the procedure at any time.&#xA;&#xA;Report options: Procedure Log, content: &quot;RDP is now enabled.&quot;&#xA; &#xA;Script maintainer: ronny [at] upstream.se&#xA;&#xA;Support: This script is delivered &quot;as is&quot; No support included.">
            <Statement description="Procedure description: Disable the built in disk cleanup tool in Windows 10.&#xD;&#xA;Kaseya customer value: Ensure Storge Sense is Disabled.&#xD;&#xA;End user value: Ensure Storge Sense is Disabled.&#xD;&#xA;Dependencies: Windows 10.&#xD;&#xA;Usage: Schedule recurringly for compliance.&#xD;&#xA;Report options: Agent Procedure log. Look for &quot;UPSTREAM: Enable Storage Sense&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Let's disable Storage Sense.&#xD;&#xA;Registry settings can be reviewed here: https://stealthpuppy.com/windows-10-storage-sense-intune/#.W446jPZuJPY" name="SetRegistryValue" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\StorageSense\Parameters\StoragePolicy\01" />
              <Parameter xsi:type="StringParameter" name="Value" value="0" />
              <Parameter xsi:type="EnumParameter" name="DataType" value="Integer" />
            </Statement>
            <Statement description="Writes a procedure log entry." name="WriteScriptLogEntry" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Disable Storage Sense: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Policy Mgmt - Windows 10 - Enable Storage Sense" treePres="3" id="1795254147" folderId="810447584330312" treeFullPath="Upstream Power Pack 2019-11-28.Windows 10 Specific 2019-11-28.Windows 10 Policy Mgmt">
          <Body description="">
            <Statement description="Procedure description: Enable and configure the built in disk cleanup tool in Windows 10.&#xD;&#xA;Kaseya customer value: Ensure disk usage is optimal without any additional automation procedures.&#xD;&#xA;End user value: Ensure disk usage is optimal.&#xD;&#xA;Dependencies: Windows 10.&#xD;&#xA;Usage: Schedule recurringly for compliance.&#xD;&#xA;Report options: Agent Procedure log. Look for &quot;UPSTREAM: Enable Storage Sense&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------&#xD;&#xA;Let's enable Storage Sense and configure the disk cleanup.&#xD;&#xA;Settings can be reviewed here: https://stealthpuppy.com/windows-10-storage-sense-intune/#.W446jPZuJPY" name="SetRegistryValue" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\StorageSense\Parameters\StoragePolicy\01" />
              <Parameter xsi:type="StringParameter" name="Value" value="1" />
              <Parameter xsi:type="EnumParameter" name="DataType" value="Integer" />
            </Statement>
            <Statement description="Run Storage Sense every week." name="SetRegistryValue" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\StorageSense\Parameters\StoragePolicy\2048" />
              <Parameter xsi:type="StringParameter" name="Value" value="7" />
              <Parameter xsi:type="EnumParameter" name="DataType" value="Integer" />
            </Statement>
            <Statement description="Delete temporary files that my apps aren't using." name="SetRegistryValue" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\StorageSense\Parameters\StoragePolicy\04" />
              <Parameter xsi:type="StringParameter" name="Value" value="0" />
              <Parameter xsi:type="EnumParameter" name="DataType" value="Integer" />
            </Statement>
            <Statement description="Enalbe the ability to delete files in the &quot;my Recycle Bin&quot;." name="SetRegistryValue" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\StorageSense\Parameters\StoragePolicy\08" />
              <Parameter xsi:type="StringParameter" name="Value" value="1" />
              <Parameter xsi:type="EnumParameter" name="DataType" value="Integer" />
            </Statement>
            <Statement description="Delete files in the recycle bin if they have been there for over 30 days." name="SetRegistryValue" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\StorageSense\Parameters\StoragePolicy\256" />
              <Parameter xsi:type="StringParameter" name="Value" value="30" />
              <Parameter xsi:type="EnumParameter" name="DataType" value="Integer" />
            </Statement>
            <Statement description="Enalbe the ability to delete files in &quot;my Downloads&quot;." name="SetRegistryValue" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\StorageSense\Parameters\StoragePolicy\32" />
              <Parameter xsi:type="StringParameter" name="Value" value="1" />
              <Parameter xsi:type="EnumParameter" name="DataType" value="Integer" />
            </Statement>
            <Statement description="Delete files in &quot;my Downloads&quot; folder if they have been there for over 30 days." name="SetRegistryValue" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\StorageSense\Parameters\StoragePolicy\512" />
              <Parameter xsi:type="StringParameter" name="Value" value="30" />
              <Parameter xsi:type="EnumParameter" name="DataType" value="Integer" />
            </Statement>
            <Statement description="Writes a procedure log entry." name="WriteScriptLogEntry" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Enable Storage Sense: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Policy Mgmt - Windows 10 - Remove Annoying App Suggestions" treePres="3" id="445980080" folderId="810447584330312" treeFullPath="Upstream Power Pack 2019-11-28.Windows 10 Specific 2019-11-28.Windows 10 Policy Mgmt">
          <Body description="">
            <If description="Procedure description: Removes the annoying Windows 10 app suggestion feature in start menu.&#xD;&#xA;Kaseya customer value: Streamline the Windows 10 current user start menu.&#xD;&#xA;End user value: Removes non business and unwanted clutter from the Windows 10 start menu for a clean look and feel.&#xD;&#xA;Dependencies: Windows 10.&#xD;&#xA;Usage: Schedule, Recurring or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for before, during and after statements.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
              <Condition name="UserIsLoggedIn">
                <Parameter xsi:type="StringParameter" name="UserName" value="" />
              </Condition>
              <Then>
                <Statement name="SetRegistryValue" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager\SystemPaneSuggestionsEnabled" />
                  <Parameter xsi:type="StringParameter" name="Value" value="0" />
                  <Parameter xsi:type="EnumParameter" name="DataType" value="Integer" />
                </Statement>
                <Statement name="GetVariable" continueOnFail="false" osType="10">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="RegistryValue" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager\SystemPaneSuggestionsEnabled" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="setting" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Remove Windows 10 App suggestions: Registry set to #setting#" />
                </Statement>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Remove Windows 10 App suggestions: Take affect at next logon." />
                </Statement>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Remove Windows 10 App suggestions: Skipped. No user logged in to apply registry setting to." />
                </Statement>
              </Else>
            </If>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Remove Windows 10 App suggestions: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Policy Mgmt - Windows 10 - Set Active Hours" treePres="3" id="1366253877" folderId="810447584330312" treeFullPath="Upstream Power Pack 2019-11-28.Windows 10 Specific 2019-11-28.Windows 10 Policy Mgmt">
          <Body description="">
            <If description="Procedure description: Set Windows 10 Active hours in the registry.&#xD;&#xA;Kaseya customer value: Patching, compliance and troubleshooting.&#xD;&#xA;End user value: Ensure to meet any agreed compliande.&#xD;&#xA;Dependencies: Windows 10 OS.&#xD;&#xA;Usage: Schedule recurringly from Kaseya Policy Manager or Run Now.&#xD;&#xA;Report options: Agent Procedure log. Look for &quot;UPSTREAM: Windows 10 Active Hours Is Now Set To:&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------">
              <Condition name="Windows 32 or 64 Bit Check">
                <Parameter xsi:type="EnumParameter" name="Condition" value="Exists" />
              </Condition>
              <Then>
                <Statement name="SetRegistryValue64" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings\ActiveHoursStart" />
                  <Parameter xsi:type="StringParameter" name="Value" value="6" />
                  <Parameter xsi:type="EnumParameter" name="DataType" value="Integer" />
                </Statement>
                <Statement name="SetRegistryValue64" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings\ActiveHoursEnd" />
                  <Parameter xsi:type="StringParameter" name="Value" value="22" />
                  <Parameter xsi:type="EnumParameter" name="DataType" value="Integer" />
                </Statement>
                <Statement name="GetVariable" continueOnFail="false" osType="10">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="RegistryValue64" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings\ActiveHoursStart" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="GLOBAL:ActiveHoursStart" />
                </Statement>
                <Statement name="GetVariable" continueOnFail="false" osType="10">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="RegistryValue64" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings\ActiveHoursEnd" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="GLOBAL:ActiveHoursEnd" />
                </Statement>
              </Then>
              <Else>
                <Statement name="SetRegistryValue" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings\ActiveHoursStart" />
                  <Parameter xsi:type="StringParameter" name="Value" value="6" />
                  <Parameter xsi:type="EnumParameter" name="DataType" value="Integer" />
                </Statement>
                <Statement name="SetRegistryValue" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="RegistryPath" value="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings\ActiveHoursEnd" />
                  <Parameter xsi:type="StringParameter" name="Value" value="22" />
                  <Parameter xsi:type="EnumParameter" name="DataType" value="Integer" />
                </Statement>
                <Statement name="GetVariable" continueOnFail="false" osType="10">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="RegistryValue" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings\ActiveHoursStart" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="GLOBAL:ActiveHoursStart" />
                </Statement>
                <Statement name="GetVariable" continueOnFail="false" osType="10">
                  <Parameter xsi:type="EnumParameter" name="VariableType" value="RegistryValue" />
                  <Parameter xsi:type="StringParameter" name="SourceContent" value="HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings\ActiveHoursEnd" />
                  <Parameter xsi:type="StringParameter" name="VariableName" value="GLOBAL:ActiveHoursEnd" />
                </Statement>
              </Else>
            </If>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Windows 10 Active Hours Is Now Set To: ActiveHoursStart: #GLOBAL:ActiveHoursStart# ActiveHoursEnd: #GLOBAL:ActiveHoursEnd#" />
            </Statement>
          </Body>
        </Procedure>
        <Procedure name="Policy Mgmt - Windows 10 - Set Powershell Execution Policy To Restricted" treePres="3" id="656214204" folderId="810447584330312" treeFullPath="Upstream Power Pack 2019-11-28.Windows 10 Specific 2019-11-28.Windows 10 Policy Mgmt">
          <Body description="">
            <Statement description="Procedure description: Set the Powershell execution policy to Restricted.&#xD;&#xA;Kaseya customer value: Ensure that Powershell execution policy is set to Restricted.&#xD;&#xA;End user value: Security and compliance.&#xD;&#xA;Usage: To be used in a recurring Kaseya Policy.&#xD;&#xA;Report options: Agent Procedure log. Look for &quot;UPSTREAM: Create System Restore Point:&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------" name="Execute Powershell" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="Set-ExecutionPolicy Restricted" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="False" />
            </Statement>
            <Statement name="Execute Powershell" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="Get-ExecutionPolicy" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="True" />
            </Statement>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Powershell ExectionPolicy after Policy Set: #global:psresult#" />
            </Statement>
          </Body>
        </Procedure>
      </Folder>
      <Folder name="Windows 10 System Management" treePres="3">
        <Procedure name="Sys Mgmt - Windows 10 - Create System Restore Point" treePres="3" id="991702532" folderId="161983539891422" treeFullPath="Upstream Power Pack 2019-11-28.Windows 10 Specific 2019-11-28.Windows 10 System Management">
          <Body description="">
            <Statement description="Procedure description: Creates a system restore point&#xD;&#xA;Kaseya customer value: Ensure that a system restore point exists for troubleshoot ing, rollbacks and prodictivity.&#xD;&#xA;End user value: Ensure that a system restore point exists for troubleshoot ing, rollbacks and prodictivity.&#xD;&#xA;Usage: Schedule from Kaseya Policy Manager or Run Now. Use in conjuction with Patch Managment.&#xD;&#xA;Report options: Agent Procedure log. Look for &quot;UPSTREAM: Create System Restore Point:&quot;.&#xD;&#xA;Maintainer: powerpack@upstream.se&#xD;&#xA;------------------------------------------------------------------------------------------------------------" name="Execute Shell Command - Get Results to Variable" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="Parameter1" value="wmic.exe /Namespace:\\root\default Path SystemRestore Call CreateRestorePoint UpstreamPowerPackRestorePoint, 100, 7" />
              <Parameter xsi:type="StringParameter" name="Parameter2" value="True" />
              <Parameter xsi:type="StringParameter" name="Parameter3" value="System" />
            </Statement>
            <If description="">
              <Condition name="CheckVariable">
                <Parameter xsi:type="StringParameter" name="VariableName" value="#global:cmdresults#" />
                <Parameter xsi:type="EnumParameter" name="Condition" value="Contains" />
                <Parameter xsi:type="StringParameter" name="Value" value="Method execution successful." />
              </Condition>
              <Then>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Create System Restore Point: Successful: #global:cmdresults#" />
                </Statement>
              </Then>
              <Else>
                <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="10">
                  <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Create System Restore Point: Failed: #global:cmdresults#" />
                </Statement>
              </Else>
            </If>
            <Statement name="WriteScriptLogEntry" continueOnFail="false" osType="10">
              <Parameter xsi:type="StringParameter" name="Comment" value="UPSTREAM: Crate System Restore Point: The Agent Procedure hit the last row and will now exit. Evaluate the Agent Procedure log output." />
            </Statement>
          </Body>
        </Procedure>
      </Folder>
    </Folder>
  </Folder>
</ScriptExport>